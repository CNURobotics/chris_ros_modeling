!TypeSpecificationBank
names_to_metamodels:
  actionlib/TestAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TestAction.msg
    name: actionlib/TestAction
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      TestActionGoal action_goal

      TestActionResult action_result

      TestActionFeedback action_feedback

      '
    version: 0
  actionlib/TestActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TestActionFeedback.msg
    name: actionlib/TestActionFeedback
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      TestFeedback feedback

      '
    version: 0
  actionlib/TestActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TestActionGoal.msg
    name: actionlib/TestActionGoal
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      TestGoal goal

      '
    version: 0
  actionlib/TestActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TestActionResult.msg
    name: actionlib/TestActionResult
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      TestResult result

      '
    version: 0
  actionlib/TestFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TestFeedback.msg
    name: actionlib/TestFeedback
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      int32 feedback


      '
    version: 0
  actionlib/TestGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TestGoal.msg
    name: actionlib/TestGoal
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      int32 goal

      '
    version: 0
  actionlib/TestRequestAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TestRequestAction.msg
    name: actionlib/TestRequestAction
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      TestRequestActionGoal action_goal

      TestRequestActionResult action_result

      TestRequestActionFeedback action_feedback

      '
    version: 0
  actionlib/TestRequestActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TestRequestActionFeedback.msg
    name: actionlib/TestRequestActionFeedback
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      TestRequestFeedback feedback

      '
    version: 0
  actionlib/TestRequestActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TestRequestActionGoal.msg
    name: actionlib/TestRequestActionGoal
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      TestRequestGoal goal

      '
    version: 0
  actionlib/TestRequestActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TestRequestActionResult.msg
    name: actionlib/TestRequestActionResult
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      TestRequestResult result

      '
    version: 0
  actionlib/TestRequestFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TestRequestFeedback.msg
    name: actionlib/TestRequestFeedback
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      '
    version: 0
  actionlib/TestRequestGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TestRequestGoal.msg
    name: actionlib/TestRequestGoal
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      int32 TERMINATE_SUCCESS = 0

      int32 TERMINATE_ABORTED = 1

      int32 TERMINATE_REJECTED = 2

      int32 TERMINATE_LOSE = 3

      int32 TERMINATE_DROP = 4

      int32 TERMINATE_EXCEPTION = 5

      int32 terminate_status

      bool ignore_cancel  # If true, ignores requests to cancel

      string result_text

      int32 the_result    # Desired value for the_result in the Result

      bool is_simple_client

      duration delay_accept  # Delays accepting the goal by this amount of time

      duration delay_terminate  # Delays terminating for this amount of time

      duration pause_status  # Pauses the status messages for this amount of time

      '
    version: 0
  actionlib/TestRequestResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TestRequestResult.msg
    name: actionlib/TestRequestResult
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      int32 the_result

      bool is_simple_server

      '
    version: 0
  actionlib/TestResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TestResult.msg
    name: actionlib/TestResult
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      int32 result

      '
    version: 0
  actionlib/TwoIntsAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TwoIntsAction.msg
    name: actionlib/TwoIntsAction
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      TwoIntsActionGoal action_goal

      TwoIntsActionResult action_result

      TwoIntsActionFeedback action_feedback

      '
    version: 0
  actionlib/TwoIntsActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TwoIntsActionFeedback.msg
    name: actionlib/TwoIntsActionFeedback
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      TwoIntsFeedback feedback

      '
    version: 0
  actionlib/TwoIntsActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TwoIntsActionGoal.msg
    name: actionlib/TwoIntsActionGoal
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      TwoIntsGoal goal

      '
    version: 0
  actionlib/TwoIntsActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TwoIntsActionResult.msg
    name: actionlib/TwoIntsActionResult
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      TwoIntsResult result

      '
    version: 0
  actionlib/TwoIntsFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TwoIntsFeedback.msg
    name: actionlib/TwoIntsFeedback
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      '
    version: 0
  actionlib/TwoIntsGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TwoIntsGoal.msg
    name: actionlib/TwoIntsGoal
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      int64 a

      int64 b

      '
    version: 0
  actionlib/TwoIntsResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib/msg/TwoIntsResult.msg
    name: actionlib/TwoIntsResult
    package: actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      int64 sum

      '
    version: 0
  actionlib_msgs/GoalID: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_msgs/msg/GoalID.msg
    name: actionlib_msgs/GoalID
    package: actionlib_msgs
    source: package_modeler
    spec: '

      # The stamp should store the time at which this goal was requested.

      # It is used by an action server when it tries to preempt all

      # goals that were requested before a certain time

      time stamp


      # The id provides a way to associate feedback and

      # result message with specific goal requests. The id

      # specified must be unique.

      string id


      '
    version: 0
  actionlib_msgs/GoalStatus: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_msgs/msg/GoalStatus.msg
    name: actionlib_msgs/GoalStatus
    package: actionlib_msgs
    source: package_modeler
    spec: "\nGoalID goal_id\nuint8 status\nuint8 PENDING         = 0   # The goal\
      \ has yet to be processed by the action server\nuint8 ACTIVE          = 1  \
      \ # The goal is currently being processed by the action server\nuint8 PREEMPTED\
      \       = 2   # The goal received a cancel request after it started executing\n\
      \                            #   and has since completed its execution (Terminal\
      \ State)\nuint8 SUCCEEDED       = 3   # The goal was achieved successfully by\
      \ the action server (Terminal State)\nuint8 ABORTED         = 4   # The goal\
      \ was aborted during execution by the action server due\n                  \
      \          #    to some failure (Terminal State)\nuint8 REJECTED        = 5\
      \   # The goal was rejected by the action server without being processed,\n\
      \                            #    because the goal was unattainable or invalid\
      \ (Terminal State)\nuint8 PREEMPTING      = 6   # The goal received a cancel\
      \ request after it started executing\n                            #    and has\
      \ not yet completed execution\nuint8 RECALLING       = 7   # The goal received\
      \ a cancel request before it started executing,\n                          \
      \  #    but the action server has not yet confirmed that the goal is canceled\n\
      uint8 RECALLED        = 8   # The goal received a cancel request before it started\
      \ executing\n                            #    and was successfully cancelled\
      \ (Terminal State)\nuint8 LOST            = 9   # An action client can determine\
      \ that a goal is LOST. This should not be\n                            #   \
      \ sent over the wire by an action server\n\n#Allow for the user to associate\
      \ a string with GoalStatus for debugging\nstring text\n\n"
    version: 0
  actionlib_msgs/GoalStatusArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_msgs/msg/GoalStatusArray.msg
    name: actionlib_msgs/GoalStatusArray
    package: actionlib_msgs
    source: package_modeler
    spec: '

      # Stores the statuses for goals that are currently being tracked

      # by an action server

      Header header

      GoalStatus[] status_list


      '
    version: 0
  actionlib_tutorials/AveragingAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_tutorials/msg/AveragingAction.msg
    name: actionlib_tutorials/AveragingAction
    package: actionlib_tutorials
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      AveragingActionGoal action_goal

      AveragingActionResult action_result

      AveragingActionFeedback action_feedback

      '
    version: 0
  actionlib_tutorials/AveragingActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_tutorials/msg/AveragingActionFeedback.msg
    name: actionlib_tutorials/AveragingActionFeedback
    package: actionlib_tutorials
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      AveragingFeedback feedback

      '
    version: 0
  actionlib_tutorials/AveragingActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_tutorials/msg/AveragingActionGoal.msg
    name: actionlib_tutorials/AveragingActionGoal
    package: actionlib_tutorials
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      AveragingGoal goal

      '
    version: 0
  actionlib_tutorials/AveragingActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_tutorials/msg/AveragingActionResult.msg
    name: actionlib_tutorials/AveragingActionResult
    package: actionlib_tutorials
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      AveragingResult result

      '
    version: 0
  actionlib_tutorials/AveragingFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_tutorials/msg/AveragingFeedback.msg
    name: actionlib_tutorials/AveragingFeedback
    package: actionlib_tutorials
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      #feedback

      int32 sample

      float32 data

      float32 mean

      float32 std_dev


      '
    version: 0
  actionlib_tutorials/AveragingGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_tutorials/msg/AveragingGoal.msg
    name: actionlib_tutorials/AveragingGoal
    package: actionlib_tutorials
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      #goal definition

      int32 samples

      '
    version: 0
  actionlib_tutorials/AveragingResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_tutorials/msg/AveragingResult.msg
    name: actionlib_tutorials/AveragingResult
    package: actionlib_tutorials
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      #result definition

      float32 mean

      float32 std_dev

      '
    version: 0
  actionlib_tutorials/FibonacciAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_tutorials/msg/FibonacciAction.msg
    name: actionlib_tutorials/FibonacciAction
    package: actionlib_tutorials
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      FibonacciActionGoal action_goal

      FibonacciActionResult action_result

      FibonacciActionFeedback action_feedback

      '
    version: 0
  actionlib_tutorials/FibonacciActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_tutorials/msg/FibonacciActionFeedback.msg
    name: actionlib_tutorials/FibonacciActionFeedback
    package: actionlib_tutorials
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      FibonacciFeedback feedback

      '
    version: 0
  actionlib_tutorials/FibonacciActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_tutorials/msg/FibonacciActionGoal.msg
    name: actionlib_tutorials/FibonacciActionGoal
    package: actionlib_tutorials
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      FibonacciGoal goal

      '
    version: 0
  actionlib_tutorials/FibonacciActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_tutorials/msg/FibonacciActionResult.msg
    name: actionlib_tutorials/FibonacciActionResult
    package: actionlib_tutorials
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      FibonacciResult result

      '
    version: 0
  actionlib_tutorials/FibonacciFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_tutorials/msg/FibonacciFeedback.msg
    name: actionlib_tutorials/FibonacciFeedback
    package: actionlib_tutorials
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      #feedback

      int32[] sequence


      '
    version: 0
  actionlib_tutorials/FibonacciGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_tutorials/msg/FibonacciGoal.msg
    name: actionlib_tutorials/FibonacciGoal
    package: actionlib_tutorials
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      #goal definition

      int32 order

      '
    version: 0
  actionlib_tutorials/FibonacciResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/actionlib_tutorials/msg/FibonacciResult.msg
    name: actionlib_tutorials/FibonacciResult
    package: actionlib_tutorials
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      #result definition

      int32[] sequence

      '
    version: 0
  ar_track_alvar_msgs/AlvarMarker: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/ar_track_alvar_msgs/msg/AlvarMarker.msg
    name: ar_track_alvar_msgs/AlvarMarker
    package: ar_track_alvar_msgs
    source: package_modeler
    spec: '

      Header header

      uint32 id

      uint32 confidence

      geometry_msgs/PoseStamped pose


      '
    version: 0
  ar_track_alvar_msgs/AlvarMarkers: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/ar_track_alvar_msgs/msg/AlvarMarkers.msg
    name: ar_track_alvar_msgs/AlvarMarkers
    package: ar_track_alvar_msgs
    source: package_modeler
    spec: '

      Header header

      AlvarMarker[] markers

      '
    version: 0
  base_local_planner/Position2DInt: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/base_local_planner/msg/Position2DInt.msg
    name: base_local_planner/Position2DInt
    package: base_local_planner
    source: package_modeler
    spec: '

      int64 x

      int64 y'
    version: 0
  bond/Constants: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/bond/msg/Constants.msg
    name: bond/Constants
    package: bond
    source: package_modeler
    spec: '

      float32 DEAD_PUBLISH_PERIOD = 0.05

      float32 DEFAULT_CONNECT_TIMEOUT = 10.0

      float32 DEFAULT_HEARTBEAT_TIMEOUT = 4.0

      float32 DEFAULT_DISCONNECT_TIMEOUT = 2.0

      float32 DEFAULT_HEARTBEAT_PERIOD = 1.0


      string DISABLE_HEARTBEAT_TIMEOUT_PARAM=/bond_disable_heartbeat_timeout'
    version: 0
  bond/Status: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/bond/msg/Status.msg
    name: bond/Status
    package: bond
    source: package_modeler
    spec: '

      Header header

      string id  # ID of the bond

      string instance_id  # Unique ID for an individual in a bond

      bool active


      # Including the timeouts for the bond makes it easier to debug mis-matches

      # between the two sides.

      float32 heartbeat_timeout

      float32 heartbeat_period'
    version: 0
  capabilities/Capability: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/capabilities/msg/Capability.msg
    name: capabilities/Capability
    package: capabilities
    source: package_modeler
    spec: '

      # Capability

      string capability

      # Used provider

      string provider

      '
    version: 0
  capabilities/CapabilityEvent: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/capabilities/msg/CapabilityEvent.msg
    name: capabilities/CapabilityEvent
    package: capabilities
    source: package_modeler
    spec: '

      Header header

      # Capability which this event pretains to

      string capability

      # Capability provider which this event pretains to

      string provider


      # Event types

      string LAUNCHED="launched"

      string STOPPED="stopped"

      string TERMINATED="terminated"

      string SERVER_READY="server_ready"

      # Event type

      string type


      # PID of the related process

      int32 pid

      '
    version: 0
  capabilities/CapabilitySpec: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/capabilities/msg/CapabilitySpec.msg
    name: capabilities/CapabilitySpec
    package: capabilities
    source: package_modeler
    spec: '

      # Package which contains this spec file

      string package


      # Type of spec file, one of:

      #   ''capability_interface''

      #   ''semantic_capability_interface''

      #   ''capability_provider''

      string type


      # Raw string content of the spec file

      string content


      # The name of the default provider (pulled from ROS param''s)

      # (only used for capability_interface specs)

      string default_provider

      '
    version: 0
  capabilities/Remapping: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/capabilities/msg/Remapping.msg
    name: capabilities/Remapping
    package: capabilities
    source: package_modeler
    spec: '

      string key

      string value

      '
    version: 0
  capabilities/RunningCapability: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/capabilities/msg/RunningCapability.msg
    name: capabilities/RunningCapability
    package: capabilities
    source: package_modeler
    spec: '

      # Name and provider of this running capability

      Capability capability

      # Capabilities which depend on this one

      Capability[] dependent_capabilities

      # Message stating what started this capability

      string started_by

      # Process ID of the running provider

      int32 pid

      '
    version: 0
  cartographer_ros_msgs/LandmarkEntry: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/cartographer_ros_msgs/msg/LandmarkEntry.msg
    name: cartographer_ros_msgs/LandmarkEntry
    package: cartographer_ros_msgs
    source: package_modeler
    spec: '

      # 2018 The Cartographer Authors

      #

      # Licensed under the Apache License, Version 2.0 (the "License");

      # you may not use this file except in compliance with the License.

      # You may obtain a copy of the License at

      #

      #      http://www.apache.org/licenses/LICENSE-2.0

      #

      # Unless required by applicable law or agreed to in writing, software

      # distributed under the License is distributed on an "AS IS" BASIS,

      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

      # See the License for the specific language governing permissions and

      # limitations under the License.


      string id

      geometry_msgs/Pose tracking_from_landmark_transform

      float64 translation_weight

      float64 rotation_weight

      '
    version: 0
  cartographer_ros_msgs/LandmarkList: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/cartographer_ros_msgs/msg/LandmarkList.msg
    name: cartographer_ros_msgs/LandmarkList
    package: cartographer_ros_msgs
    source: package_modeler
    spec: '

      # Copyright 2018 The Cartographer Authors

      #

      # Licensed under the Apache License, Version 2.0 (the "License");

      # you may not use this file except in compliance with the License.

      # You may obtain a copy of the License at

      #

      #      http://www.apache.org/licenses/LICENSE-2.0

      #

      # Unless required by applicable law or agreed to in writing, software

      # distributed under the License is distributed on an "AS IS" BASIS,

      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

      # See the License for the specific language governing permissions and

      # limitations under the License.


      std_msgs/Header header

      cartographer_ros_msgs/LandmarkEntry[] landmark

      '
    version: 0
  cartographer_ros_msgs/SensorTopics: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/cartographer_ros_msgs/msg/SensorTopics.msg
    name: cartographer_ros_msgs/SensorTopics
    package: cartographer_ros_msgs
    source: package_modeler
    spec: '

      # Copyright 2016 The Cartographer Authors

      #

      # Licensed under the Apache License, Version 2.0 (the "License");

      # you may not use this file except in compliance with the License.

      # You may obtain a copy of the License at

      #

      #      http://www.apache.org/licenses/LICENSE-2.0

      #

      # Unless required by applicable law or agreed to in writing, software

      # distributed under the License is distributed on an "AS IS" BASIS,

      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

      # See the License for the specific language governing permissions and

      # limitations under the License.


      string laser_scan_topic

      string multi_echo_laser_scan_topic

      string point_cloud2_topic

      string imu_topic

      string odometry_topic

      string nav_sat_fix_topic

      string landmark_topic

      '
    version: 0
  cartographer_ros_msgs/StatusCode: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/cartographer_ros_msgs/msg/StatusCode.msg
    name: cartographer_ros_msgs/StatusCode
    package: cartographer_ros_msgs
    source: package_modeler
    spec: '

      # Copyright 2018 The Cartographer Authors

      #

      # Licensed under the Apache License, Version 2.0 (the "License");

      # you may not use this file except in compliance with the License.

      # You may obtain a copy of the License at

      #

      #      http://www.apache.org/licenses/LICENSE-2.0

      #

      # Unless required by applicable law or agreed to in writing, software

      # distributed under the License is distributed on an "AS IS" BASIS,

      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

      # See the License for the specific language governing permissions and

      # limitations under the License.


      # Definition of status code constants equivalent to the gRPC API.

      # https://developers.google.com/maps-booking/reference/grpc-api/status_codes

      uint8 OK=0

      uint8 CANCELLED=1

      uint8 UNKNOWN=2

      uint8 INVALID_ARGUMENT=3

      uint8 DEADLINE_EXCEEDED=4

      uint8 NOT_FOUND=5

      uint8 ALREADY_EXISTS=6

      uint8 PERMISSION_DENIED=7

      uint8 RESOURCE_EXHAUSTED=8

      uint8 FAILED_PRECONDITION=9

      uint8 ABORTED=10

      uint8 OUT_OF_RANGE=11

      uint8 UNIMPLEMENTED=12

      uint8 INTERNAL=13

      uint8 UNAVAILABLE=14

      uint8 DATA_LOSS=15

      '
    version: 0
  cartographer_ros_msgs/StatusResponse: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/cartographer_ros_msgs/msg/StatusResponse.msg
    name: cartographer_ros_msgs/StatusResponse
    package: cartographer_ros_msgs
    source: package_modeler
    spec: '

      # Copyright 2018 The Cartographer Authors

      #

      # Licensed under the Apache License, Version 2.0 (the "License");

      # you may not use this file except in compliance with the License.

      # You may obtain a copy of the License at

      #

      #      http://www.apache.org/licenses/LICENSE-2.0

      #

      # Unless required by applicable law or agreed to in writing, software

      # distributed under the License is distributed on an "AS IS" BASIS,

      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

      # See the License for the specific language governing permissions and

      # limitations under the License.


      # A common message type to indicate the outcome of a service call.

      uint8 code

      string message

      '
    version: 0
  cartographer_ros_msgs/SubmapEntry: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/cartographer_ros_msgs/msg/SubmapEntry.msg
    name: cartographer_ros_msgs/SubmapEntry
    package: cartographer_ros_msgs
    source: package_modeler
    spec: '

      # Copyright 2016 The Cartographer Authors

      #

      # Licensed under the Apache License, Version 2.0 (the "License");

      # you may not use this file except in compliance with the License.

      # You may obtain a copy of the License at

      #

      #      http://www.apache.org/licenses/LICENSE-2.0

      #

      # Unless required by applicable law or agreed to in writing, software

      # distributed under the License is distributed on an "AS IS" BASIS,

      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

      # See the License for the specific language governing permissions and

      # limitations under the License.


      int32 trajectory_id

      int32 submap_index

      int32 submap_version

      geometry_msgs/Pose pose

      '
    version: 0
  cartographer_ros_msgs/SubmapList: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/cartographer_ros_msgs/msg/SubmapList.msg
    name: cartographer_ros_msgs/SubmapList
    package: cartographer_ros_msgs
    source: package_modeler
    spec: '

      # Copyright 2016 The Cartographer Authors

      #

      # Licensed under the Apache License, Version 2.0 (the "License");

      # you may not use this file except in compliance with the License.

      # You may obtain a copy of the License at

      #

      #      http://www.apache.org/licenses/LICENSE-2.0

      #

      # Unless required by applicable law or agreed to in writing, software

      # distributed under the License is distributed on an "AS IS" BASIS,

      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

      # See the License for the specific language governing permissions and

      # limitations under the License.


      std_msgs/Header header

      cartographer_ros_msgs/SubmapEntry[] submap

      '
    version: 0
  cartographer_ros_msgs/SubmapTexture: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/cartographer_ros_msgs/msg/SubmapTexture.msg
    name: cartographer_ros_msgs/SubmapTexture
    package: cartographer_ros_msgs
    source: package_modeler
    spec: '

      # Copyright 2017 The Cartographer Authors

      #

      # Licensed under the Apache License, Version 2.0 (the "License");

      # you may not use this file except in compliance with the License.

      # You may obtain a copy of the License at

      #

      #      http://www.apache.org/licenses/LICENSE-2.0

      #

      # Unless required by applicable law or agreed to in writing, software

      # distributed under the License is distributed on an "AS IS" BASIS,

      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

      # See the License for the specific language governing permissions and

      # limitations under the License.


      uint8[] cells

      int32 width

      int32 height

      float64 resolution

      geometry_msgs/Pose slice_pose

      '
    version: 0
  cartographer_ros_msgs/TrajectoryOptions: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/cartographer_ros_msgs/msg/TrajectoryOptions.msg
    name: cartographer_ros_msgs/TrajectoryOptions
    package: cartographer_ros_msgs
    source: package_modeler
    spec: '

      # Copyright 2016 The Cartographer Authors

      #

      # Licensed under the Apache License, Version 2.0 (the "License");

      # you may not use this file except in compliance with the License.

      # You may obtain a copy of the License at

      #

      #      http://www.apache.org/licenses/LICENSE-2.0

      #

      # Unless required by applicable law or agreed to in writing, software

      # distributed under the License is distributed on an "AS IS" BASIS,

      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

      # See the License for the specific language governing permissions and

      # limitations under the License.


      string tracking_frame

      string published_frame

      string odom_frame

      bool provide_odom_frame

      bool use_odometry

      bool use_nav_sat

      bool use_landmarks

      bool publish_frame_projected_to_2d

      int32 num_laser_scans

      int32 num_multi_echo_laser_scans

      int32 num_subdivisions_per_laser_scan

      int32 num_point_clouds

      float64 rangefinder_sampling_ratio

      float64 odometry_sampling_ratio

      float64 fixed_frame_pose_sampling_ratio

      float64 imu_sampling_ratio

      float64 landmarks_sampling_ratio


      # This is a binary-encoded

      # ''cartographer.mapping.proto.TrajectoryBuilderOptions'' proto.

      string trajectory_builder_options_proto

      '
    version: 0
  control_msgs/FollowJointTrajectoryAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/FollowJointTrajectoryAction.msg
    name: control_msgs/FollowJointTrajectoryAction
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      FollowJointTrajectoryActionGoal action_goal

      FollowJointTrajectoryActionResult action_result

      FollowJointTrajectoryActionFeedback action_feedback

      '
    version: 0
  control_msgs/FollowJointTrajectoryActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/FollowJointTrajectoryActionFeedback.msg
    name: control_msgs/FollowJointTrajectoryActionFeedback
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      FollowJointTrajectoryFeedback feedback

      '
    version: 0
  control_msgs/FollowJointTrajectoryActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/FollowJointTrajectoryActionGoal.msg
    name: control_msgs/FollowJointTrajectoryActionGoal
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      FollowJointTrajectoryGoal goal

      '
    version: 0
  control_msgs/FollowJointTrajectoryActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/FollowJointTrajectoryActionResult.msg
    name: control_msgs/FollowJointTrajectoryActionResult
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      FollowJointTrajectoryResult result

      '
    version: 0
  control_msgs/FollowJointTrajectoryFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/FollowJointTrajectoryFeedback.msg
    name: control_msgs/FollowJointTrajectoryFeedback
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      Header header

      string[] joint_names

      trajectory_msgs/JointTrajectoryPoint desired

      trajectory_msgs/JointTrajectoryPoint actual

      trajectory_msgs/JointTrajectoryPoint error


      '
    version: 0
  control_msgs/FollowJointTrajectoryGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/FollowJointTrajectoryGoal.msg
    name: control_msgs/FollowJointTrajectoryGoal
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      # The joint trajectory to follow

      trajectory_msgs/JointTrajectory trajectory


      # Tolerances for the trajectory.  If the measured joint values fall

      # outside the tolerances the trajectory goal is aborted.  Any

      # tolerances that are not specified (by being omitted or set to 0) are

      # set to the defaults for the action server (often taken from the

      # parameter server).


      # Tolerances applied to the joints as the trajectory is executed.  If

      # violated, the goal aborts with error_code set to

      # PATH_TOLERANCE_VIOLATED.

      JointTolerance[] path_tolerance


      # To report success, the joints must be within goal_tolerance of the

      # final trajectory value.  The goal must be achieved by time the

      # trajectory ends plus goal_time_tolerance.  (goal_time_tolerance

      # allows some leeway in time, so that the trajectory goal can still

      # succeed even if the joints reach the goal some time after the

      # precise end time of the trajectory).

      #

      # If the joints are not within goal_tolerance after "trajectory finish

      # time" + goal_time_tolerance, the goal aborts with error_code set to

      # GOAL_TOLERANCE_VIOLATED

      JointTolerance[] goal_tolerance

      duration goal_time_tolerance


      '
    version: 0
  control_msgs/FollowJointTrajectoryResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/FollowJointTrajectoryResult.msg
    name: control_msgs/FollowJointTrajectoryResult
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      int32 error_code

      int32 SUCCESSFUL = 0

      int32 INVALID_GOAL = -1

      int32 INVALID_JOINTS = -2

      int32 OLD_HEADER_TIMESTAMP = -3

      int32 PATH_TOLERANCE_VIOLATED = -4

      int32 GOAL_TOLERANCE_VIOLATED = -5


      # Human readable description of the error code. Contains complementary

      # information that is especially useful when execution fails, for instance:

      # - INVALID_GOAL: The reason for the invalid goal (e.g., the requested

      #   trajectory is in the past).

      # - INVALID_JOINTS: The mismatch between the expected controller joints

      #   and those provided in the goal.

      # - PATH_TOLERANCE_VIOLATED and GOAL_TOLERANCE_VIOLATED: Which joint

      #   violated which tolerance, and by how much.

      string error_string


      '
    version: 0
  control_msgs/GripperCommand: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/GripperCommand.msg
    name: control_msgs/GripperCommand
    package: control_msgs
    source: package_modeler
    spec: '

      float64 position

      float64 max_effort

      '
    version: 0
  control_msgs/GripperCommandAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/GripperCommandAction.msg
    name: control_msgs/GripperCommandAction
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      GripperCommandActionGoal action_goal

      GripperCommandActionResult action_result

      GripperCommandActionFeedback action_feedback

      '
    version: 0
  control_msgs/GripperCommandActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/GripperCommandActionFeedback.msg
    name: control_msgs/GripperCommandActionFeedback
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      GripperCommandFeedback feedback

      '
    version: 0
  control_msgs/GripperCommandActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/GripperCommandActionGoal.msg
    name: control_msgs/GripperCommandActionGoal
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      GripperCommandGoal goal

      '
    version: 0
  control_msgs/GripperCommandActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/GripperCommandActionResult.msg
    name: control_msgs/GripperCommandActionResult
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      GripperCommandResult result

      '
    version: 0
  control_msgs/GripperCommandFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/GripperCommandFeedback.msg
    name: control_msgs/GripperCommandFeedback
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      float64 position  # The current gripper gap size (in meters)

      float64 effort    # The current effort exerted (in Newtons)

      bool stalled      # True iff the gripper is exerting max effort and not moving

      bool reached_goal # True iff the gripper position has reached the commanded
      setpoint


      '
    version: 0
  control_msgs/GripperCommandGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/GripperCommandGoal.msg
    name: control_msgs/GripperCommandGoal
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      GripperCommand command

      '
    version: 0
  control_msgs/GripperCommandResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/GripperCommandResult.msg
    name: control_msgs/GripperCommandResult
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      float64 position  # The current gripper gap size (in meters)

      float64 effort    # The current effort exerted (in Newtons)

      bool stalled      # True iff the gripper is exerting max effort and not moving

      bool reached_goal # True iff the gripper position has reached the commanded
      setpoint

      '
    version: 0
  control_msgs/JointControllerState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/JointControllerState.msg
    name: control_msgs/JointControllerState
    package: control_msgs
    source: package_modeler
    spec: '

      # This message presents current controller state of one joint.


      # Header timestamp should be update time of controller state

      Header header


      # The set point, that is, desired state.

      float64 set_point


      # Current value of the process (ie: latest sensor measurement on the controlled
      value).

      float64 process_value


      # First time-derivative of the process value.

      float64 process_value_dot


      # The error of the controlled value, essentially process_value - set_point (for
      a regular PID implementation).

      float64 error


      # Time between two consecutive updates/execution of the control law.

      float64 time_step


      # Current output of the controller.

      float64 command


      # Current PID parameters of the controller.

      float64 p

      float64 i

      float64 d

      float64 i_clamp

      bool antiwindup

      '
    version: 0
  control_msgs/JointJog: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/JointJog.msg
    name: control_msgs/JointJog
    package: control_msgs
    source: package_modeler
    spec: '

      # Used in time-stamping the message.

      Header header


      # Name list of the joints. You don''t need to specify all joints of the

      # robot. Joint names are case-sensitive.

      string[] joint_names


      # A position command to the joints listed in joint_names.

      # The order must be identical.

      # Units are meters or radians.

      # If displacements and velocities are filled, a profiled motion is requested.

      float64[] displacements # or position_deltas


      # A velocity command to the joints listed in joint_names.

      # The order must be identical.

      # Units are m/s or rad/s.

      # If displacements and velocities are filled, a profiled motion is requested.

      float64[] velocities


      float64 duration

      '
    version: 0
  control_msgs/JointTolerance: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/JointTolerance.msg
    name: control_msgs/JointTolerance
    package: control_msgs
    source: package_modeler
    spec: "\n# The tolerances specify the amount the position, velocity, and\n# accelerations\
      \ can vary from the setpoints.  For example, in the case\n# of trajectory control,\
      \ when the actual position varies beyond\n# (desired position + position tolerance),\
      \ the trajectory goal may\n# abort.\n# \n# There are two special values for\
      \ tolerances:\n#  * 0 - The tolerance is unspecified and will remain at whatever\
      \ the default is\n#  * -1 - The tolerance is \"erased\".  If there was a default,\
      \ the joint will be\n#         allowed to move without restriction.\n\nstring\
      \ name\nfloat64 position  # in radians or meters (for a revolute or prismatic\
      \ joint, respectively)\nfloat64 velocity  # in rad/sec or m/sec\nfloat64 acceleration\
      \  # in rad/sec^2 or m/sec^2\n"
    version: 0
  control_msgs/JointTrajectoryAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/JointTrajectoryAction.msg
    name: control_msgs/JointTrajectoryAction
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      JointTrajectoryActionGoal action_goal

      JointTrajectoryActionResult action_result

      JointTrajectoryActionFeedback action_feedback

      '
    version: 0
  control_msgs/JointTrajectoryActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/JointTrajectoryActionFeedback.msg
    name: control_msgs/JointTrajectoryActionFeedback
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      JointTrajectoryFeedback feedback

      '
    version: 0
  control_msgs/JointTrajectoryActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/JointTrajectoryActionGoal.msg
    name: control_msgs/JointTrajectoryActionGoal
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      JointTrajectoryGoal goal

      '
    version: 0
  control_msgs/JointTrajectoryActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/JointTrajectoryActionResult.msg
    name: control_msgs/JointTrajectoryActionResult
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      JointTrajectoryResult result

      '
    version: 0
  control_msgs/JointTrajectoryControllerState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/JointTrajectoryControllerState.msg
    name: control_msgs/JointTrajectoryControllerState
    package: control_msgs
    source: package_modeler
    spec: '

      Header header

      string[] joint_names

      trajectory_msgs/JointTrajectoryPoint desired

      trajectory_msgs/JointTrajectoryPoint actual

      trajectory_msgs/JointTrajectoryPoint error  # Redundant, but useful

      '
    version: 0
  control_msgs/JointTrajectoryFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/JointTrajectoryFeedback.msg
    name: control_msgs/JointTrajectoryFeedback
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      '
    version: 0
  control_msgs/JointTrajectoryGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/JointTrajectoryGoal.msg
    name: control_msgs/JointTrajectoryGoal
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      trajectory_msgs/JointTrajectory trajectory

      '
    version: 0
  control_msgs/JointTrajectoryResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/JointTrajectoryResult.msg
    name: control_msgs/JointTrajectoryResult
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      '
    version: 0
  control_msgs/PidState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/PidState.msg
    name: control_msgs/PidState
    package: control_msgs
    source: package_modeler
    spec: '

      Header header

      duration timestep

      float64 error

      float64 error_dot

      float64 p_error

      float64 i_error

      float64 d_error

      float64 p_term

      float64 i_term

      float64 d_term

      float64 i_max

      float64 i_min

      float64 output

      '
    version: 0
  control_msgs/PointHeadAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/PointHeadAction.msg
    name: control_msgs/PointHeadAction
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      PointHeadActionGoal action_goal

      PointHeadActionResult action_result

      PointHeadActionFeedback action_feedback

      '
    version: 0
  control_msgs/PointHeadActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/PointHeadActionFeedback.msg
    name: control_msgs/PointHeadActionFeedback
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      PointHeadFeedback feedback

      '
    version: 0
  control_msgs/PointHeadActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/PointHeadActionGoal.msg
    name: control_msgs/PointHeadActionGoal
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      PointHeadGoal goal

      '
    version: 0
  control_msgs/PointHeadActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/PointHeadActionResult.msg
    name: control_msgs/PointHeadActionResult
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      PointHeadResult result

      '
    version: 0
  control_msgs/PointHeadFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/PointHeadFeedback.msg
    name: control_msgs/PointHeadFeedback
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      float64 pointing_angle_error


      '
    version: 0
  control_msgs/PointHeadGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/PointHeadGoal.msg
    name: control_msgs/PointHeadGoal
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      geometry_msgs/PointStamped target

      geometry_msgs/Vector3 pointing_axis

      string pointing_frame

      duration min_duration

      float64 max_velocity

      '
    version: 0
  control_msgs/PointHeadResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/PointHeadResult.msg
    name: control_msgs/PointHeadResult
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      '
    version: 0
  control_msgs/SingleJointPositionAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/SingleJointPositionAction.msg
    name: control_msgs/SingleJointPositionAction
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      SingleJointPositionActionGoal action_goal

      SingleJointPositionActionResult action_result

      SingleJointPositionActionFeedback action_feedback

      '
    version: 0
  control_msgs/SingleJointPositionActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/SingleJointPositionActionFeedback.msg
    name: control_msgs/SingleJointPositionActionFeedback
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      SingleJointPositionFeedback feedback

      '
    version: 0
  control_msgs/SingleJointPositionActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/SingleJointPositionActionGoal.msg
    name: control_msgs/SingleJointPositionActionGoal
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      SingleJointPositionGoal goal

      '
    version: 0
  control_msgs/SingleJointPositionActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/SingleJointPositionActionResult.msg
    name: control_msgs/SingleJointPositionActionResult
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      SingleJointPositionResult result

      '
    version: 0
  control_msgs/SingleJointPositionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/SingleJointPositionFeedback.msg
    name: control_msgs/SingleJointPositionFeedback
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      Header header

      float64 position

      float64 velocity

      float64 error


      '
    version: 0
  control_msgs/SingleJointPositionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/SingleJointPositionGoal.msg
    name: control_msgs/SingleJointPositionGoal
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      float64 position

      duration min_duration

      float64 max_velocity

      '
    version: 0
  control_msgs/SingleJointPositionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/control_msgs/msg/SingleJointPositionResult.msg
    name: control_msgs/SingleJointPositionResult
    package: control_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      '
    version: 0
  controller_manager_msgs/ControllerState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/controller_manager_msgs/msg/ControllerState.msg
    name: controller_manager_msgs/ControllerState
    package: controller_manager_msgs
    source: package_modeler
    spec: '

      string name

      string state

      string type

      controller_manager_msgs/HardwareInterfaceResources[] claimed_resources

      '
    version: 0
  controller_manager_msgs/ControllerStatistics: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/controller_manager_msgs/msg/ControllerStatistics.msg
    name: controller_manager_msgs/ControllerStatistics
    package: controller_manager_msgs
    source: package_modeler
    spec: '

      # This message contains the state of one realtime controller

      # that was spawned in the controller manager


      # the name of the controller

      string name


      # the type of the controller

      string type


      # the time at which these controller statistics were measured

      time timestamp


      # bool that indicates if the controller is currently

      # in a running or a stopped state

      bool running


      # the maximum time the update loop of the controller ever needed to complete

      duration max_time


      # the average time the update loop of the controller needs to complete.

      # the average is computed in a sliding time window.

      duration mean_time


      # the variance on the time the update loop of the controller needs to complete.

      # the variance applies to a sliding time window.

      duration variance_time


      # the number of times this controller broke the realtime loop

      int32 num_control_loop_overruns


      # the timestamp of the last time this controller broke the realtime loop

      time time_last_control_loop_overrun'
    version: 0
  controller_manager_msgs/ControllersStatistics: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/controller_manager_msgs/msg/ControllersStatistics.msg
    name: controller_manager_msgs/ControllersStatistics
    package: controller_manager_msgs
    source: package_modeler
    spec: '

      std_msgs/Header header

      controller_manager_msgs/ControllerStatistics[] controller

      '
    version: 0
  controller_manager_msgs/HardwareInterfaceResources: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/controller_manager_msgs/msg/HardwareInterfaceResources.msg
    name: controller_manager_msgs/HardwareInterfaceResources
    package: controller_manager_msgs
    source: package_modeler
    spec: '

      # Type of hardware interface

      string hardware_interface

      # List of resources belonging to the hardware interface

      string[] resources

      '
    version: 0
  costmap_2d/VoxelGrid: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/costmap_2d/msg/VoxelGrid.msg
    name: costmap_2d/VoxelGrid
    package: costmap_2d
    source: package_modeler
    spec: '

      Header header

      uint32[] data

      geometry_msgs/Point32 origin

      geometry_msgs/Vector3 resolutions

      uint32 size_x

      uint32 size_y

      uint32 size_z


      '
    version: 0
  diagnostic_msgs/DiagnosticArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/diagnostic_msgs/msg/DiagnosticArray.msg
    name: diagnostic_msgs/DiagnosticArray
    package: diagnostic_msgs
    source: package_modeler
    spec: '

      # This message is used to send diagnostic information about the state of the
      robot

      Header header #for timestamp

      DiagnosticStatus[] status # an array of components being reported on'
    version: 0
  diagnostic_msgs/DiagnosticStatus: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/diagnostic_msgs/msg/DiagnosticStatus.msg
    name: diagnostic_msgs/DiagnosticStatus
    package: diagnostic_msgs
    source: package_modeler
    spec: "\n# This message holds the status of an individual component of the robot.\n\
      # \n\n# Possible levels of operations\nbyte OK=0\nbyte WARN=1\nbyte ERROR=2\n\
      byte STALE=3\n\nbyte level # level of operation enumerated above \nstring name\
      \ # a description of the test/component reporting\nstring message # a description\
      \ of the status\nstring hardware_id # a hardware unique string\nKeyValue[] values\
      \ # an array of values associated with the status\n\n"
    version: 0
  diagnostic_msgs/KeyValue: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/diagnostic_msgs/msg/KeyValue.msg
    name: diagnostic_msgs/KeyValue
    package: diagnostic_msgs
    source: package_modeler
    spec: '

      string key # what to label this value when viewing

      string value # a value to track over time

      '
    version: 0
  dynamic_reconfigure/BoolParameter: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/dynamic_reconfigure/msg/BoolParameter.msg
    name: dynamic_reconfigure/BoolParameter
    package: dynamic_reconfigure
    source: package_modeler
    spec: '

      string name

      bool value

      '
    version: 0
  dynamic_reconfigure/Config: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/dynamic_reconfigure/msg/Config.msg
    name: dynamic_reconfigure/Config
    package: dynamic_reconfigure
    source: package_modeler
    spec: '

      BoolParameter[] bools

      IntParameter[] ints

      StrParameter[] strs

      DoubleParameter[] doubles

      GroupState[] groups

      '
    version: 0
  dynamic_reconfigure/ConfigDescription: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/dynamic_reconfigure/msg/ConfigDescription.msg
    name: dynamic_reconfigure/ConfigDescription
    package: dynamic_reconfigure
    source: package_modeler
    spec: '

      Group[] groups

      Config max

      Config min

      Config dflt

      '
    version: 0
  dynamic_reconfigure/DoubleParameter: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/dynamic_reconfigure/msg/DoubleParameter.msg
    name: dynamic_reconfigure/DoubleParameter
    package: dynamic_reconfigure
    source: package_modeler
    spec: '

      string name

      float64 value

      '
    version: 0
  dynamic_reconfigure/Group: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/dynamic_reconfigure/msg/Group.msg
    name: dynamic_reconfigure/Group
    package: dynamic_reconfigure
    source: package_modeler
    spec: "\nstring name\nstring type\nParamDescription[] parameters\nint32 parent\
      \ \nint32 id\n"
    version: 0
  dynamic_reconfigure/GroupState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/dynamic_reconfigure/msg/GroupState.msg
    name: dynamic_reconfigure/GroupState
    package: dynamic_reconfigure
    source: package_modeler
    spec: '

      string name

      bool state

      int32 id

      int32 parent

      '
    version: 0
  dynamic_reconfigure/IntParameter: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/dynamic_reconfigure/msg/IntParameter.msg
    name: dynamic_reconfigure/IntParameter
    package: dynamic_reconfigure
    source: package_modeler
    spec: '

      string name

      int32 value

      '
    version: 0
  dynamic_reconfigure/ParamDescription: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/dynamic_reconfigure/msg/ParamDescription.msg
    name: dynamic_reconfigure/ParamDescription
    package: dynamic_reconfigure
    source: package_modeler
    spec: '

      string name

      string type

      uint32 level

      string description

      string edit_method

      '
    version: 0
  dynamic_reconfigure/SensorLevels: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/dynamic_reconfigure/msg/SensorLevels.msg
    name: dynamic_reconfigure/SensorLevels
    package: dynamic_reconfigure
    source: package_modeler
    spec: '

      # This message is deprecated, please use driver_base/SensorLevels instead.


      byte RECONFIGURE_CLOSE = 3  # Parameters that need a sensor to be stopped completely
      when changed

      byte RECONFIGURE_STOP = 1  # Parameters that need a sensor to stop streaming
      when changed

      byte RECONFIGURE_RUNNING = 0 # Parameters that can be changed while a sensor
      is streaming

      '
    version: 0
  dynamic_reconfigure/StrParameter: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/dynamic_reconfigure/msg/StrParameter.msg
    name: dynamic_reconfigure/StrParameter
    package: dynamic_reconfigure
    source: package_modeler
    spec: '

      string name

      string value

      '
    version: 0
  gazebo_msgs/ContactState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/gazebo_msgs/msg/ContactState.msg
    name: gazebo_msgs/ContactState
    package: gazebo_msgs
    source: package_modeler
    spec: '

      string info                                   # text info on this contact

      string collision1_name                        # name of contact collision1

      string collision2_name                        # name of contact collision2

      geometry_msgs/Wrench[] wrenches               # list of forces/torques

      geometry_msgs/Wrench total_wrench             # sum of forces/torques in every
      DOF

      geometry_msgs/Vector3[] contact_positions     # list of contact position

      geometry_msgs/Vector3[] contact_normals       # list of contact normals

      float64[] depths                              # list of penetration depths

      '
    version: 0
  gazebo_msgs/ContactsState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/gazebo_msgs/msg/ContactsState.msg
    name: gazebo_msgs/ContactsState
    package: gazebo_msgs
    source: package_modeler
    spec: '

      Header header                                   # stamp

      gazebo_msgs/ContactState[] states            # array of geom pairs in contact

      '
    version: 0
  gazebo_msgs/LinkState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/gazebo_msgs/msg/LinkState.msg
    name: gazebo_msgs/LinkState
    package: gazebo_msgs
    source: package_modeler
    spec: "\n# @todo: FIXME: sets pose and twist of a link.  All children link poses/twists\
      \ of the URDF tree are not updated accordingly, but should be.\nstring link_name\
      \            # link name, link_names are in gazebo scoped name notation, [model_name::body_name]\n\
      geometry_msgs/Pose pose     # desired pose in reference frame\ngeometry_msgs/Twist\
      \ twist   # desired twist in reference frame\nstring reference_frame      #\
      \ set pose/twist relative to the frame of this link/body\n                 \
      \           # leave empty or \"world\" or \"map\" defaults to world-frame\n"
    version: 0
  gazebo_msgs/LinkStates: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/gazebo_msgs/msg/LinkStates.msg
    name: gazebo_msgs/LinkStates
    package: gazebo_msgs
    source: package_modeler
    spec: '

      # broadcast all link states in world frame

      string[] name                 # link names

      geometry_msgs/Pose[] pose     # desired pose in world frame

      geometry_msgs/Twist[] twist   # desired twist in world frame

      '
    version: 0
  gazebo_msgs/ModelState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/gazebo_msgs/msg/ModelState.msg
    name: gazebo_msgs/ModelState
    package: gazebo_msgs
    source: package_modeler
    spec: "\n# Set Gazebo Model pose and twist\nstring model_name           # model\
      \ to set state (pose and twist)\ngeometry_msgs/Pose pose     # desired pose\
      \ in reference frame\ngeometry_msgs/Twist twist   # desired twist in reference\
      \ frame\nstring reference_frame      # set pose/twist relative to the frame\
      \ of this entity (Body/Model)\n                            # leave empty or\
      \ \"world\" or \"map\" defaults to world-frame\n\n"
    version: 0
  gazebo_msgs/ModelStates: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/gazebo_msgs/msg/ModelStates.msg
    name: gazebo_msgs/ModelStates
    package: gazebo_msgs
    source: package_modeler
    spec: '

      # broadcast all model states in world frame

      string[] name                 # model names

      geometry_msgs/Pose[] pose     # desired pose in world frame

      geometry_msgs/Twist[] twist   # desired twist in world frame

      '
    version: 0
  gazebo_msgs/ODEJointProperties: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/gazebo_msgs/msg/ODEJointProperties.msg
    name: gazebo_msgs/ODEJointProperties
    package: gazebo_msgs
    source: package_modeler
    spec: '

      # access to low level joint properties, change these at your own risk

      float64[] damping             # joint damping

      float64[] hiStop              # joint limit

      float64[] loStop              # joint limit

      float64[] erp                 # set joint erp

      float64[] cfm                 # set joint cfm

      float64[] stop_erp            # set joint erp for joint limit "contact" joint

      float64[] stop_cfm            # set joint cfm for joint limit "contact" joint

      float64[] fudge_factor        # joint fudge_factor applied at limits, see ODE
      manual for info.

      float64[] fmax                # ode joint param fmax

      float64[] vel                 # ode joint param vel

      '
    version: 0
  gazebo_msgs/ODEPhysics: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/gazebo_msgs/msg/ODEPhysics.msg
    name: gazebo_msgs/ODEPhysics
    package: gazebo_msgs
    source: package_modeler
    spec: '

      bool auto_disable_bodies           # enable auto disabling of bodies, default
      false

      uint32 sor_pgs_precon_iters        # preconditioning inner iterations when uisng
      projected Gauss Seidel

      uint32 sor_pgs_iters               # inner iterations when uisng projected Gauss
      Seidel

      float64 sor_pgs_w                  # relaxation parameter when using projected
      Gauss Seidel, 1 = no relaxation

      float64 sor_pgs_rms_error_tol      # rms error tolerance before stopping inner
      iterations

      float64 contact_surface_layer      # contact "dead-band" width

      float64 contact_max_correcting_vel # contact maximum correction velocity

      float64 cfm                        # global constraint force mixing

      float64 erp                        # global error reduction parameter

      uint32 max_contacts                # maximum contact joints between two geoms

      '
    version: 0
  gazebo_msgs/WorldState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/gazebo_msgs/msg/WorldState.msg
    name: gazebo_msgs/WorldState
    package: gazebo_msgs
    source: package_modeler
    spec: '

      # This is a message that holds data necessary to reconstruct a snapshot of the
      world

      #

      # = Approach to Message Passing =

      # The state of the world is defined by either

      #   1. Inertial Model pose, twist

      #      * kinematic data - connectivity graph from Model to each Link

      #      * joint angles

      #      * joint velocities

      #      * Applied forces - Body wrench

      #        * relative transform from Body to each collision Geom

      # Or

      #   2. Inertial (absolute) Body pose, twist, wrench

      #      * relative transform from Body to each collision Geom - constant, so
      not sent over wire

      #      * back compute from canonical body info to get Model pose and twist.

      #

      # Chooing (2.) because it matches most physics engines out there

      #   and is simpler.

      #

      # = Future =

      # Consider impacts on using reduced coordinates / graph (parent/child links)
      approach

      #   constraint and physics solvers.

      #

      # = Application =

      # This message is used to do the following:

      #   * reconstruct the world and objects for sensor generation

      #   * stop / start simulation - need pose, twist, wrench of each body

      #   * collision detection - need pose of each collision geometry.  velocity/acceleration
      if

      #

      # = Assumptions =

      # Assuming that each (physics) processor node locally already has

      #   * collision information - Trimesh for Geoms, etc

      #   * relative transforms from Body to Geom - this is assumed to be fixed, do
      not send oved wire

      #   * inertial information - does not vary in time

      #   * visual information - does not vary in time

      #


      Header header


      string[] name

      geometry_msgs/Pose[] pose

      geometry_msgs/Twist[] twist

      geometry_msgs/Wrench[] wrench

      '
    version: 0
  geographic_msgs/BoundingBox: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geographic_msgs/msg/BoundingBox.msg
    name: geographic_msgs/BoundingBox
    package: geographic_msgs
    source: package_modeler
    spec: "\n# Geographic map bounding box. \n#\n# The two GeoPoints denote diagonally\
      \ opposite corners of the box.\n#\n# If min_pt.latitude is NaN, the bounding\
      \ box is \"global\", matching\n# any valid latitude, longitude and altitude.\n\
      #\n# If min_pt.altitude is NaN, the bounding box is two-dimensional and\n# matches\
      \ any altitude within the specified latitude and longitude\n# range.\n\nGeoPoint\
      \ min_pt         # lowest and most Southwestern corner\nGeoPoint max_pt    \
      \     # highest and most Northeastern corner\n"
    version: 0
  geographic_msgs/GeoPath: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geographic_msgs/msg/GeoPath.msg
    name: geographic_msgs/GeoPath
    package: geographic_msgs
    source: package_modeler
    spec: '

      std_msgs/Header header

      geographic_msgs/GeoPoseStamped[] poses

      '
    version: 0
  geographic_msgs/GeoPoint: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geographic_msgs/msg/GeoPoint.msg
    name: geographic_msgs/GeoPoint
    package: geographic_msgs
    source: package_modeler
    spec: '

      # Geographic point, using the WGS 84 reference ellipsoid.


      # Latitude [degrees]. Positive is north of equator; negative is south

      # (-90 <= latitude <= +90).

      float64 latitude


      # Longitude [degrees]. Positive is east of prime meridian; negative is

      # west (-180 <= longitude <= +180). At the poles, latitude is -90 or

      # +90, and longitude is irrelevant, but must be in range.

      float64 longitude


      # Altitude [m]. Positive is above the WGS 84 ellipsoid (NaN if unspecified).

      float64 altitude

      '
    version: 0
  geographic_msgs/GeoPointStamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geographic_msgs/msg/GeoPointStamped.msg
    name: geographic_msgs/GeoPointStamped
    package: geographic_msgs
    source: package_modeler
    spec: '

      Header header

      geographic_msgs/GeoPoint position

      '
    version: 0
  geographic_msgs/GeoPose: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geographic_msgs/msg/GeoPose.msg
    name: geographic_msgs/GeoPose
    package: geographic_msgs
    source: package_modeler
    spec: '

      # Geographic pose, using the WGS 84 reference ellipsoid.

      #

      # Orientation uses the East-North-Up (ENU) frame of reference.

      # (But, what about singularities at the poles?)


      GeoPoint position

      geometry_msgs/Quaternion orientation

      '
    version: 0
  geographic_msgs/GeoPoseStamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geographic_msgs/msg/GeoPoseStamped.msg
    name: geographic_msgs/GeoPoseStamped
    package: geographic_msgs
    source: package_modeler
    spec: '

      Header header

      geographic_msgs/GeoPose pose

      '
    version: 0
  geographic_msgs/GeographicMap: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geographic_msgs/msg/GeographicMap.msg
    name: geographic_msgs/GeographicMap
    package: geographic_msgs
    source: package_modeler
    spec: "\n# Geographic map for a specified region.\n\nHeader header           \
      \ # stamp specifies time\n                         # frame_id (normally /map)\n\
      \nuuid_msgs/UniqueID id    # identifier for this map\nBoundingBox  bounds  \
      \    # 2D bounding box containing map\n\nWayPoint[]   points      # way-points\n\
      MapFeature[] features    # map features\nKeyValue[]   props       # map properties\n"
    version: 0
  geographic_msgs/GeographicMapChanges: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geographic_msgs/msg/GeographicMapChanges.msg
    name: geographic_msgs/GeographicMapChanges
    package: geographic_msgs
    source: package_modeler
    spec: "\n# A list of geographic map changes.\n\nHeader header                \
      \   # stamp specifies time of change\n                                # frame_id\
      \ (normally /map)\n\nGeographicMap diffs             # new and changed points\
      \ and features\nuuid_msgs/UniqueID[] deletes    # deleted map components\n"
    version: 0
  geographic_msgs/KeyValue: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geographic_msgs/msg/KeyValue.msg
    name: geographic_msgs/KeyValue
    package: geographic_msgs
    source: package_modeler
    spec: '

      # Geographic map tag (key, value) pair

      #

      # This is equivalent to diagnostic_msgs/KeyValue, repeated here to

      # avoid introducing a trivial stack dependency.


      string key                     # tag label

      string value                   # corresponding value

      '
    version: 0
  geographic_msgs/MapFeature: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geographic_msgs/msg/MapFeature.msg
    name: geographic_msgs/MapFeature
    package: geographic_msgs
    source: package_modeler
    spec: '

      # Geographic map feature.

      #

      # A list of WayPoint IDs for features like streets, highways, hiking

      # trails, the outlines of buildings and parking lots in sequential

      # order.

      #

      # Feature lists may also contain other feature lists as members.


      uuid_msgs/UniqueID   id         # Unique feature identifier

      uuid_msgs/UniqueID[] components # Sequence of feature components

      KeyValue[] props                # Key/value properties for this feature

      '
    version: 0
  geographic_msgs/RouteNetwork: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geographic_msgs/msg/RouteNetwork.msg
    name: geographic_msgs/RouteNetwork
    package: geographic_msgs
    source: package_modeler
    spec: '

      # Geographic map route network.

      #

      # A directed graph of WayPoint nodes and RouteSegment edges.  This

      # information is extracted from the more-detailed contents of a

      # GeographicMap.  A RouteNetwork contains only the way points and

      # route segments of interest for path planning.


      Header          header


      uuid_msgs/UniqueID id    # This route network identifier

      BoundingBox     bounds   # 2D bounding box for network


      WayPoint[]      points   # Way points in this network

      RouteSegment[]  segments # Directed edges of this network


      KeyValue[]      props    # Network key/value properties

      '
    version: 0
  geographic_msgs/RoutePath: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geographic_msgs/msg/RoutePath.msg
    name: geographic_msgs/RoutePath
    package: geographic_msgs
    source: package_modeler
    spec: '

      # Path through a route network.

      #

      # A path is a sequence of RouteSegment edges.  This information is

      # extracted from a RouteNetwork graph.  A RoutePath lists the route

      # segments needed to reach some chosen goal.


      Header header


      uuid_msgs/UniqueID   network    # Route network containing this path

      uuid_msgs/UniqueID[] segments   # Sequence of RouteSegment IDs

      KeyValue[]           props      # Key/value properties

      '
    version: 0
  geographic_msgs/RouteSegment: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geographic_msgs/msg/RouteSegment.msg
    name: geographic_msgs/RouteSegment
    package: geographic_msgs
    source: package_modeler
    spec: '

      # Route network segment.

      #

      # This is one directed edge of a RouteNetwork graph. It represents a

      # known path from one way point to another.  If the path is two-way,

      # there will be another RouteSegment with "start" and "end" reversed.


      uuid_msgs/UniqueID id           # Unique identifier for this segment


      uuid_msgs/UniqueID start        # beginning way point of segment

      uuid_msgs/UniqueID end          # ending way point of segment


      KeyValue[] props                # segment properties

      '
    version: 0
  geographic_msgs/WayPoint: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geographic_msgs/msg/WayPoint.msg
    name: geographic_msgs/WayPoint
    package: geographic_msgs
    source: package_modeler
    spec: '

      # Way-point element for a geographic map.


      uuid_msgs/UniqueID id   # Unique way-point identifier

      GeoPoint   position     # Position relative to WGS 84 ellipsoid

      KeyValue[] props        # Key/value properties for this point

      '
    version: 0
  geometry_msgs/Accel: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/Accel.msg
    name: geometry_msgs/Accel
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This expresses acceleration in free space broken into its linear and angular
      parts.

      Vector3  linear

      Vector3  angular

      '
    version: 0
  geometry_msgs/AccelStamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/AccelStamped.msg
    name: geometry_msgs/AccelStamped
    package: geometry_msgs
    source: package_modeler
    spec: '

      # An accel with reference coordinate frame and timestamp

      Header header

      Accel accel

      '
    version: 0
  geometry_msgs/AccelWithCovariance: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/AccelWithCovariance.msg
    name: geometry_msgs/AccelWithCovariance
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This expresses acceleration in free space with uncertainty.


      Accel accel


      # Row-major representation of the 6x6 covariance matrix

      # The orientation parameters use a fixed-axis representation.

      # In order, the parameters are:

      # (x, y, z, rotation about X axis, rotation about Y axis, rotation about Z axis)

      float64[36] covariance

      '
    version: 0
  geometry_msgs/AccelWithCovarianceStamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/AccelWithCovarianceStamped.msg
    name: geometry_msgs/AccelWithCovarianceStamped
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This represents an estimated accel with reference coordinate frame and timestamp.

      Header header

      AccelWithCovariance accel

      '
    version: 0
  geometry_msgs/Inertia: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/Inertia.msg
    name: geometry_msgs/Inertia
    package: geometry_msgs
    source: package_modeler
    spec: '

      # Mass [kg]

      float64 m


      # Center of mass [m]

      geometry_msgs/Vector3 com


      # Inertia Tensor [kg-m^2]

      #     | ixx ixy ixz |

      # I = | ixy iyy iyz |

      #     | ixz iyz izz |

      float64 ixx

      float64 ixy

      float64 ixz

      float64 iyy

      float64 iyz

      float64 izz

      '
    version: 0
  geometry_msgs/InertiaStamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/InertiaStamped.msg
    name: geometry_msgs/InertiaStamped
    package: geometry_msgs
    source: package_modeler
    spec: '

      Header header

      Inertia inertia

      '
    version: 0
  geometry_msgs/Point: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/Point.msg
    name: geometry_msgs/Point
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This contains the position of a point in free space

      float64 x

      float64 y

      float64 z

      '
    version: 0
  geometry_msgs/Point32: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/Point32.msg
    name: geometry_msgs/Point32
    package: geometry_msgs
    source: package_modeler
    spec: "\n# This contains the position of a point in free space(with 32 bits of\
      \ precision).\n# It is recommeded to use Point wherever possible instead of\
      \ Point32.  \n# \n# This recommendation is to promote interoperability.  \n\
      #\n# This message is designed to take up less space when sending\n# lots of\
      \ points at once, as in the case of a PointCloud.  \n\nfloat32 x\nfloat32 y\n\
      float32 z"
    version: 0
  geometry_msgs/PointStamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/PointStamped.msg
    name: geometry_msgs/PointStamped
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This represents a Point with reference coordinate frame and timestamp

      Header header

      Point point

      '
    version: 0
  geometry_msgs/Polygon: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/Polygon.msg
    name: geometry_msgs/Polygon
    package: geometry_msgs
    source: package_modeler
    spec: '

      #A specification of a polygon where the first and last points are assumed to
      be connected

      Point32[] points

      '
    version: 0
  geometry_msgs/PolygonStamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/PolygonStamped.msg
    name: geometry_msgs/PolygonStamped
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This represents a Polygon with reference coordinate frame and timestamp

      Header header

      Polygon polygon

      '
    version: 0
  geometry_msgs/Pose: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/Pose.msg
    name: geometry_msgs/Pose
    package: geometry_msgs
    source: package_modeler
    spec: "\n# A representation of pose in free space, composed of position and orientation.\
      \ \nPoint position\nQuaternion orientation\n"
    version: 0
  geometry_msgs/Pose2D: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/Pose2D.msg
    name: geometry_msgs/Pose2D
    package: geometry_msgs
    source: package_modeler
    spec: '

      # Deprecated

      # Please use the full 3D pose.


      # In general our recommendation is to use a full 3D representation of everything
      and for 2D specific applications make the appropriate projections into the plane
      for their calculations but optimally will preserve the 3D information during
      processing.


      # If we have parallel copies of 2D datatypes every UI and other pipeline will
      end up needing to have dual interfaces to plot everything. And you will end
      up with not being able to use 3D tools for 2D use cases even if they''re completely
      valid, as you''d have to reimplement it with different inputs and outputs. It''s
      not particularly hard to plot the 2D pose or compute the yaw error for the Pose
      message and there are already tools and libraries that can do this for you.



      # This expresses a position and orientation on a 2D manifold.


      float64 x

      float64 y

      float64 theta

      '
    version: 0
  geometry_msgs/PoseArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/PoseArray.msg
    name: geometry_msgs/PoseArray
    package: geometry_msgs
    source: package_modeler
    spec: '

      # An array of poses with a header for global reference.


      Header header


      Pose[] poses

      '
    version: 0
  geometry_msgs/PoseStamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/PoseStamped.msg
    name: geometry_msgs/PoseStamped
    package: geometry_msgs
    source: package_modeler
    spec: '

      # A Pose with reference coordinate frame and timestamp

      Header header

      Pose pose

      '
    version: 0
  geometry_msgs/PoseWithCovariance: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/PoseWithCovariance.msg
    name: geometry_msgs/PoseWithCovariance
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This represents a pose in free space with uncertainty.


      Pose pose


      # Row-major representation of the 6x6 covariance matrix

      # The orientation parameters use a fixed-axis representation.

      # In order, the parameters are:

      # (x, y, z, rotation about X axis, rotation about Y axis, rotation about Z axis)

      float64[36] covariance

      '
    version: 0
  geometry_msgs/PoseWithCovarianceStamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/PoseWithCovarianceStamped.msg
    name: geometry_msgs/PoseWithCovarianceStamped
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This expresses an estimated pose with a reference coordinate frame and timestamp


      Header header

      PoseWithCovariance pose

      '
    version: 0
  geometry_msgs/Quaternion: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/Quaternion.msg
    name: geometry_msgs/Quaternion
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This represents an orientation in free space in quaternion form.


      float64 x

      float64 y

      float64 z

      float64 w

      '
    version: 0
  geometry_msgs/QuaternionStamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/QuaternionStamped.msg
    name: geometry_msgs/QuaternionStamped
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This represents an orientation with reference coordinate frame and timestamp.


      Header header

      Quaternion quaternion

      '
    version: 0
  geometry_msgs/Transform: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/Transform.msg
    name: geometry_msgs/Transform
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This represents the transform between two coordinate frames in free space.


      Vector3 translation

      Quaternion rotation

      '
    version: 0
  geometry_msgs/TransformStamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/TransformStamped.msg
    name: geometry_msgs/TransformStamped
    package: geometry_msgs
    source: package_modeler
    spec: "\n# This expresses a transform from coordinate frame header.frame_id\n\
      # to the coordinate frame child_frame_id\n#\n# This message is mostly used by\
      \ the \n# <a href=\"http://wiki.ros.org/tf\">tf</a> package. \n# See its documentation\
      \ for more information.\n\nHeader header\nstring child_frame_id # the frame\
      \ id of the child frame\nTransform transform\n"
    version: 0
  geometry_msgs/Twist: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/Twist.msg
    name: geometry_msgs/Twist
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This expresses velocity in free space broken into its linear and angular parts.

      Vector3  linear

      Vector3  angular

      '
    version: 0
  geometry_msgs/TwistStamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/TwistStamped.msg
    name: geometry_msgs/TwistStamped
    package: geometry_msgs
    source: package_modeler
    spec: '

      # A twist with reference coordinate frame and timestamp

      Header header

      Twist twist

      '
    version: 0
  geometry_msgs/TwistWithCovariance: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/TwistWithCovariance.msg
    name: geometry_msgs/TwistWithCovariance
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This expresses velocity in free space with uncertainty.


      Twist twist


      # Row-major representation of the 6x6 covariance matrix

      # The orientation parameters use a fixed-axis representation.

      # In order, the parameters are:

      # (x, y, z, rotation about X axis, rotation about Y axis, rotation about Z axis)

      float64[36] covariance

      '
    version: 0
  geometry_msgs/TwistWithCovarianceStamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/TwistWithCovarianceStamped.msg
    name: geometry_msgs/TwistWithCovarianceStamped
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This represents an estimated twist with reference coordinate frame and timestamp.

      Header header

      TwistWithCovariance twist

      '
    version: 0
  geometry_msgs/Vector3: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/Vector3.msg
    name: geometry_msgs/Vector3
    package: geometry_msgs
    source: package_modeler
    spec: "\n# This represents a vector in free space. \n# It is only meant to represent\
      \ a direction. Therefore, it does not\n# make sense to apply a translation to\
      \ it (e.g., when applying a \n# generic rigid transformation to a Vector3, tf2\
      \ will only apply the\n# rotation). If you want your data to be translatable\
      \ too, use the\n# geometry_msgs/Point message instead.\n\nfloat64 x\nfloat64\
      \ y\nfloat64 z"
    version: 0
  geometry_msgs/Vector3Stamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/Vector3Stamped.msg
    name: geometry_msgs/Vector3Stamped
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This represents a Vector3 with reference coordinate frame and timestamp

      Header header

      Vector3 vector

      '
    version: 0
  geometry_msgs/Wrench: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/Wrench.msg
    name: geometry_msgs/Wrench
    package: geometry_msgs
    source: package_modeler
    spec: '

      # This represents force in free space, separated into

      # its linear and angular parts.

      Vector3  force

      Vector3  torque

      '
    version: 0
  geometry_msgs/WrenchStamped: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/geometry_msgs/msg/WrenchStamped.msg
    name: geometry_msgs/WrenchStamped
    package: geometry_msgs
    source: package_modeler
    spec: '

      # A wrench with reference coordinate frame and timestamp

      Header header

      Wrench wrench

      '
    version: 0
  map_msgs/OccupancyGridUpdate: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/map_msgs/msg/OccupancyGridUpdate.msg
    name: map_msgs/OccupancyGridUpdate
    package: map_msgs
    source: package_modeler
    spec: '

      Header header

      int32 x

      int32 y

      uint32 width

      uint32 height

      int8[] data

      '
    version: 0
  map_msgs/PointCloud2Update: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/map_msgs/msg/PointCloud2Update.msg
    name: map_msgs/PointCloud2Update
    package: map_msgs
    source: package_modeler
    spec: '

      uint32 ADD=0

      uint32 DELETE=1

      Header header

      uint32 type          # type of update, one of ADD or DELETE

      sensor_msgs/PointCloud2 points

      '
    version: 0
  map_msgs/ProjectedMap: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/map_msgs/msg/ProjectedMap.msg
    name: map_msgs/ProjectedMap
    package: map_msgs
    source: package_modeler
    spec: '

      nav_msgs/OccupancyGrid map

      float64 min_z

      float64 max_z'
    version: 0
  map_msgs/ProjectedMapInfo: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/map_msgs/msg/ProjectedMapInfo.msg
    name: map_msgs/ProjectedMapInfo
    package: map_msgs
    source: package_modeler
    spec: '

      string frame_id

      float64 x

      float64 y

      float64 width

      float64 height

      float64 min_z

      float64 max_z'
    version: 0
  move_base_msgs/MoveBaseAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/move_base_msgs/msg/MoveBaseAction.msg
    name: move_base_msgs/MoveBaseAction
    package: move_base_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      MoveBaseActionGoal action_goal

      MoveBaseActionResult action_result

      MoveBaseActionFeedback action_feedback

      '
    version: 0
  move_base_msgs/MoveBaseActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/move_base_msgs/msg/MoveBaseActionFeedback.msg
    name: move_base_msgs/MoveBaseActionFeedback
    package: move_base_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      MoveBaseFeedback feedback

      '
    version: 0
  move_base_msgs/MoveBaseActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/move_base_msgs/msg/MoveBaseActionGoal.msg
    name: move_base_msgs/MoveBaseActionGoal
    package: move_base_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      MoveBaseGoal goal

      '
    version: 0
  move_base_msgs/MoveBaseActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/move_base_msgs/msg/MoveBaseActionResult.msg
    name: move_base_msgs/MoveBaseActionResult
    package: move_base_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      MoveBaseResult result

      '
    version: 0
  move_base_msgs/MoveBaseFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/move_base_msgs/msg/MoveBaseFeedback.msg
    name: move_base_msgs/MoveBaseFeedback
    package: move_base_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      geometry_msgs/PoseStamped base_position


      '
    version: 0
  move_base_msgs/MoveBaseGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/move_base_msgs/msg/MoveBaseGoal.msg
    name: move_base_msgs/MoveBaseGoal
    package: move_base_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      geometry_msgs/PoseStamped target_pose

      '
    version: 0
  move_base_msgs/MoveBaseResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/move_base_msgs/msg/MoveBaseResult.msg
    name: move_base_msgs/MoveBaseResult
    package: move_base_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      '
    version: 0
  moveit_msgs/AllowedCollisionEntry: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/AllowedCollisionEntry.msg
    name: moveit_msgs/AllowedCollisionEntry
    package: moveit_msgs
    source: package_modeler
    spec: '

      # whether or not collision checking is enabled

      bool[] enabled

      '
    version: 0
  moveit_msgs/AllowedCollisionMatrix: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/AllowedCollisionMatrix.msg
    name: moveit_msgs/AllowedCollisionMatrix
    package: moveit_msgs
    source: package_modeler
    spec: "\n# The list of entry names in the matrix\nstring[] entry_names\n\n# The\
      \ individual entries in the allowed collision matrix\n# square, symmetric, with\
      \ same order as entry_names\nAllowedCollisionEntry[] entry_values\n\n# In addition\
      \ to the collision matrix itself, we also have \n# the default entry value for\
      \ each entry name.\n\n# If the allowed collision flag is queried for a pair\
      \ of names (n1, n2)\n# that is not found in the collision matrix itself, the\
      \ value of\n# the collision flag is considered to be that of the entry (n1 or\
      \ n2)\n# specified in the list below. If both n1 and n2 are found in the list\
      \ \n# of defaults, the result is computed with an AND operation\n\nstring[]\
      \ default_entry_names\nbool[] default_entry_values\n"
    version: 0
  moveit_msgs/AttachedCollisionObject: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/AttachedCollisionObject.msg
    name: moveit_msgs/AttachedCollisionObject
    package: moveit_msgs
    source: package_modeler
    spec: "\n# The CollisionObject will be attached with a fixed joint to this link\n\
      string link_name\n\n#This contains the actual shapes and poses for the CollisionObject\n\
      #to be attached to the link\n#If action is remove and no object.id is set, all\
      \ objects\n#attached to the link indicated by link_name will be removed\nCollisionObject\
      \ object\n\n# The set of links that the attached objects are allowed to touch\n\
      # by default - the link_name is already considered by default\nstring[] touch_links\n\
      \n# If certain links were placed in a particular posture for this object to\
      \ remain attached \n# (e.g., an end effector closing around an object), the\
      \ posture necessary for releasing\n# the object is stored here\ntrajectory_msgs/JointTrajectory\
      \ detach_posture\n\n# The weight of the attached object, if known\nfloat64 weight\n"
    version: 0
  moveit_msgs/BoundingVolume: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/BoundingVolume.msg
    name: moveit_msgs/BoundingVolume
    package: moveit_msgs
    source: package_modeler
    spec: '

      # Define a volume in 3D


      # A set of solid geometric primitives that make up the volume to define (as
      a union)

      shape_msgs/SolidPrimitive[] primitives


      # The poses at which the primitives are located

      geometry_msgs/Pose[] primitive_poses


      # In addition to primitives, meshes can be specified to add to the bounding
      volume (again, as union)

      shape_msgs/Mesh[] meshes


      # The poses at which the meshes are located

      geometry_msgs/Pose[] mesh_poses

      '
    version: 0
  moveit_msgs/CollisionObject: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/CollisionObject.msg
    name: moveit_msgs/CollisionObject
    package: moveit_msgs
    source: package_modeler
    spec: '

      # A header, used for interpreting the poses

      Header header


      # The id of the object (name used in MoveIt)

      string id


      # The object type in a database of known objects

      object_recognition_msgs/ObjectType type


      # The collision geometries associated with the object.

      # Their poses are with respect to the specified header


      # Solid geometric primitives

      shape_msgs/SolidPrimitive[] primitives

      geometry_msgs/Pose[] primitive_poses


      # Meshes

      shape_msgs/Mesh[] meshes

      geometry_msgs/Pose[] mesh_poses


      # Bounding planes (equation is specified, but the plane can be oriented using
      an additional pose)

      shape_msgs/Plane[] planes

      geometry_msgs/Pose[] plane_poses


      # Adds the object to the planning scene. If the object previously existed, it
      is replaced.

      byte ADD=0


      # Removes the object from the environment entirely (everything that matches
      the specified id)

      byte REMOVE=1


      # Append to an object that already exists in the planning scene. If the object
      does not exist, it is added.

      byte APPEND=2


      # If an object already exists in the scene, new poses can be sent (the geometry
      arrays must be left empty)

      # if solely moving the object is desired

      byte MOVE=3


      # Operation to be performed

      byte operation

      '
    version: 0
  moveit_msgs/ConstraintEvalResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/ConstraintEvalResult.msg
    name: moveit_msgs/ConstraintEvalResult
    package: moveit_msgs
    source: package_modeler
    spec: "\n# This message contains result from constraint evaluation\n# result specifies\
      \ the result of constraint evaluation \n# (true indicates state satisfies constraint,\
      \ false indicates state violates constraint)\n# if false, distance specifies\
      \ a measure of the distance of the state from the constraint\n# if true, distance\
      \ is set to zero\nbool result\nfloat64 distance\n"
    version: 0
  moveit_msgs/Constraints: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/Constraints.msg
    name: moveit_msgs/Constraints
    package: moveit_msgs
    source: package_modeler
    spec: '

      # This message contains a list of motion planning constraints.

      # All constraints must be satisfied for a goal to be considered valid


      string name


      JointConstraint[] joint_constraints


      PositionConstraint[] position_constraints


      OrientationConstraint[] orientation_constraints


      VisibilityConstraint[] visibility_constraints

      '
    version: 0
  moveit_msgs/ContactInformation: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/ContactInformation.msg
    name: moveit_msgs/ContactInformation
    package: moveit_msgs
    source: package_modeler
    spec: "\n# Standard ROS header contains information \n# about the frame in which\
      \ this \n# contact is specified\nHeader header\n\n# Position of the contact\
      \ point\ngeometry_msgs/Point position\n\n# Normal corresponding to the contact\
      \ point\ngeometry_msgs/Vector3 normal \n\n# Depth of contact point\nfloat64\
      \ depth\n\n# Name of the first body that is in contact\n# This could be a link\
      \ or a namespace that represents a body\nstring contact_body_1\nuint32 body_type_1\n\
      \n# Name of the second body that is in contact\n# This could be a link or a\
      \ namespace that represents a body\nstring contact_body_2\nuint32 body_type_2\n\
      \nuint32 ROBOT_LINK=0\nuint32 WORLD_OBJECT=1\nuint32 ROBOT_ATTACHED=2\n"
    version: 0
  moveit_msgs/CostSource: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/CostSource.msg
    name: moveit_msgs/CostSource
    package: moveit_msgs
    source: package_modeler
    spec: '

      # The density of the cost source

      float64 cost_density


      # The volume of the cost source is represented as an

      # axis-aligned bounding box (AABB)

      # The AABB is specified by two of its opposite corners


      geometry_msgs/Vector3 aabb_min


      geometry_msgs/Vector3 aabb_max

      '
    version: 0
  moveit_msgs/DisplayRobotState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/DisplayRobotState.msg
    name: moveit_msgs/DisplayRobotState
    package: moveit_msgs
    source: package_modeler
    spec: '

      # The robot state to display

      RobotState state


      # Optionally, various links can be highlighted

      ObjectColor[] highlight_links

      '
    version: 0
  moveit_msgs/DisplayTrajectory: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/DisplayTrajectory.msg
    name: moveit_msgs/DisplayTrajectory
    package: moveit_msgs
    source: package_modeler
    spec: "\n# The model id for which this path has been generated\nstring model_id\n\
      \n# The representation of the path contains position values for all the joints\
      \ that are moving along the path; a sequence of trajectories may be specified\n\
      RobotTrajectory[] trajectory\n\n# The robot state is used to obtain positions\
      \ for all/some of the joints of the robot. \n# It is used by the path display\
      \ node to determine the positions of the joints that are not specified in the\
      \ joint path message above. \n# If the robot state message contains joint position\
      \ information for joints that are also mentioned in the joint path message,\
      \ the positions in the joint path message will overwrite the positions specified\
      \ in the robot state message. \nRobotState trajectory_start\n"
    version: 0
  moveit_msgs/ExecuteTrajectoryAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/ExecuteTrajectoryAction.msg
    name: moveit_msgs/ExecuteTrajectoryAction
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      ExecuteTrajectoryActionGoal action_goal

      ExecuteTrajectoryActionResult action_result

      ExecuteTrajectoryActionFeedback action_feedback

      '
    version: 0
  moveit_msgs/ExecuteTrajectoryActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/ExecuteTrajectoryActionFeedback.msg
    name: moveit_msgs/ExecuteTrajectoryActionFeedback
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      ExecuteTrajectoryFeedback feedback

      '
    version: 0
  moveit_msgs/ExecuteTrajectoryActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/ExecuteTrajectoryActionGoal.msg
    name: moveit_msgs/ExecuteTrajectoryActionGoal
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      ExecuteTrajectoryGoal goal

      '
    version: 0
  moveit_msgs/ExecuteTrajectoryActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/ExecuteTrajectoryActionResult.msg
    name: moveit_msgs/ExecuteTrajectoryActionResult
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      ExecuteTrajectoryResult result

      '
    version: 0
  moveit_msgs/ExecuteTrajectoryFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/ExecuteTrajectoryFeedback.msg
    name: moveit_msgs/ExecuteTrajectoryFeedback
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      # The internal state that the move group action currently is in

      string state


      '
    version: 0
  moveit_msgs/ExecuteTrajectoryGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/ExecuteTrajectoryGoal.msg
    name: moveit_msgs/ExecuteTrajectoryGoal
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      # The trajectory to execute

      RobotTrajectory trajectory


      '
    version: 0
  moveit_msgs/ExecuteTrajectoryResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/ExecuteTrajectoryResult.msg
    name: moveit_msgs/ExecuteTrajectoryResult
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      # Error code - encodes the overall reason for failure

      MoveItErrorCodes error_code


      '
    version: 0
  moveit_msgs/Grasp: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/Grasp.msg
    name: moveit_msgs/Grasp
    package: moveit_msgs
    source: package_modeler
    spec: "\n# This message contains a description of a grasp that would be used\n\
      # with a particular end-effector to grasp an object, including how to\n# approach\
      \ it, grip it, etc.  This message does not contain any\n# information about\
      \ a \"grasp point\" (a position ON the object).\n# Whatever generates this message\
      \ should have already combined\n# information about grasp points with information\
      \ about the geometry\n# of the end-effector to compute the grasp_pose in this\
      \ message.\n\n# A name for this grasp\nstring id\n\n# The internal posture of\
      \ the hand for the pre-grasp\n# only positions are used\ntrajectory_msgs/JointTrajectory\
      \ pre_grasp_posture\n\n# The internal posture of the hand for the grasp\n# positions\
      \ and efforts are used\ntrajectory_msgs/JointTrajectory grasp_posture\n\n# The\
      \ position of the end-effector for the grasp.  This is the pose of\n# the \"\
      parent_link\" of the end-effector, not actually the pose of any\n# link *in*\
      \ the end-effector.  Typically this would be the pose of the\n# most distal\
      \ wrist link before the hand (end-effector) links began.\ngeometry_msgs/PoseStamped\
      \ grasp_pose\n\n# The estimated probability of success for this grasp, or some\
      \ other\n# measure of how \"good\" it is.\nfloat64 grasp_quality\n\n# The approach\
      \ direction to take before picking an object\nGripperTranslation pre_grasp_approach\n\
      \n# The retreat direction to take after a grasp has been completed (object is\
      \ attached)\nGripperTranslation post_grasp_retreat\n\n# The retreat motion to\
      \ perform when releasing the object; this information\n# is not necessary for\
      \ the grasp itself, but when releasing the object,\n# the information will be\
      \ necessary. The grasp used to perform a pickup\n# is returned as part of the\
      \ result, so this information is available for \n# later use.\nGripperTranslation\
      \ post_place_retreat\n\n# the maximum contact force to use while grasping (<=0\
      \ to disable)\nfloat32 max_contact_force\n\n# an optional list of obstacles\
      \ that we have semantic information about\n# and that can be touched/pushed/moved\
      \ in the course of grasping\nstring[] allowed_touch_objects\n"
    version: 0
  moveit_msgs/GripperTranslation: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/GripperTranslation.msg
    name: moveit_msgs/GripperTranslation
    package: moveit_msgs
    source: package_modeler
    spec: '

      # defines a translation for the gripper, used in pickup or place tasks

      # for example for lifting an object off a table or approaching the table for
      placing


      # the direction of the translation

      geometry_msgs/Vector3Stamped direction


      # the desired translation distance

      float32 desired_distance


      # the min distance that must be considered feasible before the

      # grasp is even attempted

      float32 min_distance

      '
    version: 0
  moveit_msgs/JointConstraint: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/JointConstraint.msg
    name: moveit_msgs/JointConstraint
    package: moveit_msgs
    source: package_modeler
    spec: '

      # Constrain the position of a joint to be within a certain bound

      string joint_name


      # the bound to be achieved is [position - tolerance_below, position + tolerance_above]

      float64 position

      float64 tolerance_above

      float64 tolerance_below


      # A weighting factor for this constraint (denotes relative importance to other
      constraints. Closer to zero means less important)

      float64 weight'
    version: 0
  moveit_msgs/JointLimits: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/JointLimits.msg
    name: moveit_msgs/JointLimits
    package: moveit_msgs
    source: package_modeler
    spec: '

      # This message contains information about limits of a particular joint (or control
      dimension)

      string joint_name


      # true if the joint has position limits

      bool has_position_limits


      # min and max position limits

      float64 min_position

      float64 max_position


      # true if joint has velocity limits

      bool has_velocity_limits


      # max velocity limit

      float64 max_velocity

      # min_velocity is assumed to be -max_velocity


      # true if joint has acceleration limits

      bool has_acceleration_limits

      # max acceleration limit

      float64 max_acceleration

      # min_acceleration is assumed to be -max_acceleration

      '
    version: 0
  moveit_msgs/KinematicSolverInfo: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/KinematicSolverInfo.msg
    name: moveit_msgs/KinematicSolverInfo
    package: moveit_msgs
    source: package_modeler
    spec: '

      # A list of joints in the kinematic tree

      string[] joint_names

      # A list of joint limits corresponding to the joint names

      moveit_msgs/JointLimits[] limits

      # A list of links that the kinematics node provides solutions for

      string[] link_names

      '
    version: 0
  moveit_msgs/LinkPadding: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/LinkPadding.msg
    name: moveit_msgs/LinkPadding
    package: moveit_msgs
    source: package_modeler
    spec: '

      #name for the link

      string link_name


      # padding to apply to the link

      float64 padding

      '
    version: 0
  moveit_msgs/LinkScale: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/LinkScale.msg
    name: moveit_msgs/LinkScale
    package: moveit_msgs
    source: package_modeler
    spec: '

      #name for the link

      string link_name


      # scaling to apply to the link

      float64 scale

      '
    version: 0
  moveit_msgs/MotionPlanDetailedResponse: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MotionPlanDetailedResponse.msg
    name: moveit_msgs/MotionPlanDetailedResponse
    package: moveit_msgs
    source: package_modeler
    spec: "\n# The representation of a solution to a planning problem, including intermediate\
      \ data\n\n# The starting state considered for the robot solution path\nRobotState\
      \ trajectory_start\n\n# The group used for planning (usually the same as in\
      \ the request)\nstring group_name\n\n# Multiple solution paths are reported,\
      \ each reflecting intermediate steps in the trajectory processing\n\n# The list\
      \ of reported trajectories\nRobotTrajectory[] trajectory\n\n# Description of\
      \ the reported trajectories (name of processing step)\nstring[] description\n\
      \n# The amount of time spent computing a particular step in motion plan computation\
      \ \nfloat64[] processing_time\n\n# Status at the end of this plan\nMoveItErrorCodes\
      \ error_code\n"
    version: 0
  moveit_msgs/MotionPlanRequest: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MotionPlanRequest.msg
    name: moveit_msgs/MotionPlanRequest
    package: moveit_msgs
    source: package_modeler
    spec: '

      # This service contains the definition for a request to the motion

      # planner and the output it provides


      # Parameters for the workspace that the planner should work inside

      WorkspaceParameters workspace_parameters


      # Starting state updates. If certain joints should be considered

      # at positions other than the current ones, these positions should

      # be set here

      RobotState start_state


      # The possible goal states for the model to plan for. Each element of

      # the array defines a goal region. The goal is achieved

      # if the constraints for a particular region are satisfied

      Constraints[] goal_constraints


      # No state at any point along the path in the produced motion plan will violate
      these constraints (this applies to all points, not just waypoints)

      Constraints path_constraints


      # The constraints the resulting trajectory must satisfy

      TrajectoryConstraints trajectory_constraints


      # The name of the motion planner to use. If no name is specified,

      # a default motion planner will be used

      string planner_id


      # The name of the group of joints on which this planner is operating

      string group_name


      # The number of times this plan is to be computed. Shortest solution

      # will be reported.

      int32 num_planning_attempts


      # The maximum amount of time the motion planner is allowed to plan for (in seconds)

      float64 allowed_planning_time


      # Scaling factors for optionally reducing the maximum joint velocities and

      # accelerations.  Allowed values are in (0,1].  The maximum joint velocity and

      # acceleration specified in the robot model are multiplied by thier respective

      # factors.  If either are outside their valid ranges (importantly, this

      # includes being set to 0.0), the factor is set to the default value of 1.0

      # internally (i.e., maximum joint velocity or maximum joint acceleration).

      float64 max_velocity_scaling_factor

      float64 max_acceleration_scaling_factor


      '
    version: 0
  moveit_msgs/MotionPlanResponse: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MotionPlanResponse.msg
    name: moveit_msgs/MotionPlanResponse
    package: moveit_msgs
    source: package_modeler
    spec: '

      # The representation of a solution to a planning problem


      # The corresponding robot state

      RobotState trajectory_start


      # The group used for planning (usually the same as in the request)

      string group_name


      # A solution trajectory, if found

      RobotTrajectory trajectory


      # Planning time (seconds)

      float64 planning_time


      # Error code - encodes the overall reason for failure

      MoveItErrorCodes error_code

      '
    version: 0
  moveit_msgs/MotionSequenceItem: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MotionSequenceItem.msg
    name: moveit_msgs/MotionSequenceItem
    package: moveit_msgs
    source: package_modeler
    spec: '

      # The plan request for this item.

      # It is the planning request for this segment of the sequence, as if it were
      a solitary motion.

      MotionPlanRequest req


      # To blend between sequence items, the motion may be smoothed using a circular
      motion.

      # The blend radius of the circle between this and the next command, where 0
      means no blending.

      float64 blend_radius

      '
    version: 0
  moveit_msgs/MotionSequenceRequest: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MotionSequenceRequest.msg
    name: moveit_msgs/MotionSequenceRequest
    package: moveit_msgs
    source: package_modeler
    spec: '

      # List of motion planning request with a blend_radius for each.

      # In the response of the planner all of these will be executable as one sequence.

      MotionSequenceItem[] items

      '
    version: 0
  moveit_msgs/MotionSequenceResponse: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MotionSequenceResponse.msg
    name: moveit_msgs/MotionSequenceResponse
    package: moveit_msgs
    source: package_modeler
    spec: '

      # An error code reflecting what went wrong

      MoveItErrorCodes error_code


      # The full starting state of the robot at the start of the sequence

      RobotState sequence_start


      # The trajectories that the planner produced for execution

      RobotTrajectory[] planned_trajectories


      # The amount of time it took to complete the motion plan

      float64 planning_time

      '
    version: 0
  moveit_msgs/MoveGroupAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveGroupAction.msg
    name: moveit_msgs/MoveGroupAction
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      MoveGroupActionGoal action_goal

      MoveGroupActionResult action_result

      MoveGroupActionFeedback action_feedback

      '
    version: 0
  moveit_msgs/MoveGroupActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveGroupActionFeedback.msg
    name: moveit_msgs/MoveGroupActionFeedback
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      MoveGroupFeedback feedback

      '
    version: 0
  moveit_msgs/MoveGroupActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveGroupActionGoal.msg
    name: moveit_msgs/MoveGroupActionGoal
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      MoveGroupGoal goal

      '
    version: 0
  moveit_msgs/MoveGroupActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveGroupActionResult.msg
    name: moveit_msgs/MoveGroupActionResult
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      MoveGroupResult result

      '
    version: 0
  moveit_msgs/MoveGroupFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveGroupFeedback.msg
    name: moveit_msgs/MoveGroupFeedback
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      # The internal state that the move group action currently is in

      string state


      '
    version: 0
  moveit_msgs/MoveGroupGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveGroupGoal.msg
    name: moveit_msgs/MoveGroupGoal
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      # Motion planning request to pass to planner

      MotionPlanRequest request


      # Planning options

      PlanningOptions planning_options


      '
    version: 0
  moveit_msgs/MoveGroupResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveGroupResult.msg
    name: moveit_msgs/MoveGroupResult
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      # An error code reflecting what went wrong

      MoveItErrorCodes error_code


      # The full starting state of the robot at the start of the trajectory

      moveit_msgs/RobotState trajectory_start


      # The trajectory that moved group produced for execution

      moveit_msgs/RobotTrajectory planned_trajectory


      # The trace of the trajectory recorded during execution

      moveit_msgs/RobotTrajectory executed_trajectory


      # The amount of time it took to complete the motion plan

      float64 planning_time


      '
    version: 0
  moveit_msgs/MoveGroupSequenceAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveGroupSequenceAction.msg
    name: moveit_msgs/MoveGroupSequenceAction
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      MoveGroupSequenceActionGoal action_goal

      MoveGroupSequenceActionResult action_result

      MoveGroupSequenceActionFeedback action_feedback

      '
    version: 0
  moveit_msgs/MoveGroupSequenceActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveGroupSequenceActionFeedback.msg
    name: moveit_msgs/MoveGroupSequenceActionFeedback
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      MoveGroupSequenceFeedback feedback

      '
    version: 0
  moveit_msgs/MoveGroupSequenceActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveGroupSequenceActionGoal.msg
    name: moveit_msgs/MoveGroupSequenceActionGoal
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      MoveGroupSequenceGoal goal

      '
    version: 0
  moveit_msgs/MoveGroupSequenceActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveGroupSequenceActionResult.msg
    name: moveit_msgs/MoveGroupSequenceActionResult
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      MoveGroupSequenceResult result

      '
    version: 0
  moveit_msgs/MoveGroupSequenceFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveGroupSequenceFeedback.msg
    name: moveit_msgs/MoveGroupSequenceFeedback
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      # The internal state that the move group action currently is in

      string state


      '
    version: 0
  moveit_msgs/MoveGroupSequenceGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveGroupSequenceGoal.msg
    name: moveit_msgs/MoveGroupSequenceGoal
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      # A list of motion commands - one for each section of the sequence

      MotionSequenceRequest request


      # Planning options

      PlanningOptions planning_options

      '
    version: 0
  moveit_msgs/MoveGroupSequenceResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveGroupSequenceResult.msg
    name: moveit_msgs/MoveGroupSequenceResult
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      # Response comprising information on all sections of the sequence

      MotionSequenceResponse response


      '
    version: 0
  moveit_msgs/MoveItErrorCodes: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/MoveItErrorCodes.msg
    name: moveit_msgs/MoveItErrorCodes
    package: moveit_msgs
    source: package_modeler
    spec: '

      int32 val


      # overall behavior

      int32 SUCCESS=1

      int32 FAILURE=99999


      int32 PLANNING_FAILED=-1

      int32 INVALID_MOTION_PLAN=-2

      int32 MOTION_PLAN_INVALIDATED_BY_ENVIRONMENT_CHANGE=-3

      int32 CONTROL_FAILED=-4

      int32 UNABLE_TO_AQUIRE_SENSOR_DATA=-5

      int32 TIMED_OUT=-6

      int32 PREEMPTED=-7


      # planning & kinematics request errors

      int32 START_STATE_IN_COLLISION=-10

      int32 START_STATE_VIOLATES_PATH_CONSTRAINTS=-11


      int32 GOAL_IN_COLLISION=-12

      int32 GOAL_VIOLATES_PATH_CONSTRAINTS=-13

      int32 GOAL_CONSTRAINTS_VIOLATED=-14


      int32 INVALID_GROUP_NAME=-15

      int32 INVALID_GOAL_CONSTRAINTS=-16

      int32 INVALID_ROBOT_STATE=-17

      int32 INVALID_LINK_NAME=-18

      int32 INVALID_OBJECT_NAME=-19


      # system errors

      int32 FRAME_TRANSFORM_FAILURE=-21

      int32 COLLISION_CHECKING_UNAVAILABLE=-22

      int32 ROBOT_STATE_STALE=-23

      int32 SENSOR_INFO_STALE=-24


      # kinematics errors

      int32 NO_IK_SOLUTION=-31

      '
    version: 0
  moveit_msgs/ObjectColor: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/ObjectColor.msg
    name: moveit_msgs/ObjectColor
    package: moveit_msgs
    source: package_modeler
    spec: '

      # The object id for which we specify color

      string id


      # The value of the color

      std_msgs/ColorRGBA color

      '
    version: 0
  moveit_msgs/OrientationConstraint: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/OrientationConstraint.msg
    name: moveit_msgs/OrientationConstraint
    package: moveit_msgs
    source: package_modeler
    spec: '

      # This message contains the definition of an orientation constraint.


      Header header


      # The desired orientation of the robot link specified as a quaternion

      geometry_msgs/Quaternion orientation


      # The robot link this constraint refers to

      string link_name


      # optional axis-angle error tolerances specified

      float64 absolute_x_axis_tolerance

      float64 absolute_y_axis_tolerance

      float64 absolute_z_axis_tolerance


      # A weighting factor for this constraint (denotes relative importance to other
      constraints. Closer to zero means less important)

      float64 weight

      '
    version: 0
  moveit_msgs/OrientedBoundingBox: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/OrientedBoundingBox.msg
    name: moveit_msgs/OrientedBoundingBox
    package: moveit_msgs
    source: package_modeler
    spec: '

      # the pose of the box

      geometry_msgs/Pose pose


      # the extents of the box, assuming the center is at the origin

      geometry_msgs/Point32 extents

      '
    version: 0
  moveit_msgs/PickupAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PickupAction.msg
    name: moveit_msgs/PickupAction
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      PickupActionGoal action_goal

      PickupActionResult action_result

      PickupActionFeedback action_feedback

      '
    version: 0
  moveit_msgs/PickupActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PickupActionFeedback.msg
    name: moveit_msgs/PickupActionFeedback
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      PickupFeedback feedback

      '
    version: 0
  moveit_msgs/PickupActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PickupActionGoal.msg
    name: moveit_msgs/PickupActionGoal
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      PickupGoal goal

      '
    version: 0
  moveit_msgs/PickupActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PickupActionResult.msg
    name: moveit_msgs/PickupActionResult
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      PickupResult result

      '
    version: 0
  moveit_msgs/PickupFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PickupFeedback.msg
    name: moveit_msgs/PickupFeedback
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      # The internal state that the pickup action currently is in

      string state


      '
    version: 0
  moveit_msgs/PickupGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PickupGoal.msg
    name: moveit_msgs/PickupGoal
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      # An action for picking up an object


      # The name of the object to pick up (as known in the planning scene)

      string target_name


      # which group should be used to plan for pickup

      string group_name


      # which end-effector to be used for pickup (ideally descending from the group
      above)

      string end_effector


      # a list of possible grasps to be used. At least one grasp must be filled in

      Grasp[] possible_grasps


      # the name that the support surface (e.g. table) has in the collision map

      # can be left empty if no name is available

      string support_surface_name


      # whether collisions between the gripper and the support surface should be acceptable

      # during move from pre-grasp to grasp and during lift. Collisions when moving
      to the

      # pre-grasp location are still not allowed even if this is set to true.

      bool allow_gripper_support_collision


      # The names of the links the object to be attached is allowed to touch;

      # If this is left empty, it defaults to the links in the used end-effector

      string[] attached_object_touch_links


      # Optionally notify the pick action that it should approach the object further,

      # as much as possible (this minimizing the distance to the object before the
      grasp)

      # along the approach direction; Note: this option changes the grasping poses

      # supplied in possible_grasps[] such that they are closer to the object when
      possible.

      bool minimize_object_distance


      # Optional constraints to be imposed on every point in the motion plan

      Constraints path_constraints


      # The name of the motion planner to use. If no name is specified,

      # a default motion planner will be used

      string planner_id


      # an optional list of obstacles that we have semantic information about

      # and that can be touched/pushed/moved in the course of grasping;

      # CAREFUL: If the object name ''all'' is used, collisions with all objects are
      disabled during the approach & lift.

      string[] allowed_touch_objects


      # The maximum amount of time the motion planner is allowed to plan for

      float64 allowed_planning_time


      # Planning options

      PlanningOptions planning_options


      '
    version: 0
  moveit_msgs/PickupResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PickupResult.msg
    name: moveit_msgs/PickupResult
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      # The overall result of the pickup attempt

      MoveItErrorCodes error_code


      # The full starting state of the robot at the start of the trajectory

      RobotState trajectory_start


      # The trajectory that moved group produced for execution

      RobotTrajectory[] trajectory_stages


      string[] trajectory_descriptions


      # The performed grasp, if attempt was successful

      Grasp grasp


      # The amount of time in seconds it took to complete the plan

      float64 planning_time

      '
    version: 0
  moveit_msgs/PlaceAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PlaceAction.msg
    name: moveit_msgs/PlaceAction
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      PlaceActionGoal action_goal

      PlaceActionResult action_result

      PlaceActionFeedback action_feedback

      '
    version: 0
  moveit_msgs/PlaceActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PlaceActionFeedback.msg
    name: moveit_msgs/PlaceActionFeedback
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      PlaceFeedback feedback

      '
    version: 0
  moveit_msgs/PlaceActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PlaceActionGoal.msg
    name: moveit_msgs/PlaceActionGoal
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      PlaceGoal goal

      '
    version: 0
  moveit_msgs/PlaceActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PlaceActionResult.msg
    name: moveit_msgs/PlaceActionResult
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      PlaceResult result

      '
    version: 0
  moveit_msgs/PlaceFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PlaceFeedback.msg
    name: moveit_msgs/PlaceFeedback
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      # The internal state that the place action currently is in

      string state


      '
    version: 0
  moveit_msgs/PlaceGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PlaceGoal.msg
    name: moveit_msgs/PlaceGoal
    package: moveit_msgs
    source: package_modeler
    spec: "\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
      # An action for placing an object\n\n# which group to be used to plan for grasping\n\
      string group_name\n\n# the name of the attached object to place\nstring attached_object_name\n\
      \n# a list of possible transformations for placing the object\nPlaceLocation[]\
      \ place_locations\n\n# if the user prefers setting the eef pose (same as in\
      \ pick) rather than \n# the location of the object, this flag should be set\
      \ to true\nbool place_eef\n\n# the name that the support surface (e.g. table)\
      \ has in the collision world\n# can be left empty if no name is available\n\
      string support_surface_name\n\n# whether collisions between the gripper and\
      \ the support surface should be acceptable\n# during move from pre-place to\
      \ place and during retreat. Collisions when moving to the\n# pre-place location\
      \ are still not allowed even if this is set to true.\nbool allow_gripper_support_collision\n\
      \n# Optional constraints to be imposed on every point in the motion plan\nConstraints\
      \ path_constraints\n\n# The name of the motion planner to use. If no name is\
      \ specified,\n# a default motion planner will be used\nstring planner_id\n\n\
      # an optional list of obstacles that we have semantic information about\n# and\
      \ that can be touched/pushed/moved in the course of placing;\n# CAREFUL: If\
      \ the object name 'all' is used, collisions with all objects are disabled during\
      \ the approach & retreat.\nstring[] allowed_touch_objects\n\n# The maximum amount\
      \ of time the motion planner is allowed to plan for\nfloat64 allowed_planning_time\n\
      \n# Planning options\nPlanningOptions planning_options\n\n"
    version: 0
  moveit_msgs/PlaceLocation: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PlaceLocation.msg
    name: moveit_msgs/PlaceLocation
    package: moveit_msgs
    source: package_modeler
    spec: "\n# A name for this grasp\nstring id\n\n# The internal posture of the hand\
      \ for the grasp\n# positions and efforts are used\ntrajectory_msgs/JointTrajectory\
      \ post_place_posture\n\n# The position of the end-effector for the grasp relative\
      \ to a reference frame \n# (that is always specified elsewhere, not in this\
      \ message)\ngeometry_msgs/PoseStamped place_pose\n\n# The approach motion\n\
      GripperTranslation pre_place_approach\n\n# The retreat motion\nGripperTranslation\
      \ post_place_retreat\n\n# an optional list of obstacles that we have semantic\
      \ information about\n# and that can be touched/pushed/moved in the course of\
      \ grasping\nstring[] allowed_touch_objects\n"
    version: 0
  moveit_msgs/PlaceResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PlaceResult.msg
    name: moveit_msgs/PlaceResult
    package: moveit_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      # The result of the place attempt

      MoveItErrorCodes error_code


      # The full starting state of the robot at the start of the trajectory

      RobotState trajectory_start


      # The trajectory that moved group produced for execution

      RobotTrajectory[] trajectory_stages


      string[] trajectory_descriptions


      # The successful place location, if any

      PlaceLocation place_location


      # The amount of time in seconds it took to complete the plan

      float64 planning_time

      '
    version: 0
  moveit_msgs/PlannerInterfaceDescription: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PlannerInterfaceDescription.msg
    name: moveit_msgs/PlannerInterfaceDescription
    package: moveit_msgs
    source: package_modeler
    spec: '

      # The name of the planner interface

      string name


      # The names of the planner ids within the interface

      string[] planner_ids

      '
    version: 0
  moveit_msgs/PlannerParams: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PlannerParams.msg
    name: moveit_msgs/PlannerParams
    package: moveit_msgs
    source: package_modeler
    spec: '

      # parameter names (same size as values)

      string[] keys


      # parameter values (same size as keys)

      string[] values


      # parameter description (can be empty)

      string[] descriptions

      '
    version: 0
  moveit_msgs/PlanningOptions: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PlanningOptions.msg
    name: moveit_msgs/PlanningOptions
    package: moveit_msgs
    source: package_modeler
    spec: "\n\n# The diff to consider for the planning scene (optional)\nPlanningScene\
      \ planning_scene_diff\n\n# If this flag is set to true, the action\n# returns\
      \ an executable plan in the response but does not attempt execution  \nbool\
      \ plan_only\n\n# If this flag is set to true, the action of planning &\n# executing\
      \ is allowed to look around  (move sensors) if\n# it seems that not enough information\
      \ is available about\n# the environment\nbool look_around\n\n# If this value\
      \ is positive, the action of planning & executing\n# is allowed to look around\
      \ for a maximum number of attempts;\n# If the value is left as 0, the default\
      \ value is used, as set\n# with dynamic_reconfigure\nint32 look_around_attempts\n\
      \n# If set and if look_around is true, this value is used as\n# the maximum\
      \ cost allowed for a path to be considered executable.\n# If the cost of a path\
      \ is higher than this value, more sensing or \n# a new plan needed. If left\
      \ as 0.0 but look_around is true, then \n# the default value set via dynamic_reconfigure\
      \ is used\nfloat64 max_safe_execution_cost\n\n# If the plan becomes invalidated\
      \ during execution, it is possible to have\n# that plan recomputed and execution\
      \ restarted. This flag enables this\n# functionality \nbool replan\n\n# The\
      \ maximum number of replanning attempts \nint32 replan_attempts\n\n# The amount\
      \ of time to wait in between replanning attempts (in seconds)\nfloat64 replan_delay\n"
    version: 0
  moveit_msgs/PlanningScene: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PlanningScene.msg
    name: moveit_msgs/PlanningScene
    package: moveit_msgs
    source: package_modeler
    spec: "\n# name of planning scene\nstring name\n\n# full robot state\nRobotState\
      \ robot_state\n\n# The name of the robot model this scene is for\nstring robot_model_name\n\
      \n#additional frames for duplicating tf (with respect to the planning frame)\n\
      geometry_msgs/TransformStamped[] fixed_frame_transforms\n\n#full allowed collision\
      \ matrix\nAllowedCollisionMatrix allowed_collision_matrix\n\n# all link paddings\n\
      LinkPadding[] link_padding\n\n# all link scales\nLinkScale[] link_scale\n\n\
      # Attached objects, collision objects, even the octomap or collision map can\
      \ have \n# colors associated to them. This array specifies them.\nObjectColor[]\
      \ object_colors\n\n# the collision map\nPlanningSceneWorld world\n\n# Flag indicating\
      \ whether this scene is to be interpreted as a diff with respect to some other\
      \ scene\nbool is_diff\n"
    version: 0
  moveit_msgs/PlanningSceneComponents: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PlanningSceneComponents.msg
    name: moveit_msgs/PlanningSceneComponents
    package: moveit_msgs
    source: package_modeler
    spec: "\n# This message defines the components that make up the PlanningScene\
      \ message.\n# The values can be used as a bitfield to specify which parts of\
      \ the PlanningScene message\n# are of interest\n\n# Scene name, model name,\
      \ model root\nuint32 SCENE_SETTINGS=1\n\n# Joint values of the robot state\n\
      uint32 ROBOT_STATE=2\n\n# Attached objects (including geometry) for the robot\
      \ state\nuint32 ROBOT_STATE_ATTACHED_OBJECTS=4\n\n# The names of the world objects\n\
      uint32 WORLD_OBJECT_NAMES=8\n\n# The geometry of the world objects\nuint32 WORLD_OBJECT_GEOMETRY=16\n\
      \n# The maintained octomap \nuint32 OCTOMAP=32\n\n# The maintained list of transforms\n\
      uint32 TRANSFORMS=64\n\n# The allowed collision matrix\nuint32 ALLOWED_COLLISION_MATRIX=128\n\
      \n# The default link padding and link scaling\nuint32 LINK_PADDING_AND_SCALING=256\n\
      \n# The stored object colors\nuint32 OBJECT_COLORS=512\n\n# Bitfield combining\
      \ options indicated above\nuint32 components\n"
    version: 0
  moveit_msgs/PlanningSceneWorld: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PlanningSceneWorld.msg
    name: moveit_msgs/PlanningSceneWorld
    package: moveit_msgs
    source: package_modeler
    spec: '

      # collision objects

      CollisionObject[] collision_objects


      # The octomap that represents additional collision data

      octomap_msgs/OctomapWithPose octomap

      '
    version: 0
  moveit_msgs/PositionConstraint: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PositionConstraint.msg
    name: moveit_msgs/PositionConstraint
    package: moveit_msgs
    source: package_modeler
    spec: "\n# This message contains the definition of a position constraint.\n\n\
      Header header\n\n# The robot link this constraint refers to\nstring link_name\n\
      \n# The offset (in the link frame) for the target point on the link we are planning\
      \ for\ngeometry_msgs/Vector3 target_point_offset\n\n# The volume this constraint\
      \ refers to \nBoundingVolume constraint_region\n\n# A weighting factor for this\
      \ constraint (denotes relative importance to other constraints. Closer to zero\
      \ means less important)\nfloat64 weight\n"
    version: 0
  moveit_msgs/PositionIKRequest: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/PositionIKRequest.msg
    name: moveit_msgs/PositionIKRequest
    package: moveit_msgs
    source: package_modeler
    spec: "\n# A Position IK request message\n\n# The name of the group which will\
      \ be used to compute IK\n# e.g. \"right_arm\", or \"arms\" - see IK specification\
      \ for multiple-groups below\n# Information from the SRDF will be used to automatically\
      \ determine which link \n# to solve IK for, unless ik_link_name is also specified\n\
      string group_name\n\n# A RobotState consisting of hint/seed positions for the\
      \ IK computation and positions \n# for all the other joints in the robot. Additional\
      \ state information provided here is \n# used to specify starting positions\
      \ for other joints/links on the robot.  \n# This state MUST contain state for\
      \ all joints to be used by the IK solver\n# to compute IK. The list of joints\
      \ that the IK solver deals with can be \n# found using the SRDF for the corresponding\
      \ group\nmoveit_msgs/RobotState robot_state\n\n# A set of constraints that the\
      \ IK must obey; by default, this set of constraints is empty\nConstraints constraints\n\
      \n# Find an IK solution that avoids collisions. By default, this is false\n\
      bool avoid_collisions\n\n# (OPTIONAL) The name of the link for which we are\
      \ computing IK\n# If not specified, the link name will be inferred from a combination\
      \ \n# of the group name and the SRDF. If any values are specified for ik_link_names,\n\
      # this value is ignored\nstring ik_link_name\n\n# The stamped pose of the link,\
      \ when the IK solver computes the joint values\n# for all the joints in a group.\
      \ This value is ignored if pose_stamped_vector\n# has any elements specified.\n\
      geometry_msgs/PoseStamped pose_stamped\n\n# Multi-group parameters\n\n# (OPTIONAL)\
      \ The names of the links for which we are computing IK\n# If not specified,\
      \ the link name will be inferred from a combination \n# of the group name and\
      \ the SRDF\nstring[] ik_link_names\n\n# (OPTIONAL) The (stamped) poses of the\
      \ links we are computing IK for (when a group has more than one end effector)\n\
      # e.g. The \"arms\" group might consist of both the \"right_arm\" and the \"\
      left_arm\"\n# The order of the groups referred to is the same as the order setup\
      \ in the SRDF\ngeometry_msgs/PoseStamped[] pose_stamped_vector\n\n# Maximum\
      \ allowed time for IK calculation\nduration timeout\n\n# Maximum number of IK\
      \ attempts (if using random seeds; leave as 0 for the default value specified\
      \ on the param server to be used)\nint32 attempts\n\n"
    version: 0
  moveit_msgs/RobotState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/RobotState.msg
    name: moveit_msgs/RobotState
    package: moveit_msgs
    source: package_modeler
    spec: '

      # This message contains information about the robot state, i.e. the positions
      of its joints and links

      sensor_msgs/JointState joint_state


      # Joints that may have multiple DOF are specified here

      sensor_msgs/MultiDOFJointState multi_dof_joint_state


      # Attached collision objects (attached to some link on the robot)

      AttachedCollisionObject[] attached_collision_objects


      # Flag indicating whether this scene is to be interpreted as a diff with respect
      to some other scene

      # This is mostly important for handling the attached bodies (whether or not
      to clear the attached bodies

      # of a moveit::core::RobotState before updating it with this message)

      bool is_diff

      '
    version: 0
  moveit_msgs/RobotTrajectory: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/RobotTrajectory.msg
    name: moveit_msgs/RobotTrajectory
    package: moveit_msgs
    source: package_modeler
    spec: '

      trajectory_msgs/JointTrajectory joint_trajectory

      trajectory_msgs/MultiDOFJointTrajectory multi_dof_joint_trajectory

      '
    version: 0
  moveit_msgs/TrajectoryConstraints: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/TrajectoryConstraints.msg
    name: moveit_msgs/TrajectoryConstraints
    package: moveit_msgs
    source: package_modeler
    spec: '

      # The array of constraints to consider along the trajectory

      Constraints[] constraints

      '
    version: 0
  moveit_msgs/VisibilityConstraint: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/VisibilityConstraint.msg
    name: moveit_msgs/VisibilityConstraint
    package: moveit_msgs
    source: package_modeler
    spec: "\n# The constraint is useful to maintain visibility to a disc (the target)\
      \ in a particular frame.\n# This disc forms the base of a visibiliy cone whose\
      \ tip is at the origin of the sensor.\n# Maintaining visibility is done by ensuring\
      \ the robot does not obstruct the visibility cone.\n# Note:\n# This constraint\
      \ does NOT enforce minimum or maximum distances between the sensor\n# and the\
      \ target, nor does it enforce the target to be in the field of view of\n# the\
      \ sensor. A PositionConstraint can (and probably should) be used for such purposes.\n\
      \n# The radius of the disc that should be maintained visible \nfloat64 target_radius\n\
      \n# The pose of the disc; as the robot moves, the pose of the disc may change\
      \ as well\n# This can be in the frame of a particular robot link, for example\n\
      geometry_msgs/PoseStamped target_pose\n\n# From the sensor origin towards the\
      \ target, the disc forms a visibility cone\n# This cone is approximated using\
      \ many sides. For example, when using 4 sides, \n# that in fact makes the visibility\
      \ region be a pyramid.\n# This value should always be 3 or more.\nint32 cone_sides\n\
      \n# The pose in which visibility is to be maintained.\n# The frame id should\
      \ represent the robot link to which the sensor is attached.\n# It is assumed\
      \ the sensor can look directly at the target, in any direction.\n# This assumption\
      \ is usually not true, but additional PositionConstraints\n# can resolve this\
      \ issue.\ngeometry_msgs/PoseStamped sensor_pose\n\n# Even though the disc is\
      \ maintained visible, the visibility cone can be very small\n# because of the\
      \ orientation of the disc with respect to the sensor. It is possible\n# for\
      \ example to view the disk almost from a side, in which case the visibility\
      \ cone \n# can end up having close to 0 volume. The view angle is defined to\
      \ be the angle between\n# the normal to the visibility disc and the direction\
      \ vector from the sensor origin.\n# The value below represents the minimum desired\
      \ view angle. For a perfect view,\n# this value will be 0 (the two vectors are\
      \ exact opposites). For a completely obstructed view\n# this value will be Pi/2\
      \ (the vectors are perpendicular). This value defined below \n# is the maximum\
      \ view angle to be maintained. This should be a value in the open interval\n\
      # (0, Pi/2). If 0 is set, the view angle is NOT enforced.\nfloat64 max_view_angle\n\
      \n# This angle is used similarly to max_view_angle but limits the maximum angle\n\
      # between the sensor origin direction vector and the axis that connects the\n\
      # sensor origin to the target frame origin. The value is again in the range\
      \ (0, Pi/2)\n# and is NOT enforced if set to 0.\nfloat64 max_range_angle\n\n\
      # The axis that is assumed to indicate the direction of view for the sensor\n\
      # X = 2, Y = 1, Z = 0\nuint8 SENSOR_Z=0\nuint8 SENSOR_Y=1\nuint8 SENSOR_X=2\n\
      uint8 sensor_view_direction\n\n# A weighting factor for this constraint (denotes\
      \ relative importance to other constraints. Closer to zero means less important)\n\
      float64 weight\n"
    version: 0
  moveit_msgs/WorkspaceParameters: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/moveit_msgs/msg/WorkspaceParameters.msg
    name: moveit_msgs/WorkspaceParameters
    package: moveit_msgs
    source: package_modeler
    spec: "\n# This message contains a set of parameters useful in\n# setting up the\
      \ volume (a box) in which the robot is allowed to move.\n# This is useful only\
      \ when planning for mobile parts of \n# the robot as well.\n\n# Define the frame\
      \ of reference for the box corners\nHeader header\n\n# The minumum corner of\
      \ the box, with respect to the robot starting pose\ngeometry_msgs/Vector3 min_corner\n\
      \n# The maximum corner of the box, with respect to the robot starting pose\n\
      geometry_msgs/Vector3 max_corner\n"
    version: 0
  nav_msgs/GetMapAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nav_msgs/msg/GetMapAction.msg
    name: nav_msgs/GetMapAction
    package: nav_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      GetMapActionGoal action_goal

      GetMapActionResult action_result

      GetMapActionFeedback action_feedback

      '
    version: 0
  nav_msgs/GetMapActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nav_msgs/msg/GetMapActionFeedback.msg
    name: nav_msgs/GetMapActionFeedback
    package: nav_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      GetMapFeedback feedback

      '
    version: 0
  nav_msgs/GetMapActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nav_msgs/msg/GetMapActionGoal.msg
    name: nav_msgs/GetMapActionGoal
    package: nav_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      GetMapGoal goal

      '
    version: 0
  nav_msgs/GetMapActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nav_msgs/msg/GetMapActionResult.msg
    name: nav_msgs/GetMapActionResult
    package: nav_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      GetMapResult result

      '
    version: 0
  nav_msgs/GetMapFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nav_msgs/msg/GetMapFeedback.msg
    name: nav_msgs/GetMapFeedback
    package: nav_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      # no feedback

      '
    version: 0
  nav_msgs/GetMapGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nav_msgs/msg/GetMapGoal.msg
    name: nav_msgs/GetMapGoal
    package: nav_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      # Get the map as a nav_msgs/OccupancyGrid

      '
    version: 0
  nav_msgs/GetMapResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nav_msgs/msg/GetMapResult.msg
    name: nav_msgs/GetMapResult
    package: nav_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      nav_msgs/OccupancyGrid map

      '
    version: 0
  nav_msgs/GridCells: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nav_msgs/msg/GridCells.msg
    name: nav_msgs/GridCells
    package: nav_msgs
    source: package_modeler
    spec: '

      #an array of cells in a 2D grid

      Header header

      float32 cell_width

      float32 cell_height

      geometry_msgs/Point[] cells

      '
    version: 0
  nav_msgs/MapMetaData: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nav_msgs/msg/MapMetaData.msg
    name: nav_msgs/MapMetaData
    package: nav_msgs
    source: package_modeler
    spec: '

      # This hold basic information about the characterists of the OccupancyGrid


      # The time at which the map was loaded

      time map_load_time

      # The map resolution [m/cell]

      float32 resolution

      # Map width [cells]

      uint32 width

      # Map height [cells]

      uint32 height

      # The origin of the map [m, m, rad].  This is the real-world pose of the

      # cell (0,0) in the map.

      geometry_msgs/Pose origin'
    version: 0
  nav_msgs/OccupancyGrid: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nav_msgs/msg/OccupancyGrid.msg
    name: nav_msgs/OccupancyGrid
    package: nav_msgs
    source: package_modeler
    spec: "\n# This represents a 2-D grid map, in which each cell represents the probability\
      \ of\n# occupancy.\n\nHeader header \n\n#MetaData for the map\nMapMetaData info\n\
      \n# The map data, in row-major order, starting with (0,0).  Occupancy\n# probabilities\
      \ are in the range [0,100].  Unknown is -1.\nint8[] data\n"
    version: 0
  nav_msgs/Odometry: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nav_msgs/msg/Odometry.msg
    name: nav_msgs/Odometry
    package: nav_msgs
    source: package_modeler
    spec: "\n# This represents an estimate of a position and velocity in free space.\
      \  \n# The pose in this message should be specified in the coordinate frame\
      \ given by header.frame_id.\n# The twist in this message should be specified\
      \ in the coordinate frame given by the child_frame_id\nHeader header\nstring\
      \ child_frame_id\ngeometry_msgs/PoseWithCovariance pose\ngeometry_msgs/TwistWithCovariance\
      \ twist\n"
    version: 0
  nav_msgs/Path: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nav_msgs/msg/Path.msg
    name: nav_msgs/Path
    package: nav_msgs
    source: package_modeler
    spec: '

      #An array of poses that represents a Path for a robot to follow

      Header header

      geometry_msgs/PoseStamped[] poses

      '
    version: 0
  nmea_msgs/Gpgga: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nmea_msgs/msg/Gpgga.msg
    name: nmea_msgs/Gpgga
    package: nmea_msgs
    source: package_modeler
    spec: "\n# Message from GPGGA NMEA String\nHeader header\n\nstring message_id\n\
      \n# UTC seconds from midnight\nfloat64 utc_seconds\n\nfloat64 lat\nfloat64 lon\n\
      \nstring lat_dir\nstring lon_dir\n\nuint32 gps_qual\n\nuint32 num_sats\nfloat32\
      \ hdop \nfloat32 alt\nstring altitude_units\n\nfloat32 undulation\nstring undulation_units\n\
      uint32 diff_age\nstring station_id\n"
    version: 0
  nmea_msgs/Gpgsa: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nmea_msgs/msg/Gpgsa.msg
    name: nmea_msgs/Gpgsa
    package: nmea_msgs
    source: package_modeler
    spec: '

      # Message from GPGSA NMEA String

      Header header


      string message_id


      string auto_manual_mode

      uint8 fix_mode


      uint8[] sv_ids


      float32 pdop

      float32 hdop

      float32 vdop

      '
    version: 0
  nmea_msgs/Gpgsv: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nmea_msgs/msg/Gpgsv.msg
    name: nmea_msgs/Gpgsv
    package: nmea_msgs
    source: package_modeler
    spec: '

      # Total number of satellites in view and data about satellites

      # Because the NMEA sentence is limited to 4 satellites per message, several

      # of these messages may need to be synthesized to get data about all visible

      # satellites.


      Header header


      string message_id


      # Number of messages in this sequence

      uint8 n_msgs

      # This messages number in its sequence. The first message is number 1.

      uint8 msg_number


      # Number of satellites currently visible

      uint8 n_satellites


      # Up to 4 satellites are described in each message

      GpgsvSatellite[] satellites

      '
    version: 0
  nmea_msgs/GpgsvSatellite: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nmea_msgs/msg/GpgsvSatellite.msg
    name: nmea_msgs/GpgsvSatellite
    package: nmea_msgs
    source: package_modeler
    spec: '

      # Satellite data structure used in GPGSV messages


      # PRN number of the satellite

      # GPS = 1..32

      # SBAS = 33..64

      # GLO = 65..96

      uint8 prn


      # Elevation, degrees. Maximum 90

      uint8 elevation


      # Azimuth, True North degrees. [0, 359]

      uint16 azimuth


      # Signal to noise ratio, 0-99 dB. -1 when null in NMEA sentence (not tracking)

      int8 snr

      '
    version: 0
  nmea_msgs/Gprmc: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nmea_msgs/msg/Gprmc.msg
    name: nmea_msgs/Gprmc
    package: nmea_msgs
    source: package_modeler
    spec: '

      # Message from GPRMC NMEA String

      Header header


      string message_id


      float64 utc_seconds

      string position_status


      float64 lat

      float64 lon


      string lat_dir

      string lon_dir


      float32 speed

      float32 track

      string date

      float32 mag_var

      string mag_var_direction

      string mode_indicator

      '
    version: 0
  nmea_msgs/Sentence: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/nmea_msgs/msg/Sentence.msg
    name: nmea_msgs/Sentence
    package: nmea_msgs
    source: package_modeler
    spec: '

      # A message representing a single NMEA0183 sentence.


      # header.stamp is the ROS Time when the sentence was read.

      # header.frame_id is the frame of reference reported by the satellite

      #        receiver, usually the location of the antenna.  This is a

      #        Euclidean frame relative to the vehicle, not a reference

      #        ellipsoid.

      Header header


      # This should only contain ASCII characters in order to be a valid NMEA0183
      sentence.

      string sentence

      '
    version: 0
  object_recognition_msgs/ObjectInformation: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/object_recognition_msgs/msg/ObjectInformation.msg
    name: object_recognition_msgs/ObjectInformation
    package: object_recognition_msgs
    source: package_modeler
    spec: '

      ############################################## VISUALIZATION INFO ######################################################

      ################### THIS INFO SHOULD BE OBTAINED INDEPENDENTLY FROM THE CORE,
      LIKE IN AN RVIZ PLUGIN ###################


      # The human readable name of the object

      string name


      # The full mesh of the object: this can be useful for display purposes, augmented
      reality ... but it can be big

      # Make sure the type is MESH

      shape_msgs/Mesh ground_truth_mesh


      # Sometimes, you only have a cloud in the DB

      # Make sure the type is POINTS

      sensor_msgs/PointCloud2 ground_truth_point_cloud

      '
    version: 0
  object_recognition_msgs/ObjectRecognitionAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/object_recognition_msgs/msg/ObjectRecognitionAction.msg
    name: object_recognition_msgs/ObjectRecognitionAction
    package: object_recognition_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      ObjectRecognitionActionGoal action_goal

      ObjectRecognitionActionResult action_result

      ObjectRecognitionActionFeedback action_feedback

      '
    version: 0
  object_recognition_msgs/ObjectRecognitionActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/object_recognition_msgs/msg/ObjectRecognitionActionFeedback.msg
    name: object_recognition_msgs/ObjectRecognitionActionFeedback
    package: object_recognition_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      ObjectRecognitionFeedback feedback

      '
    version: 0
  object_recognition_msgs/ObjectRecognitionActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/object_recognition_msgs/msg/ObjectRecognitionActionGoal.msg
    name: object_recognition_msgs/ObjectRecognitionActionGoal
    package: object_recognition_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      ObjectRecognitionGoal goal

      '
    version: 0
  object_recognition_msgs/ObjectRecognitionActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/object_recognition_msgs/msg/ObjectRecognitionActionResult.msg
    name: object_recognition_msgs/ObjectRecognitionActionResult
    package: object_recognition_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      ObjectRecognitionResult result

      '
    version: 0
  object_recognition_msgs/ObjectRecognitionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/object_recognition_msgs/msg/ObjectRecognitionFeedback.msg
    name: object_recognition_msgs/ObjectRecognitionFeedback
    package: object_recognition_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      #no feedback


      '
    version: 0
  object_recognition_msgs/ObjectRecognitionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/object_recognition_msgs/msg/ObjectRecognitionGoal.msg
    name: object_recognition_msgs/ObjectRecognitionGoal
    package: object_recognition_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      # Optional ROI to use for the object detection

      bool use_roi

      float32[] filter_limits

      '
    version: 0
  object_recognition_msgs/ObjectRecognitionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/object_recognition_msgs/msg/ObjectRecognitionResult.msg
    name: object_recognition_msgs/ObjectRecognitionResult
    package: object_recognition_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      # Send the found objects, see the msg files for docs

      object_recognition_msgs/RecognizedObjectArray recognized_objects

      '
    version: 0
  object_recognition_msgs/ObjectType: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/object_recognition_msgs/msg/ObjectType.msg
    name: object_recognition_msgs/ObjectType
    package: object_recognition_msgs
    source: package_modeler
    spec: '

      ################################################## OBJECT ID #########################################################


      # Contains information about the type of a found object. Those two sets of parameters
      together uniquely define an

      # object


      # The key of the found object: the unique identifier in the given db

      string key


      # The db parameters stored as a JSON/compressed YAML string. An object id does
      not make sense without the corresponding

      # database. E.g., in object_recognition, it can look like: "{''type'':''CouchDB'',
      ''root'':''http://localhost''}"

      # There is no conventional format for those parameters and it''s nice to keep
      that flexibility.

      # The object_recognition_core as a generic DB type that can read those fields

      # Current examples:

      # For CouchDB:

      #   type: ''CouchDB''

      #   root: ''http://localhost:5984''

      #   collection: ''object_recognition''

      # For SQL household database:

      #   type: ''SqlHousehold''

      #   host: ''wgs36''

      #   port: 5432

      #   user: ''willow''

      #   password: ''willow''

      #   name: ''household_objects''

      #   module: ''tabletop''

      string db

      '
    version: 0
  object_recognition_msgs/RecognizedObject: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/object_recognition_msgs/msg/RecognizedObject.msg
    name: object_recognition_msgs/RecognizedObject
    package: object_recognition_msgs
    source: package_modeler
    spec: '

      ##################################################### HEADER ###########################################################


      # The header frame corresponds to the pose frame, NOT the point_cloud frame.

      Header header


      ################################################## OBJECT INFO #########################################################


      # Contains information about the type and the position of a found object

      # Some of those fields might not be filled because the used techniques do not
      fill them or because the user does not

      # request them


      # The type of the found object

      object_recognition_msgs/ObjectType type


      #confidence: how sure you are it is that object and not another one.

      # It is between 0 and 1 and the closer to one it is the better

      float32 confidence


      ################################################ OBJECT CLUSTERS #######################################################


      # Sometimes you can extract the 3d points that belong to the object, in the
      frames of the original sensors

      # (it is an array as you might have several sensors)

      sensor_msgs/PointCloud2[] point_clouds


      # Sometimes, you can only provide a bounding box/shape, even in 3d

      # This is in the pose frame

      shape_msgs/Mesh bounding_mesh


      # Sometimes, you only have 2d input so you can''t really give a pose, you just
      get a contour, or a box

      # The last point will be linked to the first one automatically

      geometry_msgs/Point[] bounding_contours


      #################################################### POSE INFO #########################################################


      # This is the result that everybody expects : the pose in some frame given with
      the input. The units are radian/meters

      # as usual

      geometry_msgs/PoseWithCovarianceStamped pose

      '
    version: 0
  object_recognition_msgs/RecognizedObjectArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/object_recognition_msgs/msg/RecognizedObjectArray.msg
    name: object_recognition_msgs/RecognizedObjectArray
    package: object_recognition_msgs
    source: package_modeler
    spec: '

      ##################################################### HEADER ###########################################################

      Header header


      # This message type describes a potential scene configuration: a set of objects
      that can explain the scene

      object_recognition_msgs/RecognizedObject[] objects


      ##################################################### SEARCH ###########################################################


      # The co-occurrence matrix between the recognized objects

      float32[] cooccurrence

      '
    version: 0
  object_recognition_msgs/Table: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/object_recognition_msgs/msg/Table.msg
    name: object_recognition_msgs/Table
    package: object_recognition_msgs
    source: package_modeler
    spec: "\n# Informs that a planar table has been detected at a given location\n\
      \nHeader header\n\n# The pose gives you the transform that take you to the coordinate\
      \ system\n# of the table, with the origin somewhere in the table plane and the\
      \ \n# z axis normal to the plane\ngeometry_msgs/Pose pose\n\n# There is no guarantee\
      \ that the table does NOT extend further than the\n# convex hull; this is just\
      \ as far as we've observed it.\n# The origin of the table coordinate system\
      \ is inside the convex hull\n\n# Set of points forming the convex hull of the\
      \ table\ngeometry_msgs/Point[] convex_hull\n"
    version: 0
  object_recognition_msgs/TableArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/object_recognition_msgs/msg/TableArray.msg
    name: object_recognition_msgs/TableArray
    package: object_recognition_msgs
    source: package_modeler
    spec: '

      Header header


      # Just an array of tables

      object_recognition_msgs/Table[] tables

      '
    version: 0
  octomap_msgs/Octomap: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/octomap_msgs/msg/Octomap.msg
    name: octomap_msgs/Octomap
    package: octomap_msgs
    source: package_modeler
    spec: "\n# A 3D map in binary format, as Octree\nHeader header\n\n# Flag to denote\
      \ a binary (only free/occupied) or full occupancy octree (.bt/.ot file)\nbool\
      \ binary\n\n# Class id of the contained octree \nstring id\n\n# Resolution (in\
      \ m) of the smallest octree nodes\nfloat64 resolution\n\n# binary serialization\
      \ of octree, use conversions.h to read and write octrees\nint8[] data\n"
    version: 0
  octomap_msgs/OctomapWithPose: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/octomap_msgs/msg/OctomapWithPose.msg
    name: octomap_msgs/OctomapWithPose
    package: octomap_msgs
    source: package_modeler
    spec: "\n# A 3D map in binary format, as Octree\nHeader header\n\n# The pose of\
      \ the octree with respect to the header frame \ngeometry_msgs/Pose origin\n\n\
      # The actual octree msg\noctomap_msgs/Octomap octomap\n"
    version: 0
  pcl_msgs/ModelCoefficients: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/pcl_msgs/msg/ModelCoefficients.msg
    name: pcl_msgs/ModelCoefficients
    package: pcl_msgs
    source: package_modeler
    spec: '

      Header header

      float32[] values


      '
    version: 0
  pcl_msgs/PointIndices: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/pcl_msgs/msg/PointIndices.msg
    name: pcl_msgs/PointIndices
    package: pcl_msgs
    source: package_modeler
    spec: '

      Header header

      int32[] indices


      '
    version: 0
  pcl_msgs/PolygonMesh: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/pcl_msgs/msg/PolygonMesh.msg
    name: pcl_msgs/PolygonMesh
    package: pcl_msgs
    source: package_modeler
    spec: '

      # Separate header for the polygonal surface

      Header header

      # Vertices of the mesh as a point cloud

      sensor_msgs/PointCloud2 cloud

      # List of polygons

      Vertices[] polygons

      '
    version: 0
  pcl_msgs/Vertices: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/pcl_msgs/msg/Vertices.msg
    name: pcl_msgs/Vertices
    package: pcl_msgs
    source: package_modeler
    spec: '

      # List of point indices

      uint32[] vertices

      '
    version: 0
  roscpp/Logger: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/roscpp/msg/Logger.msg
    name: roscpp/Logger
    package: roscpp
    source: package_modeler
    spec: '

      string name

      string level

      '
    version: 0
  rosgraph_msgs/Clock: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/rosgraph_msgs/msg/Clock.msg
    name: rosgraph_msgs/Clock
    package: rosgraph_msgs
    source: package_modeler
    spec: "\n# roslib/Clock is used for publishing simulated time in ROS. \n# This\
      \ message simply communicates the current time.\n# For more information, see\
      \ http://www.ros.org/wiki/Clock\ntime clock\n"
    version: 0
  rosgraph_msgs/Log: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/rosgraph_msgs/msg/Log.msg
    name: rosgraph_msgs/Log
    package: rosgraph_msgs
    source: package_modeler
    spec: "\n##\n## Severity level constants\n##\nbyte DEBUG=1 #debug level\nbyte\
      \ INFO=2  #general level\nbyte WARN=4  #warning level\nbyte ERROR=8 #error level\n\
      byte FATAL=16 #fatal/critical level\n##\n## Fields\n##\nHeader header\nbyte\
      \ level\nstring name # name of the node\nstring msg # message \nstring file\
      \ # file the message came from\nstring function # function the message came\
      \ from\nuint32 line # line the message came from\nstring[] topics # topic names\
      \ that the node publishes\n"
    version: 0
  rosgraph_msgs/TopicStatistics: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/rosgraph_msgs/msg/TopicStatistics.msg
    name: rosgraph_msgs/TopicStatistics
    package: rosgraph_msgs
    source: package_modeler
    spec: '

      # name of the topic

      string topic


      # node id of the publisher

      string node_pub


      # node id of the subscriber

      string node_sub


      # the statistics apply to this time window

      time window_start

      time window_stop


      # number of messages delivered during the window

      int32 delivered_msgs

      # numbers of messages dropped during the window

      int32 dropped_msgs


      # traffic during the window, in bytes

      int32 traffic


      # mean/stddev/max period between two messages

      duration period_mean

      duration period_stddev

      duration period_max


      # mean/stddev/max age of the message based on the

      # timestamp in the message header. In case the

      # message does not have a header, it will be 0.

      duration stamp_age_mean

      duration stamp_age_stddev

      duration stamp_age_max

      '
    version: 0
  rospy_tutorials/Floats: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/rospy_tutorials/msg/Floats.msg
    name: rospy_tutorials/Floats
    package: rospy_tutorials
    source: package_modeler
    spec: '

      float32[] data

      '
    version: 0
  rospy_tutorials/HeaderString: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/rospy_tutorials/msg/HeaderString.msg
    name: rospy_tutorials/HeaderString
    package: rospy_tutorials
    source: package_modeler
    spec: '

      Header header

      string data

      '
    version: 0
  rosserial_msgs/Log: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/rosserial_msgs/msg/Log.msg
    name: rosserial_msgs/Log
    package: rosserial_msgs
    source: package_modeler
    spec: '


      #ROS Logging Levels

      uint8 ROSDEBUG=0

      uint8 INFO=1

      uint8 WARN=2

      uint8 ERROR=3

      uint8 FATAL=4


      uint8 level

      string msg

      '
    version: 0
  rosserial_msgs/TopicInfo: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/rosserial_msgs/msg/TopicInfo.msg
    name: rosserial_msgs/TopicInfo
    package: rosserial_msgs
    source: package_modeler
    spec: '

      # special topic_ids

      uint16 ID_PUBLISHER=0

      uint16 ID_SUBSCRIBER=1

      uint16 ID_SERVICE_SERVER=2

      uint16 ID_SERVICE_CLIENT=4

      uint16 ID_PARAMETER_REQUEST=6

      uint16 ID_LOG=7

      uint16 ID_TIME=10

      uint16 ID_TX_STOP=11


      # The endpoint ID for this topic

      uint16 topic_id


      string topic_name

      string message_type


      # MD5 checksum for this message type

      string md5sum


      # size of the buffer message must fit in

      int32 buffer_size

      '
    version: 0
  sensor_msgs/BatteryState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/BatteryState.msg
    name: sensor_msgs/BatteryState
    package: sensor_msgs
    source: package_modeler
    spec: "\n\n# Constants are chosen to match the enums in the linux kernel\n# defined\
      \ in include/linux/power_supply.h as of version 3.7\n# The one difference is\
      \ for style reasons the constants are\n# all uppercase not mixed case.\n\n#\
      \ Power supply status constants\nuint8 POWER_SUPPLY_STATUS_UNKNOWN = 0\nuint8\
      \ POWER_SUPPLY_STATUS_CHARGING = 1\nuint8 POWER_SUPPLY_STATUS_DISCHARGING =\
      \ 2\nuint8 POWER_SUPPLY_STATUS_NOT_CHARGING = 3\nuint8 POWER_SUPPLY_STATUS_FULL\
      \ = 4\n\n# Power supply health constants\nuint8 POWER_SUPPLY_HEALTH_UNKNOWN\
      \ = 0\nuint8 POWER_SUPPLY_HEALTH_GOOD = 1\nuint8 POWER_SUPPLY_HEALTH_OVERHEAT\
      \ = 2\nuint8 POWER_SUPPLY_HEALTH_DEAD = 3\nuint8 POWER_SUPPLY_HEALTH_OVERVOLTAGE\
      \ = 4\nuint8 POWER_SUPPLY_HEALTH_UNSPEC_FAILURE = 5\nuint8 POWER_SUPPLY_HEALTH_COLD\
      \ = 6\nuint8 POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE = 7\nuint8 POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE\
      \ = 8\n\n# Power supply technology (chemistry) constants\nuint8 POWER_SUPPLY_TECHNOLOGY_UNKNOWN\
      \ = 0\nuint8 POWER_SUPPLY_TECHNOLOGY_NIMH = 1\nuint8 POWER_SUPPLY_TECHNOLOGY_LION\
      \ = 2\nuint8 POWER_SUPPLY_TECHNOLOGY_LIPO = 3\nuint8 POWER_SUPPLY_TECHNOLOGY_LIFE\
      \ = 4\nuint8 POWER_SUPPLY_TECHNOLOGY_NICD = 5\nuint8 POWER_SUPPLY_TECHNOLOGY_LIMN\
      \ = 6\n\nHeader  header\nfloat32 voltage          # Voltage in Volts (Mandatory)\n\
      float32 current          # Negative when discharging (A)  (If unmeasured NaN)\n\
      float32 charge           # Current charge in Ah  (If unmeasured NaN)\nfloat32\
      \ capacity         # Capacity in Ah (last full capacity)  (If unmeasured NaN)\n\
      float32 design_capacity  # Capacity in Ah (design capacity)  (If unmeasured\
      \ NaN)\nfloat32 percentage       # Charge percentage on 0 to 1 range  (If unmeasured\
      \ NaN)\nuint8   power_supply_status     # The charging status as reported. Values\
      \ defined above\nuint8   power_supply_health     # The battery health metric.\
      \ Values defined above\nuint8   power_supply_technology # The battery chemistry.\
      \ Values defined above\nbool    present          # True if the battery is present\n\
      \nfloat32[] cell_voltage   # An array of individual cell voltages for each cell\
      \ in the pack\n                         # If individual voltages unknown but\
      \ number of cells known set each to NaN\nstring location          # The location\
      \ into which the battery is inserted. (slot number or plug)\nstring serial_number\
      \     # The best approximation of the battery serial number\n"
    version: 0
  sensor_msgs/CameraInfo: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/CameraInfo.msg
    name: sensor_msgs/CameraInfo
    package: sensor_msgs
    source: package_modeler
    spec: "\n# This message defines meta information for a camera. It should be in\
      \ a\n# camera namespace on topic \"camera_info\" and accompanied by up to five\n\
      # image topics named:\n#\n#   image_raw - raw data from the camera driver, possibly\
      \ Bayer encoded\n#   image            - monochrome, distorted\n#   image_color\
      \      - color, distorted\n#   image_rect       - monochrome, rectified\n# \
      \  image_rect_color - color, rectified\n#\n# The image_pipeline contains packages\
      \ (image_proc, stereo_image_proc)\n# for producing the four processed image\
      \ topics from image_raw and\n# camera_info. The meaning of the camera parameters\
      \ are described in\n# detail at http://www.ros.org/wiki/image_pipeline/CameraInfo.\n\
      #\n# The image_geometry package provides a user-friendly interface to\n# common\
      \ operations using this meta information. If you want to, e.g.,\n# project a\
      \ 3d point into image coordinates, we strongly recommend\n# using image_geometry.\n\
      #\n# If the camera is uncalibrated, the matrices D, K, R, P should be left\n\
      # zeroed out. In particular, clients may assume that K[0] == 0.0\n# indicates\
      \ an uncalibrated camera.\n\n#######################################################################\n\
      #                     Image acquisition info                          #\n#######################################################################\n\
      \n# Time of image acquisition, camera coordinate frame ID\nHeader header   \
      \ # Header timestamp should be acquisition time of image\n                 #\
      \ Header frame_id should be optical frame of camera\n                 # origin\
      \ of frame should be optical center of camera\n                 # +x should\
      \ point to the right in the image\n                 # +y should point down in\
      \ the image\n                 # +z should point into the plane of the image\n\
      \n\n#######################################################################\n\
      #                      Calibration Parameters                         #\n#######################################################################\n\
      # These are fixed during camera calibration. Their values will be the #\n# same\
      \ in all messages until the camera is recalibrated. Note that    #\n# self-calibrating\
      \ systems may \"recalibrate\" frequently.              #\n#                \
      \                                                     #\n# The internal parameters\
      \ can be used to warp a raw (distorted) image #\n# to:                     \
      \                                            #\n#   1. An undistorted image\
      \ (requires D and K)                        #\n#   2. A rectified image (requires\
      \ D, K, R)                           #\n# The projection matrix P projects 3D\
      \ points into the rectified image.#\n#######################################################################\n\
      \n# The image dimensions with which the camera was calibrated. Normally\n# this\
      \ will be the full camera resolution in pixels.\nuint32 height\nuint32 width\n\
      \n# The distortion model used. Supported models are listed in\n# sensor_msgs/distortion_models.h.\
      \ For most cameras, \"plumb_bob\" - a\n# simple model of radial and tangential\
      \ distortion - is sufficient.\nstring distortion_model\n\n# The distortion parameters,\
      \ size depending on the distortion model.\n# For \"plumb_bob\", the 5 parameters\
      \ are: (k1, k2, t1, t2, k3).\nfloat64[] D\n\n# Intrinsic camera matrix for the\
      \ raw (distorted) images.\n#     [fx  0 cx]\n# K = [ 0 fy cy]\n#     [ 0  0\
      \  1]\n# Projects 3D points in the camera coordinate frame to 2D pixel\n# coordinates\
      \ using the focal lengths (fx, fy) and principal point\n# (cx, cy).\nfloat64[9]\
      \  K # 3x3 row-major matrix\n\n# Rectification matrix (stereo cameras only)\n\
      # A rotation matrix aligning the camera coordinate system to the ideal\n# stereo\
      \ image plane so that epipolar lines in both stereo images are\n# parallel.\n\
      float64[9]  R # 3x3 row-major matrix\n\n# Projection/camera matrix\n#     [fx'\
      \  0  cx' Tx]\n# P = [ 0  fy' cy' Ty]\n#     [ 0   0   1   0]\n# By convention,\
      \ this matrix specifies the intrinsic (camera) matrix\n#  of the processed (rectified)\
      \ image. That is, the left 3x3 portion\n#  is the normal camera intrinsic matrix\
      \ for the rectified image.\n# It projects 3D points in the camera coordinate\
      \ frame to 2D pixel\n#  coordinates using the focal lengths (fx', fy') and principal\
      \ point\n#  (cx', cy') - these may differ from the values in K.\n# For monocular\
      \ cameras, Tx = Ty = 0. Normally, monocular cameras will\n#  also have R = the\
      \ identity and P[1:3,1:3] = K.\n# For a stereo pair, the fourth column [Tx Ty\
      \ 0]' is related to the\n#  position of the optical center of the second camera\
      \ in the first\n#  camera's frame. We assume Tz = 0 so both cameras are in the\
      \ same\n#  stereo image plane. The first camera always has Tx = Ty = 0. For\n\
      #  the right (second) camera of a horizontal stereo pair, Ty = 0 and\n#  Tx\
      \ = -fx' * B, where B is the baseline between the cameras.\n# Given a 3D point\
      \ [X Y Z]', the projection (x, y) of the point onto\n#  the rectified image\
      \ is given by:\n#  [u v w]' = P * [X Y Z 1]'\n#         x = u / w\n#       \
      \  y = v / w\n#  This holds for both images of a stereo pair.\nfloat64[12] P\
      \ # 3x4 row-major matrix\n\n\n#######################################################################\n\
      #                      Operational Parameters                         #\n#######################################################################\n\
      # These define the image region actually captured by the camera       #\n# driver.\
      \ Although they affect the geometry of the output image, they #\n# may be changed\
      \ freely without recalibrating the camera.             #\n#######################################################################\n\
      \n# Binning refers here to any camera setting which combines rectangular\n#\
      \  neighborhoods of pixels into larger \"super-pixels.\" It reduces the\n# \
      \ resolution of the output image to\n#  (width / binning_x) x (height / binning_y).\n\
      # The default values binning_x = binning_y = 0 is considered the same\n#  as\
      \ binning_x = binning_y = 1 (no subsampling).\nuint32 binning_x\nuint32 binning_y\n\
      \n# Region of interest (subwindow of full camera resolution), given in\n#  full\
      \ resolution (unbinned) image coordinates. A particular ROI\n#  always denotes\
      \ the same window of pixels on the camera sensor,\n#  regardless of binning\
      \ settings.\n# The default setting of roi (all values 0) is considered the same\
      \ as\n#  full resolution (roi.width = width, roi.height = height).\nRegionOfInterest\
      \ roi\n"
    version: 0
  sensor_msgs/ChannelFloat32: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/ChannelFloat32.msg
    name: sensor_msgs/ChannelFloat32
    package: sensor_msgs
    source: package_modeler
    spec: '

      # This message is used by the PointCloud message to hold optional data

      # associated with each point in the cloud. The length of the values

      # array should be the same as the length of the points array in the

      # PointCloud, and each value should be associated with the corresponding

      # point.


      # Channel names in existing practice include:

      #   "u", "v" - row and column (respectively) in the left stereo image.

      #              This is opposite to usual conventions but remains for

      #              historical reasons. The newer PointCloud2 message has no

      #              such problem.

      #   "rgb" - For point clouds produced by color stereo cameras. uint8

      #           (R,G,B) values packed into the least significant 24 bits,

      #           in order.

      #   "intensity" - laser or pixel intensity.

      #   "distance"


      # The channel name should give semantics of the channel (e.g.

      # "intensity" instead of "value").

      string name


      # The values array should be 1-1 with the elements of the associated

      # PointCloud.

      float32[] values

      '
    version: 0
  sensor_msgs/CompressedImage: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/CompressedImage.msg
    name: sensor_msgs/CompressedImage
    package: sensor_msgs
    source: package_modeler
    spec: "\n# This message contains a compressed image\n\nHeader header        #\
      \ Header timestamp should be acquisition time of image\n                   \
      \  # Header frame_id should be optical frame of camera\n                   \
      \  # origin of frame should be optical center of camera\n                  \
      \   # +x should point to the right in the image\n                     # +y should\
      \ point down in the image\n                     # +z should point into to plane\
      \ of the image\n\nstring format        # Specifies the format of the data\n\
      \                     #   Acceptable values:\n                     #     jpeg,\
      \ png\nuint8[] data         # Compressed image buffer\n"
    version: 0
  sensor_msgs/FluidPressure: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/FluidPressure.msg
    name: sensor_msgs/FluidPressure
    package: sensor_msgs
    source: package_modeler
    spec: "\n # Single pressure reading.  This message is appropriate for measuring\
      \ the\n # pressure inside of a fluid (air, water, etc).  This also includes\n\
      \ # atmospheric or barometric pressure.\n\n # This message is not appropriate\
      \ for force/pressure contact sensors.\n\n Header header           # timestamp\
      \ of the measurement\n                         # frame_id is the location of\
      \ the pressure sensor\n\n float64 fluid_pressure  # Absolute pressure reading\
      \ in Pascals.\n\n float64 variance        # 0 is interpreted as variance unknown"
    version: 0
  sensor_msgs/Illuminance: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/Illuminance.msg
    name: sensor_msgs/Illuminance
    package: sensor_msgs
    source: package_modeler
    spec: "\n # Single photometric illuminance measurement.  Light should be assumed\
      \ to be\n # measured along the sensor's x-axis (the area of detection is the\
      \ y-z plane).\n # The illuminance should have a 0 or positive value and be received\
      \ with\n # the sensor's +X axis pointing toward the light source.\n\n # Photometric\
      \ illuminance is the measure of the human eye's sensitivity of the\n # intensity\
      \ of light encountering or passing through a surface.\n\n # All other Photometric\
      \ and Radiometric measurements should\n # not use this message.\n # This message\
      \ cannot represent:\n # Luminous intensity (candela/light source output)\n #\
      \ Luminance (nits/light output per area)\n # Irradiance (watt/area), etc.\n\n\
      \ Header header           # timestamp is the time the illuminance was measured\n\
      \                         # frame_id is the location and direction of the reading\n\
      \n float64 illuminance     # Measurement of the Photometric Illuminance in Lux.\n\
      \n float64 variance        # 0 is interpreted as variance unknown"
    version: 0
  sensor_msgs/Image: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/Image.msg
    name: sensor_msgs/Image
    package: sensor_msgs
    source: package_modeler
    spec: "\n# This message contains an uncompressed image\n# (0, 0) is at top-left\
      \ corner of image\n#\n\nHeader header        # Header timestamp should be acquisition\
      \ time of image\n                     # Header frame_id should be optical frame\
      \ of camera\n                     # origin of frame should be optical center\
      \ of camera\n                     # +x should point to the right in the image\n\
      \                     # +y should point down in the image\n                \
      \     # +z should point into to plane of the image\n                     # If\
      \ the frame_id here and the frame_id of the CameraInfo\n                   \
      \  # message associated with the image conflict\n                     # the\
      \ behavior is undefined\n\nuint32 height         # image height, that is, number\
      \ of rows\nuint32 width          # image width, that is, number of columns\n\
      \n# The legal values for encoding are in file src/image_encodings.cpp\n# If\
      \ you want to standardize a new string format, join\n# ros-users@lists.sourceforge.net\
      \ and send an email proposing a new encoding.\n\nstring encoding       # Encoding\
      \ of pixels -- channel meaning, ordering, size\n                      # taken\
      \ from the list of strings in include/sensor_msgs/image_encodings.h\n\nuint8\
      \ is_bigendian    # is this data bigendian?\nuint32 step           # Full row\
      \ length in bytes\nuint8[] data          # actual matrix data, size is (step\
      \ * rows)\n"
    version: 0
  sensor_msgs/Imu: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/Imu.msg
    name: sensor_msgs/Imu
    package: sensor_msgs
    source: package_modeler
    spec: "\n# This is a message to hold data from an IMU (Inertial Measurement Unit)\n\
      #\n# Accelerations should be in m/s^2 (not in g's), and rotational velocity\
      \ should be in rad/sec\n#\n# If the covariance of the measurement is known,\
      \ it should be filled in (if all you know is the \n# variance of each measurement,\
      \ e.g. from the datasheet, just put those along the diagonal)\n# A covariance\
      \ matrix of all zeros will be interpreted as \"covariance unknown\", and to\
      \ use the\n# data a covariance will have to be assumed or gotten from some other\
      \ source\n#\n# If you have no estimate for one of the data elements (e.g. your\
      \ IMU doesn't produce an orientation \n# estimate), please set element 0 of\
      \ the associated covariance matrix to -1\n# If you are interpreting this message,\
      \ please check for a value of -1 in the first element of each \n# covariance\
      \ matrix, and disregard the associated estimate.\n\nHeader header\n\ngeometry_msgs/Quaternion\
      \ orientation\nfloat64[9] orientation_covariance # Row major about x, y, z axes\n\
      \ngeometry_msgs/Vector3 angular_velocity\nfloat64[9] angular_velocity_covariance\
      \ # Row major about x, y, z axes\n\ngeometry_msgs/Vector3 linear_acceleration\n\
      float64[9] linear_acceleration_covariance # Row major x, y z \n"
    version: 0
  sensor_msgs/JointState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/JointState.msg
    name: sensor_msgs/JointState
    package: sensor_msgs
    source: package_modeler
    spec: "\n# This is a message that holds data to describe the state of a set of\
      \ torque controlled joints. \n#\n# The state of each joint (revolute or prismatic)\
      \ is defined by:\n#  * the position of the joint (rad or m),\n#  * the velocity\
      \ of the joint (rad/s or m/s) and \n#  * the effort that is applied in the joint\
      \ (Nm or N).\n#\n# Each joint is uniquely identified by its name\n# The header\
      \ specifies the time at which the joint states were recorded. All the joint\
      \ states\n# in one message have to be recorded at the same time.\n#\n# This\
      \ message consists of a multiple arrays, one for each part of the joint state.\
      \ \n# The goal is to make each of the fields optional. When e.g. your joints\
      \ have no\n# effort associated with them, you can leave the effort array empty.\
      \ \n#\n# All arrays in this message should have the same size, or be empty.\n\
      # This is the only way to uniquely associate the joint name with the correct\n\
      # states.\n\n\nHeader header\n\nstring[] name\nfloat64[] position\nfloat64[]\
      \ velocity\nfloat64[] effort\n"
    version: 0
  sensor_msgs/Joy: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/Joy.msg
    name: sensor_msgs/Joy
    package: sensor_msgs
    source: package_modeler
    spec: "\n# Reports the state of a joysticks axes and buttons.\nHeader header \
      \          # timestamp in the header is the time the data is received from the\
      \ joystick\nfloat32[] axes          # the axes measurements from a joystick\n\
      int32[] buttons         # the buttons measurements from a joystick \n"
    version: 0
  sensor_msgs/JoyFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/JoyFeedback.msg
    name: sensor_msgs/JoyFeedback
    package: sensor_msgs
    source: package_modeler
    spec: '

      # Declare of the type of feedback

      uint8 TYPE_LED    = 0

      uint8 TYPE_RUMBLE = 1

      uint8 TYPE_BUZZER = 2


      uint8 type


      # This will hold an id number for each type of each feedback.

      # Example, the first led would be id=0, the second would be id=1

      uint8 id


      # Intensity of the feedback, from 0.0 to 1.0, inclusive.  If device is

      # actually binary, driver should treat 0<=x<0.5 as off, 0.5<=x<=1 as on.

      float32 intensity


      '
    version: 0
  sensor_msgs/JoyFeedbackArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/JoyFeedbackArray.msg
    name: sensor_msgs/JoyFeedbackArray
    package: sensor_msgs
    source: package_modeler
    spec: "\n# This message publishes values for multiple feedback at once. \nJoyFeedback[]\
      \ array"
    version: 0
  sensor_msgs/LaserEcho: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/LaserEcho.msg
    name: sensor_msgs/LaserEcho
    package: sensor_msgs
    source: package_modeler
    spec: "\n# This message is a submessage of MultiEchoLaserScan and is not intended\n\
      # to be used separately.\n\nfloat32[] echoes  # Multiple values of ranges or\
      \ intensities.\n                  # Each array represents data from the same\
      \ angle increment."
    version: 0
  sensor_msgs/LaserScan: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/LaserScan.msg
    name: sensor_msgs/LaserScan
    package: sensor_msgs
    source: package_modeler
    spec: "\n# Single scan from a planar laser range-finder\n#\n# If you have another\
      \ ranging device with different behavior (e.g. a sonar\n# array), please find\
      \ or create a different message, since applications\n# will make fairly laser-specific\
      \ assumptions about this data\n\nHeader header            # timestamp in the\
      \ header is the acquisition time of \n                         # the first ray\
      \ in the scan.\n                         #\n                         # in frame\
      \ frame_id, angles are measured around \n                         # the positive\
      \ Z axis (counterclockwise, if Z is up)\n                         # with zero\
      \ angle being forward along the x axis\n                         \nfloat32 angle_min\
      \        # start angle of the scan [rad]\nfloat32 angle_max        # end angle\
      \ of the scan [rad]\nfloat32 angle_increment  # angular distance between measurements\
      \ [rad]\n\nfloat32 time_increment   # time between measurements [seconds] -\
      \ if your scanner\n                         # is moving, this will be used in\
      \ interpolating position\n                         # of 3d points\nfloat32 scan_time\
      \        # time between scans [seconds]\n\nfloat32 range_min        # minimum\
      \ range value [m]\nfloat32 range_max        # maximum range value [m]\n\nfloat32[]\
      \ ranges         # range data [m] (Note: values < range_min or > range_max should\
      \ be discarded)\nfloat32[] intensities    # intensity data [device-specific\
      \ units].  If your\n                         # device does not provide intensities,\
      \ please leave\n                         # the array empty.\n"
    version: 0
  sensor_msgs/MagneticField: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/MagneticField.msg
    name: sensor_msgs/MagneticField
    package: sensor_msgs
    source: package_modeler
    spec: "\n # Measurement of the Magnetic Field vector at a specific location.\n\
      \n # If the covariance of the measurement is known, it should be filled in\n\
      \ # (if all you know is the variance of each measurement, e.g. from the datasheet,\n\
      \ #just put those along the diagonal)\n # A covariance matrix of all zeros will\
      \ be interpreted as \"covariance unknown\",\n # and to use the data a covariance\
      \ will have to be assumed or gotten from some\n # other source\n\n\n Header\
      \ header                        # timestamp is the time the\n              \
      \                        # field was measured\n                            \
      \          # frame_id is the location and orientation\n                    \
      \                  # of the field measurement\n\n geometry_msgs/Vector3 magnetic_field\
      \ # x, y, and z components of the\n                                      # field\
      \ vector in Tesla\n                                      # If your sensor does\
      \ not output 3 axes,\n                                      # put NaNs in the\
      \ components not reported.\n\n float64[9] magnetic_field_covariance # Row major\
      \ about x, y, z axes\n                                      # 0 is interpreted\
      \ as variance unknown"
    version: 0
  sensor_msgs/MultiDOFJointState: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/MultiDOFJointState.msg
    name: sensor_msgs/MultiDOFJointState
    package: sensor_msgs
    source: package_modeler
    spec: "\n# Representation of state for joints with multiple degrees of freedom,\
      \ \n# following the structure of JointState.\n#\n# It is assumed that a joint\
      \ in a system corresponds to a transform that gets applied \n# along the kinematic\
      \ chain. For example, a planar joint (as in URDF) is 3DOF (x, y, yaw)\n# and\
      \ those 3DOF can be expressed as a transformation matrix, and that transformation\n\
      # matrix can be converted back to (x, y, yaw)\n#\n# Each joint is uniquely identified\
      \ by its name\n# The header specifies the time at which the joint states were\
      \ recorded. All the joint states\n# in one message have to be recorded at the\
      \ same time.\n#\n# This message consists of a multiple arrays, one for each\
      \ part of the joint state. \n# The goal is to make each of the fields optional.\
      \ When e.g. your joints have no\n# wrench associated with them, you can leave\
      \ the wrench array empty. \n#\n# All arrays in this message should have the\
      \ same size, or be empty.\n# This is the only way to uniquely associate the\
      \ joint name with the correct\n# states.\n\nHeader header\n\nstring[] joint_names\n\
      geometry_msgs/Transform[] transforms\ngeometry_msgs/Twist[] twist\ngeometry_msgs/Wrench[]\
      \ wrench\n"
    version: 0
  sensor_msgs/MultiEchoLaserScan: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/MultiEchoLaserScan.msg
    name: sensor_msgs/MultiEchoLaserScan
    package: sensor_msgs
    source: package_modeler
    spec: "\n# Single scan from a multi-echo planar laser range-finder\n#\n# If you\
      \ have another ranging device with different behavior (e.g. a sonar\n# array),\
      \ please find or create a different message, since applications\n# will make\
      \ fairly laser-specific assumptions about this data\n\nHeader header       \
      \     # timestamp in the header is the acquisition time of \n              \
      \           # the first ray in the scan.\n                         #\n     \
      \                    # in frame frame_id, angles are measured around \n    \
      \                     # the positive Z axis (counterclockwise, if Z is up)\n\
      \                         # with zero angle being forward along the x axis\n\
      \                         \nfloat32 angle_min        # start angle of the scan\
      \ [rad]\nfloat32 angle_max        # end angle of the scan [rad]\nfloat32 angle_increment\
      \  # angular distance between measurements [rad]\n\nfloat32 time_increment \
      \  # time between measurements [seconds] - if your scanner\n               \
      \          # is moving, this will be used in interpolating position\n      \
      \                   # of 3d points\nfloat32 scan_time        # time between\
      \ scans [seconds]\n\nfloat32 range_min        # minimum range value [m]\nfloat32\
      \ range_max        # maximum range value [m]\n\nLaserEcho[] ranges       # range\
      \ data [m] (Note: NaNs, values < range_min or > range_max should be discarded)\n\
      \                         # +Inf measurements are out of range\n           \
      \              # -Inf measurements are too close to determine exact distance.\n\
      LaserEcho[] intensities  # intensity data [device-specific units].  If your\n\
      \                         # device does not provide intensities, please leave\n\
      \                         # the array empty."
    version: 0
  sensor_msgs/NavSatFix: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/NavSatFix.msg
    name: sensor_msgs/NavSatFix
    package: sensor_msgs
    source: package_modeler
    spec: '

      # Navigation Satellite fix for any Global Navigation Satellite System

      #

      # Specified using the WGS 84 reference ellipsoid


      # header.stamp specifies the ROS time for this measurement (the

      #        corresponding satellite time may be reported using the

      #        sensor_msgs/TimeReference message).

      #

      # header.frame_id is the frame of reference reported by the satellite

      #        receiver, usually the location of the antenna.  This is a

      #        Euclidean frame relative to the vehicle, not a reference

      #        ellipsoid.

      Header header


      # satellite fix status information

      NavSatStatus status


      # Latitude [degrees]. Positive is north of equator; negative is south.

      float64 latitude


      # Longitude [degrees]. Positive is east of prime meridian; negative is west.

      float64 longitude


      # Altitude [m]. Positive is above the WGS 84 ellipsoid

      # (quiet NaN if no altitude is available).

      float64 altitude


      # Position covariance [m^2] defined relative to a tangential plane

      # through the reported position. The components are East, North, and

      # Up (ENU), in row-major order.

      #

      # Beware: this coordinate system exhibits singularities at the poles.


      float64[9] position_covariance


      # If the covariance of the fix is known, fill it in completely. If the

      # GPS receiver provides the variance of each measurement, put them

      # along the diagonal. If only Dilution of Precision is available,

      # estimate an approximate covariance from that.


      uint8 COVARIANCE_TYPE_UNKNOWN = 0

      uint8 COVARIANCE_TYPE_APPROXIMATED = 1

      uint8 COVARIANCE_TYPE_DIAGONAL_KNOWN = 2

      uint8 COVARIANCE_TYPE_KNOWN = 3


      uint8 position_covariance_type

      '
    version: 0
  sensor_msgs/NavSatStatus: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/NavSatStatus.msg
    name: sensor_msgs/NavSatStatus
    package: sensor_msgs
    source: package_modeler
    spec: '

      # Navigation Satellite fix status for any Global Navigation Satellite System


      # Whether to output an augmented fix is determined by both the fix

      # type and the last time differential corrections were received.  A

      # fix is valid when status >= STATUS_FIX.


      int8 STATUS_NO_FIX =  -1        # unable to fix position

      int8 STATUS_FIX =      0        # unaugmented fix

      int8 STATUS_SBAS_FIX = 1        # with satellite-based augmentation

      int8 STATUS_GBAS_FIX = 2        # with ground-based augmentation


      int8 status


      # Bits defining which Global Navigation Satellite System signals were

      # used by the receiver.


      uint16 SERVICE_GPS =     1

      uint16 SERVICE_GLONASS = 2

      uint16 SERVICE_COMPASS = 4      # includes BeiDou.

      uint16 SERVICE_GALILEO = 8


      uint16 service

      '
    version: 0
  sensor_msgs/PointCloud: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/PointCloud.msg
    name: sensor_msgs/PointCloud
    package: sensor_msgs
    source: package_modeler
    spec: '

      # This message holds a collection of 3d points, plus optional additional

      # information about each point.


      # Time of sensor data acquisition, coordinate frame ID.

      Header header


      # Array of 3d points. Each Point32 should be interpreted as a 3d point

      # in the frame given in the header.

      geometry_msgs/Point32[] points


      # Each channel should have the same number of elements as points array,

      # and the data in each channel should correspond 1:1 with each point.

      # Channel names in common practice are listed in ChannelFloat32.msg.

      ChannelFloat32[] channels

      '
    version: 0
  sensor_msgs/PointCloud2: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/PointCloud2.msg
    name: sensor_msgs/PointCloud2
    package: sensor_msgs
    source: package_modeler
    spec: '

      # This message holds a collection of N-dimensional points, which may

      # contain additional information such as normals, intensity, etc. The

      # point data is stored as a binary blob, its layout described by the

      # contents of the "fields" array.


      # The point cloud data may be organized 2d (image-like) or 1d

      # (unordered). Point clouds organized as 2d images may be produced by

      # camera depth sensors such as stereo or time-of-flight.


      # Time of sensor data acquisition, and the coordinate frame ID (for 3d

      # points).

      Header header


      # 2D structure of the point cloud. If the cloud is unordered, height is

      # 1 and width is the length of the point cloud.

      uint32 height

      uint32 width


      # Describes the channels and their layout in the binary data blob.

      PointField[] fields


      bool    is_bigendian # Is this data bigendian?

      uint32  point_step   # Length of a point in bytes

      uint32  row_step     # Length of a row in bytes

      uint8[] data         # Actual point data, size is (row_step*height)


      bool is_dense        # True if there are no invalid points

      '
    version: 0
  sensor_msgs/PointField: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/PointField.msg
    name: sensor_msgs/PointField
    package: sensor_msgs
    source: package_modeler
    spec: '

      # This message holds the description of one point entry in the

      # PointCloud2 message format.

      uint8 INT8    = 1

      uint8 UINT8   = 2

      uint8 INT16   = 3

      uint8 UINT16  = 4

      uint8 INT32   = 5

      uint8 UINT32  = 6

      uint8 FLOAT32 = 7

      uint8 FLOAT64 = 8


      string name      # Name of field

      uint32 offset    # Offset from start of point struct

      uint8  datatype  # Datatype enumeration, see above

      uint32 count     # How many elements in the field

      '
    version: 0
  sensor_msgs/Range: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/Range.msg
    name: sensor_msgs/Range
    package: sensor_msgs
    source: package_modeler
    spec: "\n# Single range reading from an active ranger that emits energy and reports\n\
      # one range reading that is valid along an arc at the distance measured. \n\
      # This message is  not appropriate for laser scanners. See the LaserScan\n#\
      \ message if you are working with a laser scanner.\n\n# This message also can\
      \ represent a fixed-distance (binary) ranger.  This\n# sensor will have min_range===max_range===distance\
      \ of detection.\n# These sensors follow REP 117 and will output -Inf if the\
      \ object is detected\n# and +Inf if the object is outside of the detection range.\n\
      \nHeader header           # timestamp in the header is the time the ranger\n\
      \                        # returned the distance reading\n\n# Radiation type\
      \ enums\n# If you want a value added to this list, send an email to the ros-users\
      \ list\nuint8 ULTRASOUND=0\nuint8 INFRARED=1\n\nuint8 radiation_type    # the\
      \ type of radiation used by the sensor\n                        # (sound, IR,\
      \ etc) [enum]\n\nfloat32 field_of_view   # the size of the arc that the distance\
      \ reading is\n                        # valid for [rad]\n                  \
      \      # the object causing the range reading may have\n                   \
      \     # been anywhere within -field_of_view/2 and\n                        #\
      \ field_of_view/2 at the measured range. \n                        # 0 angle\
      \ corresponds to the x-axis of the sensor.\n\nfloat32 min_range       # minimum\
      \ range value [m]\nfloat32 max_range       # maximum range value [m]\n     \
      \                   # Fixed distance rangers require min_range==max_range\n\n\
      float32 range           # range data [m]\n                        # (Note: values\
      \ < range_min or > range_max\n                        # should be discarded)\n\
      \                        # Fixed distance rangers only output -Inf or +Inf.\n\
      \                        # -Inf represents a detection within fixed distance.\n\
      \                        # (Detection too close to the sensor to quantify)\n\
      \                        # +Inf represents no detection within the fixed distance.\n\
      \                        # (Object out of range)"
    version: 0
  sensor_msgs/RegionOfInterest: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/RegionOfInterest.msg
    name: sensor_msgs/RegionOfInterest
    package: sensor_msgs
    source: package_modeler
    spec: "\n# This message is used to specify a region of interest within an image.\n\
      #\n# When used to specify the ROI setting of the camera when the image was\n\
      # taken, the height and width fields should either match the height and\n# width\
      \ fields for the associated image; or height = width = 0\n# indicates that the\
      \ full resolution image was captured.\n\nuint32 x_offset  # Leftmost pixel of\
      \ the ROI\n                 # (0 if the ROI includes the left edge of the image)\n\
      uint32 y_offset  # Topmost pixel of the ROI\n                 # (0 if the ROI\
      \ includes the top edge of the image)\nuint32 height    # Height of ROI\nuint32\
      \ width     # Width of ROI\n\n# True if a distinct rectified ROI should be calculated\
      \ from the \"raw\"\n# ROI in this message. Typically this should be False if\
      \ the full image\n# is captured (ROI not used), and True if a subwindow is captured\
      \ (ROI\n# used).\nbool do_rectify\n"
    version: 0
  sensor_msgs/RelativeHumidity: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/RelativeHumidity.msg
    name: sensor_msgs/RelativeHumidity
    package: sensor_msgs
    source: package_modeler
    spec: "\n # Single reading from a relative humidity sensor.  Defines the ratio\
      \ of partial\n # pressure of water vapor to the saturated vapor pressure at\
      \ a temperature.\n\n Header header             # timestamp of the measurement\n\
      \                           # frame_id is the location of the humidity sensor\n\
      \n float64 relative_humidity # Expression of the relative humidity\n       \
      \                    # from 0.0 to 1.0.\n                           # 0.0 is\
      \ no partial pressure of water vapor\n                           # 1.0 represents\
      \ partial pressure of saturation\n\n float64 variance          # 0 is interpreted\
      \ as variance unknown"
    version: 0
  sensor_msgs/Temperature: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/Temperature.msg
    name: sensor_msgs/Temperature
    package: sensor_msgs
    source: package_modeler
    spec: "\n # Single temperature reading.\n\n Header header           # timestamp\
      \ is the time the temperature was measured\n                         # frame_id\
      \ is the location of the temperature reading\n\n float64 temperature     # Measurement\
      \ of the Temperature in Degrees Celsius\n\n float64 variance        # 0 is interpreted\
      \ as variance unknown"
    version: 0
  sensor_msgs/TimeReference: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/sensor_msgs/msg/TimeReference.msg
    name: sensor_msgs/TimeReference
    package: sensor_msgs
    source: package_modeler
    spec: "\n# Measurement from an external time source not actively synchronized\
      \ with the system clock.\n\nHeader header    # stamp is system time for which\
      \ measurement was valid\n                 # frame_id is not used \n\ntime  \
      \ time_ref  # corresponding time from this external source\nstring source  \
      \  # (optional) name of time source\n"
    version: 0
  shape_msgs/Mesh: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/shape_msgs/msg/Mesh.msg
    name: shape_msgs/Mesh
    package: shape_msgs
    source: package_modeler
    spec: '

      # Definition of a mesh


      # list of triangles; the index values refer to positions in vertices[]

      MeshTriangle[] triangles


      # the actual vertices that make up the mesh

      geometry_msgs/Point[] vertices

      '
    version: 0
  shape_msgs/MeshTriangle: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/shape_msgs/msg/MeshTriangle.msg
    name: shape_msgs/MeshTriangle
    package: shape_msgs
    source: package_modeler
    spec: '

      # Definition of a triangle''s vertices

      uint32[3] vertex_indices

      '
    version: 0
  shape_msgs/Plane: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/shape_msgs/msg/Plane.msg
    name: shape_msgs/Plane
    package: shape_msgs
    source: package_modeler
    spec: '

      # Representation of a plane, using the plane equation ax + by + cz + d = 0


      # a := coef[0]

      # b := coef[1]

      # c := coef[2]

      # d := coef[3]


      float64[4] coef

      '
    version: 0
  shape_msgs/SolidPrimitive: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/shape_msgs/msg/SolidPrimitive.msg
    name: shape_msgs/SolidPrimitive
    package: shape_msgs
    source: package_modeler
    spec: "\n# Define box, sphere, cylinder, cone \n# All shapes are defined to have\
      \ their bounding boxes centered around 0,0,0.\n\nuint8 BOX=1\nuint8 SPHERE=2\n\
      uint8 CYLINDER=3\nuint8 CONE=4\n\n# The type of the shape\nuint8 type\n\n\n\
      # The dimensions of the shape\nfloat64[] dimensions\n\n# The meaning of the\
      \ shape dimensions: each constant defines the index in the 'dimensions' array\n\
      \n# For the BOX type, the X, Y, and Z dimensions are the length of the corresponding\n\
      # sides of the box.\nuint8 BOX_X=0\nuint8 BOX_Y=1\nuint8 BOX_Z=2\n\n\n# For\
      \ the SPHERE type, only one component is used, and it gives the radius of\n\
      # the sphere.\nuint8 SPHERE_RADIUS=0\n\n\n# For the CYLINDER and CONE types,\
      \ the center line is oriented along\n# the Z axis.  Therefore the CYLINDER_HEIGHT\
      \ (CONE_HEIGHT) component\n# of dimensions gives the height of the cylinder\
      \ (cone).  The\n# CYLINDER_RADIUS (CONE_RADIUS) component of dimensions gives\
      \ the\n# radius of the base of the cylinder (cone).  Cone and cylinder\n# primitives\
      \ are defined to be circular. The tip of the cone is\n# pointing up, along +Z\
      \ axis.\n\nuint8 CYLINDER_HEIGHT=0\nuint8 CYLINDER_RADIUS=1\n\nuint8 CONE_HEIGHT=0\n\
      uint8 CONE_RADIUS=1\n"
    version: 0
  smach_msgs/SmachContainerInitialStatusCmd: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/smach_msgs/msg/SmachContainerInitialStatusCmd.msg
    name: smach_msgs/SmachContainerInitialStatusCmd
    package: smach_msgs
    source: package_modeler
    spec: '

      # The path to the node in the server

      string path


      # The desired initial state(s)

      string[] initial_states


      # Initial values for the local user data of the state machine

      # A pickled user data structure

      # i.e. the UserData''s internal dictionary

      string local_data

      '
    version: 0
  smach_msgs/SmachContainerStatus: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/smach_msgs/msg/SmachContainerStatus.msg
    name: smach_msgs/SmachContainerStatus
    package: smach_msgs
    source: package_modeler
    spec: '

      Header header


      # The path to this node in the server

      string path


      # The initial state description

      # Effects an arc from the top state to each one

      string[] initial_states


      # The current state description

      string[] active_states


      # A pickled user data structure

      # i.e. the UserData''s internal dictionary

      string local_data


      # Debugging info string

      string info

      '
    version: 0
  smach_msgs/SmachContainerStructure: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/smach_msgs/msg/SmachContainerStructure.msg
    name: smach_msgs/SmachContainerStructure
    package: smach_msgs
    source: package_modeler
    spec: '

      Header header


      # The path to this node in the server

      string path


      # The children of this node

      string[] children


      # The outcome edges

      # Each index across these arrays denote one edge

      string[] internal_outcomes

      string[] outcomes_from

      string[] outcomes_to


      # The potential outcomes from this container

      string[] container_outcomes

      '
    version: 0
  std_msgs/Bool: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Bool.msg
    name: std_msgs/Bool
    package: std_msgs
    source: package_modeler
    spec: '

      bool data'
    version: 0
  std_msgs/Byte: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Byte.msg
    name: std_msgs/Byte
    package: std_msgs
    source: package_modeler
    spec: '

      byte data

      '
    version: 0
  std_msgs/ByteMultiArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/ByteMultiArray.msg
    name: std_msgs/ByteMultiArray
    package: std_msgs
    source: package_modeler
    spec: '

      # Please look at the MultiArrayLayout message definition for

      # documentation on all multiarrays.


      MultiArrayLayout  layout        # specification of data layout

      byte[]            data          # array of data


      '
    version: 0
  std_msgs/Char: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Char.msg
    name: std_msgs/Char
    package: std_msgs
    source: package_modeler
    spec: '

      char data'
    version: 0
  std_msgs/ColorRGBA: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/ColorRGBA.msg
    name: std_msgs/ColorRGBA
    package: std_msgs
    source: package_modeler
    spec: '

      float32 r

      float32 g

      float32 b

      float32 a

      '
    version: 0
  std_msgs/Duration: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Duration.msg
    name: std_msgs/Duration
    package: std_msgs
    source: package_modeler
    spec: '

      duration data

      '
    version: 0
  std_msgs/Empty: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Empty.msg
    name: std_msgs/Empty
    package: std_msgs
    source: package_modeler
    spec: '

      '
    version: 0
  std_msgs/Float32: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Float32.msg
    name: std_msgs/Float32
    package: std_msgs
    source: package_modeler
    spec: '

      float32 data'
    version: 0
  std_msgs/Float32MultiArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Float32MultiArray.msg
    name: std_msgs/Float32MultiArray
    package: std_msgs
    source: package_modeler
    spec: '

      # Please look at the MultiArrayLayout message definition for

      # documentation on all multiarrays.


      MultiArrayLayout  layout        # specification of data layout

      float32[]         data          # array of data


      '
    version: 0
  std_msgs/Float64: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Float64.msg
    name: std_msgs/Float64
    package: std_msgs
    source: package_modeler
    spec: '

      float64 data'
    version: 0
  std_msgs/Float64MultiArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Float64MultiArray.msg
    name: std_msgs/Float64MultiArray
    package: std_msgs
    source: package_modeler
    spec: '

      # Please look at the MultiArrayLayout message definition for

      # documentation on all multiarrays.


      MultiArrayLayout  layout        # specification of data layout

      float64[]         data          # array of data


      '
    version: 0
  std_msgs/Header: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Header.msg
    name: std_msgs/Header
    package: std_msgs
    source: package_modeler
    spec: "\n# Standard metadata for higher-level stamped data types.\n# This is generally\
      \ used to communicate timestamped data \n# in a particular coordinate frame.\n\
      # \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp\
      \ that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in\
      \ Python the variable is called 'secs')\n# * stamp.nsec: nanoseconds since stamp_secs\
      \ (in Python the variable is called 'nsecs')\n# time-handling sugar is provided\
      \ by the client library\ntime stamp\n#Frame this data is associated with\nstring\
      \ frame_id\n"
    version: 0
  std_msgs/Int16: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Int16.msg
    name: std_msgs/Int16
    package: std_msgs
    source: package_modeler
    spec: '

      int16 data

      '
    version: 0
  std_msgs/Int16MultiArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Int16MultiArray.msg
    name: std_msgs/Int16MultiArray
    package: std_msgs
    source: package_modeler
    spec: '

      # Please look at the MultiArrayLayout message definition for

      # documentation on all multiarrays.


      MultiArrayLayout  layout        # specification of data layout

      int16[]           data          # array of data


      '
    version: 0
  std_msgs/Int32: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Int32.msg
    name: std_msgs/Int32
    package: std_msgs
    source: package_modeler
    spec: '

      int32 data'
    version: 0
  std_msgs/Int32MultiArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Int32MultiArray.msg
    name: std_msgs/Int32MultiArray
    package: std_msgs
    source: package_modeler
    spec: '

      # Please look at the MultiArrayLayout message definition for

      # documentation on all multiarrays.


      MultiArrayLayout  layout        # specification of data layout

      int32[]           data          # array of data


      '
    version: 0
  std_msgs/Int64: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Int64.msg
    name: std_msgs/Int64
    package: std_msgs
    source: package_modeler
    spec: '

      int64 data'
    version: 0
  std_msgs/Int64MultiArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Int64MultiArray.msg
    name: std_msgs/Int64MultiArray
    package: std_msgs
    source: package_modeler
    spec: '

      # Please look at the MultiArrayLayout message definition for

      # documentation on all multiarrays.


      MultiArrayLayout  layout        # specification of data layout

      int64[]           data          # array of data


      '
    version: 0
  std_msgs/Int8: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Int8.msg
    name: std_msgs/Int8
    package: std_msgs
    source: package_modeler
    spec: '

      int8 data

      '
    version: 0
  std_msgs/Int8MultiArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Int8MultiArray.msg
    name: std_msgs/Int8MultiArray
    package: std_msgs
    source: package_modeler
    spec: '

      # Please look at the MultiArrayLayout message definition for

      # documentation on all multiarrays.


      MultiArrayLayout  layout        # specification of data layout

      int8[]            data          # array of data


      '
    version: 0
  std_msgs/MultiArrayDimension: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/MultiArrayDimension.msg
    name: std_msgs/MultiArrayDimension
    package: std_msgs
    source: package_modeler
    spec: '

      string label   # label of given dimension

      uint32 size    # size of given dimension (in type units)

      uint32 stride  # stride of given dimension'
    version: 0
  std_msgs/MultiArrayLayout: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/MultiArrayLayout.msg
    name: std_msgs/MultiArrayLayout
    package: std_msgs
    source: package_modeler
    spec: "\n# The multiarray declares a generic multi-dimensional array of a\n# particular\
      \ data type.  Dimensions are ordered from outer most\n# to inner most.\n\nMultiArrayDimension[]\
      \ dim # Array of dimension properties\nuint32 data_offset        # padding elements\
      \ at front of data\n\n# Accessors should ALWAYS be written in terms of dimension\
      \ stride\n# and specified outer-most dimension first.\n# \n# multiarray(i,j,k)\
      \ = data[data_offset + dim_stride[1]*i + dim_stride[2]*j + k]\n#\n# A standard,\
      \ 3-channel 640x480 image with interleaved color channels\n# would be specified\
      \ as:\n#\n# dim[0].label  = \"height\"\n# dim[0].size   = 480\n# dim[0].stride\
      \ = 3*640*480 = 921600  (note dim[0] stride is just size of image)\n# dim[1].label\
      \  = \"width\"\n# dim[1].size   = 640\n# dim[1].stride = 3*640 = 1920\n# dim[2].label\
      \  = \"channel\"\n# dim[2].size   = 3\n# dim[2].stride = 3\n#\n# multiarray(i,j,k)\
      \ refers to the ith row, jth column, and kth channel.\n"
    version: 0
  std_msgs/String: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/String.msg
    name: std_msgs/String
    package: std_msgs
    source: package_modeler
    spec: '

      string data

      '
    version: 0
  std_msgs/Time: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/Time.msg
    name: std_msgs/Time
    package: std_msgs
    source: package_modeler
    spec: '

      time data

      '
    version: 0
  std_msgs/UInt16: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/UInt16.msg
    name: std_msgs/UInt16
    package: std_msgs
    source: package_modeler
    spec: '

      uint16 data

      '
    version: 0
  std_msgs/UInt16MultiArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/UInt16MultiArray.msg
    name: std_msgs/UInt16MultiArray
    package: std_msgs
    source: package_modeler
    spec: '

      # Please look at the MultiArrayLayout message definition for

      # documentation on all multiarrays.


      MultiArrayLayout  layout        # specification of data layout

      uint16[]            data        # array of data


      '
    version: 0
  std_msgs/UInt32: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/UInt32.msg
    name: std_msgs/UInt32
    package: std_msgs
    source: package_modeler
    spec: '

      uint32 data'
    version: 0
  std_msgs/UInt32MultiArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/UInt32MultiArray.msg
    name: std_msgs/UInt32MultiArray
    package: std_msgs
    source: package_modeler
    spec: '

      # Please look at the MultiArrayLayout message definition for

      # documentation on all multiarrays.


      MultiArrayLayout  layout        # specification of data layout

      uint32[]          data          # array of data


      '
    version: 0
  std_msgs/UInt64: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/UInt64.msg
    name: std_msgs/UInt64
    package: std_msgs
    source: package_modeler
    spec: '

      uint64 data'
    version: 0
  std_msgs/UInt64MultiArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/UInt64MultiArray.msg
    name: std_msgs/UInt64MultiArray
    package: std_msgs
    source: package_modeler
    spec: '

      # Please look at the MultiArrayLayout message definition for

      # documentation on all multiarrays.


      MultiArrayLayout  layout        # specification of data layout

      uint64[]          data          # array of data


      '
    version: 0
  std_msgs/UInt8: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/UInt8.msg
    name: std_msgs/UInt8
    package: std_msgs
    source: package_modeler
    spec: '

      uint8 data

      '
    version: 0
  std_msgs/UInt8MultiArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/std_msgs/msg/UInt8MultiArray.msg
    name: std_msgs/UInt8MultiArray
    package: std_msgs
    source: package_modeler
    spec: '

      # Please look at the MultiArrayLayout message definition for

      # documentation on all multiarrays.


      MultiArrayLayout  layout        # specification of data layout

      uint8[]           data          # array of data


      '
    version: 0
  stereo_msgs/DisparityImage: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/stereo_msgs/msg/DisparityImage.msg
    name: stereo_msgs/DisparityImage
    package: stereo_msgs
    source: package_modeler
    spec: '

      # Separate header for compatibility with current TimeSynchronizer.

      # Likely to be removed in a later release, use image.header instead.

      Header header


      # Floating point disparity image. The disparities are pre-adjusted for any

      # x-offset between the principal points of the two cameras (in the case

      # that they are verged). That is: d = x_l - x_r - (cx_l - cx_r)

      sensor_msgs/Image image


      # Stereo geometry. For disparity d, the depth from the camera is Z = fT/d.

      float32 f # Focal length, pixels

      float32 T # Baseline, world units


      # Subwindow of (potentially) valid disparity values.

      sensor_msgs/RegionOfInterest valid_window


      # The range of disparities searched.

      # In the disparity image, any disparity less than min_disparity is invalid.

      # The disparity search range defines the horopter, or 3D volume that the

      # stereo algorithm can "see". Points with Z outside of:

      #     Z_min = fT / max_disparity

      #     Z_max = fT / min_disparity

      # could not be found.

      float32 min_disparity

      float32 max_disparity


      # Smallest allowed disparity increment. The smallest achievable depth range

      # resolution is delta_Z = (Z^2/fT)*delta_d.

      float32 delta_d

      '
    version: 0
  tf/tfMessage: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/tf/msg/tfMessage.msg
    name: tf/tfMessage
    package: tf
    source: package_modeler
    spec: '

      geometry_msgs/TransformStamped[] transforms

      '
    version: 0
  tf2_msgs/LookupTransformAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/tf2_msgs/msg/LookupTransformAction.msg
    name: tf2_msgs/LookupTransformAction
    package: tf2_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      LookupTransformActionGoal action_goal

      LookupTransformActionResult action_result

      LookupTransformActionFeedback action_feedback

      '
    version: 0
  tf2_msgs/LookupTransformActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/tf2_msgs/msg/LookupTransformActionFeedback.msg
    name: tf2_msgs/LookupTransformActionFeedback
    package: tf2_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      LookupTransformFeedback feedback

      '
    version: 0
  tf2_msgs/LookupTransformActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/tf2_msgs/msg/LookupTransformActionGoal.msg
    name: tf2_msgs/LookupTransformActionGoal
    package: tf2_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      LookupTransformGoal goal

      '
    version: 0
  tf2_msgs/LookupTransformActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/tf2_msgs/msg/LookupTransformActionResult.msg
    name: tf2_msgs/LookupTransformActionResult
    package: tf2_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      LookupTransformResult result

      '
    version: 0
  tf2_msgs/LookupTransformFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/tf2_msgs/msg/LookupTransformFeedback.msg
    name: tf2_msgs/LookupTransformFeedback
    package: tf2_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      '
    version: 0
  tf2_msgs/LookupTransformGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/tf2_msgs/msg/LookupTransformGoal.msg
    name: tf2_msgs/LookupTransformGoal
    package: tf2_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      #Simple API

      string target_frame

      string source_frame

      time source_time

      duration timeout


      #Advanced API

      time target_time

      string fixed_frame


      #Whether or not to use the advanced API

      bool advanced


      '
    version: 0
  tf2_msgs/LookupTransformResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/tf2_msgs/msg/LookupTransformResult.msg
    name: tf2_msgs/LookupTransformResult
    package: tf2_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      geometry_msgs/TransformStamped transform

      tf2_msgs/TF2Error error

      '
    version: 0
  tf2_msgs/TF2Error: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/tf2_msgs/msg/TF2Error.msg
    name: tf2_msgs/TF2Error
    package: tf2_msgs
    source: package_modeler
    spec: '

      uint8 NO_ERROR = 0

      uint8 LOOKUP_ERROR = 1

      uint8 CONNECTIVITY_ERROR = 2

      uint8 EXTRAPOLATION_ERROR = 3

      uint8 INVALID_ARGUMENT_ERROR = 4

      uint8 TIMEOUT_ERROR = 5

      uint8 TRANSFORM_ERROR = 6


      uint8 error

      string error_string

      '
    version: 0
  tf2_msgs/TFMessage: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/tf2_msgs/msg/TFMessage.msg
    name: tf2_msgs/TFMessage
    package: tf2_msgs
    source: package_modeler
    spec: '

      geometry_msgs/TransformStamped[] transforms

      '
    version: 0
  theora_image_transport/Packet: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/theora_image_transport/msg/Packet.msg
    name: theora_image_transport/Packet
    package: theora_image_transport
    source: package_modeler
    spec: '

      # ROS message adaptation of the ogg_packet struct from libogg,

      # see http://www.xiph.org/ogg/doc/libogg/ogg_packet.html.


      Header header     # Original sensor_msgs/Image header

      uint8[] data      # Raw Theora packet data (combines packet and bytes fields
      from ogg_packet)

      int32 b_o_s       # Flag indicating whether this packet begins a logical bitstream

      int32 e_o_s       # Flag indicating whether this packet ends a bitstream

      int64 granulepos  # A number indicating the position of this packet in the decoded
      data

      int64 packetno    # Sequential number of this packet in the ogg bitstream

      '
    version: 0
  trajectory_msgs/JointTrajectory: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/trajectory_msgs/msg/JointTrajectory.msg
    name: trajectory_msgs/JointTrajectory
    package: trajectory_msgs
    source: package_modeler
    spec: '

      Header header

      string[] joint_names

      JointTrajectoryPoint[] points'
    version: 0
  trajectory_msgs/JointTrajectoryPoint: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/trajectory_msgs/msg/JointTrajectoryPoint.msg
    name: trajectory_msgs/JointTrajectoryPoint
    package: trajectory_msgs
    source: package_modeler
    spec: '

      # Each trajectory point specifies either positions[, velocities[, accelerations]]

      # or positions[, effort] for the trajectory to be executed.

      # All specified values are in the same order as the joint names in JointTrajectory.msg


      float64[] positions

      float64[] velocities

      float64[] accelerations

      float64[] effort

      duration time_from_start

      '
    version: 0
  trajectory_msgs/MultiDOFJointTrajectory: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/trajectory_msgs/msg/MultiDOFJointTrajectory.msg
    name: trajectory_msgs/MultiDOFJointTrajectory
    package: trajectory_msgs
    source: package_modeler
    spec: "\n# The header is used to specify the coordinate frame and the reference\
      \ time for the trajectory durations\nHeader header\n\n# A representation of\
      \ a multi-dof joint trajectory (each point is a transformation)\n# Each point\
      \ along the trajectory will include an array of positions/velocities/accelerations\n\
      # that has the same length as the array of joint names, and has the same order\
      \ of joints as \n# the joint names array.\n\nstring[] joint_names\nMultiDOFJointTrajectoryPoint[]\
      \ points\n"
    version: 0
  trajectory_msgs/MultiDOFJointTrajectoryPoint: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/trajectory_msgs/msg/MultiDOFJointTrajectoryPoint.msg
    name: trajectory_msgs/MultiDOFJointTrajectoryPoint
    package: trajectory_msgs
    source: package_modeler
    spec: "\n# Each multi-dof joint can specify a transform (up to 6 DOF)\ngeometry_msgs/Transform[]\
      \ transforms\n\n# There can be a velocity specified for the origin of the joint\
      \ \ngeometry_msgs/Twist[] velocities\n\n# There can be an acceleration specified\
      \ for the origin of the joint \ngeometry_msgs/Twist[] accelerations\n\nduration\
      \ time_from_start\n"
    version: 0
  turtle_actionlib/ShapeAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/turtle_actionlib/msg/ShapeAction.msg
    name: turtle_actionlib/ShapeAction
    package: turtle_actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      ShapeActionGoal action_goal

      ShapeActionResult action_result

      ShapeActionFeedback action_feedback

      '
    version: 0
  turtle_actionlib/ShapeActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/turtle_actionlib/msg/ShapeActionFeedback.msg
    name: turtle_actionlib/ShapeActionFeedback
    package: turtle_actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      ShapeFeedback feedback

      '
    version: 0
  turtle_actionlib/ShapeActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/turtle_actionlib/msg/ShapeActionGoal.msg
    name: turtle_actionlib/ShapeActionGoal
    package: turtle_actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      ShapeGoal goal

      '
    version: 0
  turtle_actionlib/ShapeActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/turtle_actionlib/msg/ShapeActionResult.msg
    name: turtle_actionlib/ShapeActionResult
    package: turtle_actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      ShapeResult result

      '
    version: 0
  turtle_actionlib/ShapeFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/turtle_actionlib/msg/ShapeFeedback.msg
    name: turtle_actionlib/ShapeFeedback
    package: turtle_actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      #feedback



      '
    version: 0
  turtle_actionlib/ShapeGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/turtle_actionlib/msg/ShapeGoal.msg
    name: turtle_actionlib/ShapeGoal
    package: turtle_actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      #goal definition

      int32 edges

      float32 radius

      '
    version: 0
  turtle_actionlib/ShapeResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/turtle_actionlib/msg/ShapeResult.msg
    name: turtle_actionlib/ShapeResult
    package: turtle_actionlib
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      #result definition

      float32 interior_angle

      float32 apothem

      '
    version: 0
  turtle_actionlib/Velocity: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/turtle_actionlib/msg/Velocity.msg
    name: turtle_actionlib/Velocity
    package: turtle_actionlib
    source: package_modeler
    spec: '

      # Copied from turtlesim https://github.com/ros/ros_tutorials/blob/f7da7779e82dcc3977b2c220a843cd86dd269832/turtlesim/msg/Velocity.msg.
      We had to copy this into this package since it has been replaced with geometry_msgs/Twist
      there and comforming to Twist requires to change code, which I doubt worth time
      it takes. So if you think it is, please go ahead make a patch.


      float32 linear

      float32 angular

      '
    version: 0
  turtlesim/Color: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/turtlesim/msg/Color.msg
    name: turtlesim/Color
    package: turtlesim
    source: package_modeler
    spec: '

      uint8 r

      uint8 g

      uint8 b

      '
    version: 0
  turtlesim/Pose: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/turtlesim/msg/Pose.msg
    name: turtlesim/Pose
    package: turtlesim
    source: package_modeler
    spec: '

      float32 x

      float32 y

      float32 theta


      float32 linear_velocity

      float32 angular_velocity'
    version: 0
  twist_mux_msgs/JoyPriorityAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/twist_mux_msgs/msg/JoyPriorityAction.msg
    name: twist_mux_msgs/JoyPriorityAction
    package: twist_mux_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      JoyPriorityActionGoal action_goal

      JoyPriorityActionResult action_result

      JoyPriorityActionFeedback action_feedback

      '
    version: 0
  twist_mux_msgs/JoyPriorityActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/twist_mux_msgs/msg/JoyPriorityActionFeedback.msg
    name: twist_mux_msgs/JoyPriorityActionFeedback
    package: twist_mux_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      JoyPriorityFeedback feedback

      '
    version: 0
  twist_mux_msgs/JoyPriorityActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/twist_mux_msgs/msg/JoyPriorityActionGoal.msg
    name: twist_mux_msgs/JoyPriorityActionGoal
    package: twist_mux_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      JoyPriorityGoal goal

      '
    version: 0
  twist_mux_msgs/JoyPriorityActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/twist_mux_msgs/msg/JoyPriorityActionResult.msg
    name: twist_mux_msgs/JoyPriorityActionResult
    package: twist_mux_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      JoyPriorityResult result

      '
    version: 0
  twist_mux_msgs/JoyPriorityFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/twist_mux_msgs/msg/JoyPriorityFeedback.msg
    name: twist_mux_msgs/JoyPriorityFeedback
    package: twist_mux_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      '
    version: 0
  twist_mux_msgs/JoyPriorityGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/twist_mux_msgs/msg/JoyPriorityGoal.msg
    name: twist_mux_msgs/JoyPriorityGoal
    package: twist_mux_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      '
    version: 0
  twist_mux_msgs/JoyPriorityResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/twist_mux_msgs/msg/JoyPriorityResult.msg
    name: twist_mux_msgs/JoyPriorityResult
    package: twist_mux_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      '
    version: 0
  twist_mux_msgs/JoyTurboAction: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/twist_mux_msgs/msg/JoyTurboAction.msg
    name: twist_mux_msgs/JoyTurboAction
    package: twist_mux_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      JoyTurboActionGoal action_goal

      JoyTurboActionResult action_result

      JoyTurboActionFeedback action_feedback

      '
    version: 0
  twist_mux_msgs/JoyTurboActionFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/twist_mux_msgs/msg/JoyTurboActionFeedback.msg
    name: twist_mux_msgs/JoyTurboActionFeedback
    package: twist_mux_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      JoyTurboFeedback feedback

      '
    version: 0
  twist_mux_msgs/JoyTurboActionGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/twist_mux_msgs/msg/JoyTurboActionGoal.msg
    name: twist_mux_msgs/JoyTurboActionGoal
    package: twist_mux_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalID goal_id

      JoyTurboGoal goal

      '
    version: 0
  twist_mux_msgs/JoyTurboActionResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/twist_mux_msgs/msg/JoyTurboActionResult.msg
    name: twist_mux_msgs/JoyTurboActionResult
    package: twist_mux_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      Header header

      actionlib_msgs/GoalStatus status

      JoyTurboResult result

      '
    version: 0
  twist_mux_msgs/JoyTurboFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/twist_mux_msgs/msg/JoyTurboFeedback.msg
    name: twist_mux_msgs/JoyTurboFeedback
    package: twist_mux_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======


      '
    version: 0
  twist_mux_msgs/JoyTurboGoal: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/twist_mux_msgs/msg/JoyTurboGoal.msg
    name: twist_mux_msgs/JoyTurboGoal
    package: twist_mux_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      '
    version: 0
  twist_mux_msgs/JoyTurboResult: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/twist_mux_msgs/msg/JoyTurboResult.msg
    name: twist_mux_msgs/JoyTurboResult
    package: twist_mux_msgs
    source: package_modeler
    spec: '

      # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

      '
    version: 0
  urg_node/Status: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/urg_node/msg/Status.msg
    name: urg_node/Status
    package: urg_node
    source: package_modeler
    spec: '

      # Normal vs setting in the UAM manual.

      uint16 NORMAL=0

      uint16 SETTING=1

      uint16 operating_mode


      # The configured area number the stop occurred in.

      uint16 area_number

      # If the laser is reporting an error or not.

      bool error_status

      # The error code the laser is reporting.

      uint16 error_code

      # Does the laser report that it is locked out.

      bool lockout_status

      # Distance in mm the stop was reported at.

      uint16 distance

      # The reported angle of the stop in deg.

      float32 angle

      '
    version: 0
  uuid_msgs/UniqueID: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/uuid_msgs/msg/UniqueID.msg
    name: uuid_msgs/UniqueID
    package: uuid_msgs
    source: package_modeler
    spec: '

      # A universally unique identifier (UUID).

      #

      #  http://en.wikipedia.org/wiki/Universally_unique_identifier

      #  http://tools.ietf.org/html/rfc4122.html


      uint8[16] uuid

      '
    version: 0
  visualization_msgs/ImageMarker: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/visualization_msgs/msg/ImageMarker.msg
    name: visualization_msgs/ImageMarker
    package: visualization_msgs
    source: package_modeler
    spec: "\nuint8 CIRCLE=0\nuint8 LINE_STRIP=1\nuint8 LINE_LIST=2\nuint8 POLYGON=3\n\
      uint8 POINTS=4\n\nuint8 ADD=0\nuint8 REMOVE=1\n\nHeader header\nstring ns\t\t\
      # namespace, used with id to form a unique id\nint32 id          \t# unique\
      \ id within the namespace\nint32 type        \t# CIRCLE/LINE_STRIP/etc.\nint32\
      \ action      \t# ADD/REMOVE\ngeometry_msgs/Point position # 2D, in pixel-coords\n\
      float32 scale\t \t# the diameter for a circle, etc.\nstd_msgs/ColorRGBA outline_color\n\
      uint8 filled\t\t# whether to fill in the shape with color\nstd_msgs/ColorRGBA\
      \ fill_color # color [0.0-1.0]\nduration lifetime       # How long the object\
      \ should last before being automatically deleted.  0 means forever\n\n\ngeometry_msgs/Point[]\
      \ points # used for LINE_STRIP/LINE_LIST/POINTS/etc., 2D in pixel coords\nstd_msgs/ColorRGBA[]\
      \ outline_colors # a color for each line, point, etc."
    version: 0
  visualization_msgs/InteractiveMarker: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/visualization_msgs/msg/InteractiveMarker.msg
    name: visualization_msgs/InteractiveMarker
    package: visualization_msgs
    source: package_modeler
    spec: '

      # Time/frame info.

      # If header.time is set to 0, the marker will be retransformed into

      # its frame on each timestep. You will receive the pose feedback

      # in the same frame.

      # Otherwise, you might receive feedback in a different frame.

      # For rviz, this will be the current ''fixed frame'' set by the user.

      Header header


      # Initial pose. Also, defines the pivot point for rotations.

      geometry_msgs/Pose pose


      # Identifying string. Must be globally unique in

      # the topic that this message is sent through.

      string name


      # Short description (< 40 characters).

      string description


      # Scale to be used for default controls (default=1).

      float32 scale


      # All menu and submenu entries associated with this marker.

      MenuEntry[] menu_entries


      # List of controls displayed for this marker.

      InteractiveMarkerControl[] controls

      '
    version: 0
  visualization_msgs/InteractiveMarkerControl: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/visualization_msgs/msg/InteractiveMarkerControl.msg
    name: visualization_msgs/InteractiveMarkerControl
    package: visualization_msgs
    source: package_modeler
    spec: "\n# Represents a control that is to be displayed together with an interactive\
      \ marker\n\n# Identifying string for this control.\n# You need to assign a unique\
      \ value to this to receive feedback from the GUI\n# on what actions the user\
      \ performs on this control (e.g. a button click).\nstring name\n\n\n# Defines\
      \ the local coordinate frame (relative to the pose of the parent\n# interactive\
      \ marker) in which is being rotated and translated.\n# Default: Identity\ngeometry_msgs/Quaternion\
      \ orientation\n\n\n# Orientation mode: controls how orientation changes.\n#\
      \ INHERIT: Follow orientation of interactive marker\n# FIXED: Keep orientation\
      \ fixed at initial state\n# VIEW_FACING: Align y-z plane with screen (x: forward,\
      \ y:left, z:up).\nuint8 INHERIT = 0 \nuint8 FIXED = 1\nuint8 VIEW_FACING = 2\n\
      \nuint8 orientation_mode\n\n# Interaction mode for this control\n# \n# NONE:\
      \ This control is only meant for visualization; no context menu.\n# MENU: Like\
      \ NONE, but right-click menu is active.\n# BUTTON: Element can be left-clicked.\n\
      # MOVE_AXIS: Translate along local x-axis.\n# MOVE_PLANE: Translate in local\
      \ y-z plane.\n# ROTATE_AXIS: Rotate around local x-axis.\n# MOVE_ROTATE: Combines\
      \ MOVE_PLANE and ROTATE_AXIS.\nuint8 NONE = 0 \nuint8 MENU = 1\nuint8 BUTTON\
      \ = 2\nuint8 MOVE_AXIS = 3 \nuint8 MOVE_PLANE = 4\nuint8 ROTATE_AXIS = 5\nuint8\
      \ MOVE_ROTATE = 6\n# \"3D\" interaction modes work with the mouse+SHIFT+CTRL\
      \ or with 3D cursors.\n# MOVE_3D: Translate freely in 3D space.\n# ROTATE_3D:\
      \ Rotate freely in 3D space about the origin of parent frame.\n# MOVE_ROTATE_3D:\
      \ Full 6-DOF freedom of translation and rotation about the cursor origin.\n\
      uint8 MOVE_3D = 7\nuint8 ROTATE_3D = 8\nuint8 MOVE_ROTATE_3D = 9\n\nuint8 interaction_mode\n\
      \n\n# If true, the contained markers will also be visible\n# when the gui is\
      \ not in interactive mode.\nbool always_visible\n\n\n# Markers to be displayed\
      \ as custom visual representation.\n# Leave this empty to use the default control\
      \ handles.\n#\n# Note: \n# - The markers can be defined in an arbitrary coordinate\
      \ frame,\n#   but will be transformed into the local frame of the interactive\
      \ marker.\n# - If the header of a marker is empty, its pose will be interpreted\
      \ as \n#   relative to the pose of the parent interactive marker.\nMarker[]\
      \ markers\n\n\n# In VIEW_FACING mode, set this to true if you don't want the\
      \ markers\n# to be aligned with the camera view point. The markers will show\
      \ up\n# as in INHERIT mode.\nbool independent_marker_orientation\n\n\n# Short\
      \ description (< 40 characters) of what this control does,\n# e.g. \"Move the\
      \ robot\". \n# Default: A generic description based on the interaction mode\n\
      string description\n"
    version: 0
  visualization_msgs/InteractiveMarkerFeedback: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/visualization_msgs/msg/InteractiveMarkerFeedback.msg
    name: visualization_msgs/InteractiveMarkerFeedback
    package: visualization_msgs
    source: package_modeler
    spec: '

      # Time/frame info.

      Header header


      # Identifying string. Must be unique in the topic namespace.

      string client_id


      # Feedback message sent back from the GUI, e.g.

      # when the status of an interactive marker was modified by the user.


      # Specifies which interactive marker and control this message refers to

      string marker_name

      string control_name


      # Type of the event

      # KEEP_ALIVE: sent while dragging to keep up control of the marker

      # MENU_SELECT: a menu entry has been selected

      # BUTTON_CLICK: a button control has been clicked

      # POSE_UPDATE: the pose has been changed using one of the controls

      uint8 KEEP_ALIVE = 0

      uint8 POSE_UPDATE = 1

      uint8 MENU_SELECT = 2

      uint8 BUTTON_CLICK = 3


      uint8 MOUSE_DOWN = 4

      uint8 MOUSE_UP = 5


      uint8 event_type


      # Current pose of the marker

      # Note: Has to be valid for all feedback types.

      geometry_msgs/Pose pose


      # Contains the ID of the selected menu entry

      # Only valid for MENU_SELECT events.

      uint32 menu_entry_id


      # If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point

      # may contain the 3 dimensional position of the event on the

      # control.  If it does, mouse_point_valid will be true.  mouse_point

      # will be relative to the frame listed in the header.

      geometry_msgs/Point mouse_point

      bool mouse_point_valid

      '
    version: 0
  visualization_msgs/InteractiveMarkerInit: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/visualization_msgs/msg/InteractiveMarkerInit.msg
    name: visualization_msgs/InteractiveMarkerInit
    package: visualization_msgs
    source: package_modeler
    spec: '

      # Identifying string. Must be unique in the topic namespace

      # that this server works on.

      string server_id


      # Sequence number.

      # The client will use this to detect if it has missed a subsequent

      # update.  Every update message will have the same sequence number as

      # an init message.  Clients will likely want to unsubscribe from the

      # init topic after a successful initialization to avoid receiving

      # duplicate data.

      uint64 seq_num


      # All markers.

      InteractiveMarker[] markers

      '
    version: 0
  visualization_msgs/InteractiveMarkerPose: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/visualization_msgs/msg/InteractiveMarkerPose.msg
    name: visualization_msgs/InteractiveMarkerPose
    package: visualization_msgs
    source: package_modeler
    spec: '

      # Time/frame info.

      Header header


      # Initial pose. Also, defines the pivot point for rotations.

      geometry_msgs/Pose pose


      # Identifying string. Must be globally unique in

      # the topic that this message is sent through.

      string name

      '
    version: 0
  visualization_msgs/InteractiveMarkerUpdate: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/visualization_msgs/msg/InteractiveMarkerUpdate.msg
    name: visualization_msgs/InteractiveMarkerUpdate
    package: visualization_msgs
    source: package_modeler
    spec: "\n# Identifying string. Must be unique in the topic namespace\n# that this\
      \ server works on.\nstring server_id\n\n# Sequence number.\n# The client will\
      \ use this to detect if it has missed an update.\nuint64 seq_num\n\n# Type holds\
      \ the purpose of this message.  It must be one of UPDATE or KEEP_ALIVE.\n# UPDATE:\
      \ Incremental update to previous state. \n#         The sequence number must\
      \ be 1 higher than for\n#         the previous update.\n# KEEP_ALIVE: Indicates\
      \ the that the server is still living.\n#             The sequence number does\
      \ not increase.\n#             No payload data should be filled out (markers,\
      \ poses, or erases).\nuint8 KEEP_ALIVE = 0\nuint8 UPDATE = 1\n\nuint8 type\n\
      \n#Note: No guarantees on the order of processing.\n#      Contents must be\
      \ kept consistent by sender.\n\n#Markers to be added or updated\nInteractiveMarker[]\
      \ markers\n\n#Poses of markers that should be moved\nInteractiveMarkerPose[]\
      \ poses\n\n#Names of markers to be erased\nstring[] erases\n"
    version: 0
  visualization_msgs/Marker: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/visualization_msgs/msg/Marker.msg
    name: visualization_msgs/Marker
    package: visualization_msgs
    source: package_modeler
    spec: "\n# See http://www.ros.org/wiki/rviz/DisplayTypes/Marker and http://www.ros.org/wiki/rviz/Tutorials/Markers%3A%20Basic%20Shapes\
      \ for more information on using this message with rviz\n\nuint8 ARROW=0\nuint8\
      \ CUBE=1\nuint8 SPHERE=2\nuint8 CYLINDER=3\nuint8 LINE_STRIP=4\nuint8 LINE_LIST=5\n\
      uint8 CUBE_LIST=6\nuint8 SPHERE_LIST=7\nuint8 POINTS=8\nuint8 TEXT_VIEW_FACING=9\n\
      uint8 MESH_RESOURCE=10\nuint8 TRIANGLE_LIST=11\n\nuint8 ADD=0\nuint8 MODIFY=0\n\
      uint8 DELETE=2\nuint8 DELETEALL=3\n\nHeader header                        #\
      \ header for time/frame information\nstring ns                            #\
      \ Namespace to place this object in... used in conjunction with id to create\
      \ a unique name for the object\nint32 id \t\t                         # object\
      \ ID useful in conjunction with the namespace for manipulating and deleting\
      \ the object later\nint32 type \t\t                       # Type of object\n\
      int32 action \t                       # 0 add/modify an object, 1 (deprecated),\
      \ 2 deletes an object, 3 deletes all objects\ngeometry_msgs/Pose pose      \
      \           # Pose of the object\ngeometry_msgs/Vector3 scale             #\
      \ Scale of the object 1,1,1 means default (usually 1 meter square)\nstd_msgs/ColorRGBA\
      \ color             # Color [0.0-1.0]\nduration lifetime                   \
      \ # How long the object should last before being automatically deleted.  0 means\
      \ forever\nbool frame_locked                    # If this marker should be frame-locked,\
      \ i.e. retransformed into its frame every timestep\n\n#Only used if the type\
      \ specified has some use for them (eg. POINTS, LINE_STRIP, ...)\ngeometry_msgs/Point[]\
      \ points\n#Only used if the type specified has some use for them (eg. POINTS,\
      \ LINE_STRIP, ...)\n#number of colors must either be 0 or equal to the number\
      \ of points\n#NOTE: alpha is not yet used\nstd_msgs/ColorRGBA[] colors\n\n#\
      \ NOTE: only used for text markers\nstring text\n\n# NOTE: only used for MESH_RESOURCE\
      \ markers\nstring mesh_resource\nbool mesh_use_embedded_materials\n"
    version: 0
  visualization_msgs/MarkerArray: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/visualization_msgs/msg/MarkerArray.msg
    name: visualization_msgs/MarkerArray
    package: visualization_msgs
    source: package_modeler
    spec: '

      Marker[] markers

      '
    version: 0
  visualization_msgs/MenuEntry: !TypeSpecification
    construct_type: msg
    file_path: /opt/ros/melodic/share/visualization_msgs/msg/MenuEntry.msg
    name: visualization_msgs/MenuEntry
    package: visualization_msgs
    source: package_modeler
    spec: '

      # MenuEntry message.


      # Each InteractiveMarker message has an array of MenuEntry messages.

      # A collection of MenuEntries together describe a

      # menu/submenu/subsubmenu/etc tree, though they are stored in a flat

      # array.  The tree structure is represented by giving each menu entry

      # an ID number and a "parent_id" field.  Top-level entries are the

      # ones with parent_id = 0.  Menu entries are ordered within their

      # level the same way they are ordered in the containing array.  Parent

      # entries must appear before their children.


      # Example:

      # - id = 3

      #   parent_id = 0

      #   title = "fun"

      # - id = 2

      #   parent_id = 0

      #   title = "robot"

      # - id = 4

      #   parent_id = 2

      #   title = "pr2"

      # - id = 5

      #   parent_id = 2

      #   title = "turtle"

      #

      # Gives a menu tree like this:

      #  - fun

      #  - robot

      #    - pr2

      #    - turtle


      # ID is a number for each menu entry.  Must be unique within the

      # control, and should never be 0.

      uint32 id


      # ID of the parent of this menu entry, if it is a submenu.  If this

      # menu entry is a top-level entry, set parent_id to 0.

      uint32 parent_id


      # menu / entry title

      string title


      # Arguments to command indicated by command_type (below)

      string command


      # Command_type stores the type of response desired when this menu

      # entry is clicked.

      # FEEDBACK: send an InteractiveMarkerFeedback message with menu_entry_id set
      to this entry''s id.

      # ROSRUN: execute "rosrun" with arguments given in the command field (above).

      # ROSLAUNCH: execute "roslaunch" with arguments given in the command field (above).

      uint8 FEEDBACK=0

      uint8 ROSRUN=1

      uint8 ROSLAUNCH=2

      uint8 command_type

      '
    version: 0
