ccopy_reg
_reconstructor
p0
(cchris_ros_modeling.specifications.type_specification
TypeSpecificationBank
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'names_to_metamodels'
p6
(dp7
S'pcl_msgs/ModelCoefficients'
p8
g0
(cchris_ros_modeling.specifications.type_specification
TypeSpecification
p9
g2
Ntp10
Rp11
(dp12
S'construct_type'
p13
S'msg'
p14
sS'name'
p15
S'pcl_msgs/ModelCoefficients'
p16
sS'package'
p17
S'pcl_msgs'
p18
sS'spec'
p19
S'\nHeader header\nfloat32[] values\n\n'
p20
sS'source'
p21
S'package_modeler'
p22
sS'version'
p23
I0
sS'file_path'
p24
S'/opt/ros/melodic/share/pcl_msgs/msg/ModelCoefficients.msg'
p25
sbsS'moveit_msgs/PlaceFeedback'
p26
g0
(g9
g2
Ntp27
Rp28
(dp29
g13
S'msg'
p30
sg15
S'moveit_msgs/PlaceFeedback'
p31
sg17
S'moveit_msgs'
p32
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n# The internal state that the place action currently is in\nstring state\n\n'
p33
sg21
S'package_modeler'
p34
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PlaceFeedback.msg'
p35
sbsS'map_msgs/OccupancyGridUpdate'
p36
g0
(g9
g2
Ntp37
Rp38
(dp39
g13
S'msg'
p40
sg15
S'map_msgs/OccupancyGridUpdate'
p41
sg17
S'map_msgs'
p42
sg19
S'\nHeader header\nint32 x\nint32 y\nuint32 width\nuint32 height\nint8[] data\n'
p43
sg21
S'package_modeler'
p44
sg23
I0
sg24
S'/opt/ros/melodic/share/map_msgs/msg/OccupancyGridUpdate.msg'
p45
sbsS'actionlib/TestRequestResult'
p46
g0
(g9
g2
Ntp47
Rp48
(dp49
g13
S'msg'
p50
sg15
S'actionlib/TestRequestResult'
p51
sg17
S'actionlib'
p52
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nint32 the_result\nbool is_simple_server\n'
p53
sg21
S'package_modeler'
p54
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TestRequestResult.msg'
p55
sbsS'geometry_msgs/Vector3'
p56
g0
(g9
g2
Ntp57
Rp58
(dp59
g13
S'msg'
p60
sg15
S'geometry_msgs/Vector3'
p61
sg17
S'geometry_msgs'
p62
sg19
S'\n# This represents a vector in free space. \n# It is only meant to represent a direction. Therefore, it does not\n# make sense to apply a translation to it (e.g., when applying a \n# generic rigid transformation to a Vector3, tf2 will only apply the\n# rotation). If you want your data to be translatable too, use the\n# geometry_msgs/Point message instead.\n\nfloat64 x\nfloat64 y\nfloat64 z'
p63
sg21
S'package_modeler'
p64
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/Vector3.msg'
p65
sbsS'std_msgs/Bool'
p66
g0
(g9
g2
Ntp67
Rp68
(dp69
g13
S'msg'
p70
sg15
S'std_msgs/Bool'
p71
sg17
S'std_msgs'
p72
sg19
S'\nbool data'
p73
sg21
S'package_modeler'
p74
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Bool.msg'
p75
sbsS'actionlib/TestFeedback'
p76
g0
(g9
g2
Ntp77
Rp78
(dp79
g13
S'msg'
p80
sg15
S'actionlib/TestFeedback'
p81
sg17
S'actionlib'
p82
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nint32 feedback\n\n'
p83
sg21
S'package_modeler'
p84
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TestFeedback.msg'
p85
sbsS'twist_mux_msgs/JoyTurboActionResult'
p86
g0
(g9
g2
Ntp87
Rp88
(dp89
g13
S'msg'
p90
sg15
S'twist_mux_msgs/JoyTurboActionResult'
p91
sg17
S'twist_mux_msgs'
p92
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nJoyTurboResult result\n'
p93
sg21
S'package_modeler'
p94
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/msg/JoyTurboActionResult.msg'
p95
sbsS'geometry_msgs/TwistStamped'
p96
g0
(g9
g2
Ntp97
Rp98
(dp99
g13
S'msg'
p100
sg15
S'geometry_msgs/TwistStamped'
p101
sg17
S'geometry_msgs'
p102
sg19
S'\n# A twist with reference coordinate frame and timestamp\nHeader header\nTwist twist\n'
p103
sg21
S'package_modeler'
p104
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/TwistStamped.msg'
p105
sbsS'visualization_msgs/InteractiveMarkerInit'
p106
g0
(g9
g2
Ntp107
Rp108
(dp109
g13
S'msg'
p110
sg15
S'visualization_msgs/InteractiveMarkerInit'
p111
sg17
S'visualization_msgs'
p112
sg19
S'\n# Identifying string. Must be unique in the topic namespace\n# that this server works on.\nstring server_id\n\n# Sequence number.\n# The client will use this to detect if it has missed a subsequent\n# update.  Every update message will have the same sequence number as\n# an init message.  Clients will likely want to unsubscribe from the\n# init topic after a successful initialization to avoid receiving\n# duplicate data.\nuint64 seq_num\n\n# All markers.\nInteractiveMarker[] markers\n'
p113
sg21
S'package_modeler'
p114
sg23
I0
sg24
S'/opt/ros/melodic/share/visualization_msgs/msg/InteractiveMarkerInit.msg'
p115
sbsS'diagnostic_msgs/DiagnosticStatus'
p116
g0
(g9
g2
Ntp117
Rp118
(dp119
g13
S'msg'
p120
sg15
S'diagnostic_msgs/DiagnosticStatus'
p121
sg17
S'diagnostic_msgs'
p122
sg19
S'\n# This message holds the status of an individual component of the robot.\n# \n\n# Possible levels of operations\nbyte OK=0\nbyte WARN=1\nbyte ERROR=2\nbyte STALE=3\n\nbyte level # level of operation enumerated above \nstring name # a description of the test/component reporting\nstring message # a description of the status\nstring hardware_id # a hardware unique string\nKeyValue[] values # an array of values associated with the status\n\n'
p123
sg21
S'package_modeler'
p124
sg23
I0
sg24
S'/opt/ros/melodic/share/diagnostic_msgs/msg/DiagnosticStatus.msg'
p125
sbsS'sensor_msgs/TimeReference'
p126
g0
(g9
g2
Ntp127
Rp128
(dp129
g13
S'msg'
p130
sg15
S'sensor_msgs/TimeReference'
p131
sg17
S'sensor_msgs'
p132
sg19
S'\n# Measurement from an external time source not actively synchronized with the system clock.\n\nHeader header    # stamp is system time for which measurement was valid\n                 # frame_id is not used \n\ntime   time_ref  # corresponding time from this external source\nstring source    # (optional) name of time source\n'
p133
sg21
S'package_modeler'
p134
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/TimeReference.msg'
p135
sbsS'geographic_msgs/GeoPoint'
p136
g0
(g9
g2
Ntp137
Rp138
(dp139
g13
S'msg'
p140
sg15
S'geographic_msgs/GeoPoint'
p141
sg17
S'geographic_msgs'
p142
sg19
S'\n# Geographic point, using the WGS 84 reference ellipsoid.\n\n# Latitude [degrees]. Positive is north of equator; negative is south\n# (-90 <= latitude <= +90).\nfloat64 latitude\n\n# Longitude [degrees]. Positive is east of prime meridian; negative is\n# west (-180 <= longitude <= +180). At the poles, latitude is -90 or\n# +90, and longitude is irrelevant, but must be in range.\nfloat64 longitude\n\n# Altitude [m]. Positive is above the WGS 84 ellipsoid (NaN if unspecified).\nfloat64 altitude\n'
p143
sg21
S'package_modeler'
p144
sg23
I0
sg24
S'/opt/ros/melodic/share/geographic_msgs/msg/GeoPoint.msg'
p145
sbsS'cartographer_ros_msgs/SubmapTexture'
p146
g0
(g9
g2
Ntp147
Rp148
(dp149
g13
S'msg'
p150
sg15
S'cartographer_ros_msgs/SubmapTexture'
p151
sg17
S'cartographer_ros_msgs'
p152
sg19
S'\n# Copyright 2017 The Cartographer Authors\n#\n# Licensed under the Apache License, Version 2.0 (the "License");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nuint8[] cells\nint32 width\nint32 height\nfloat64 resolution\ngeometry_msgs/Pose slice_pose\n'
p153
sg21
S'package_modeler'
p154
sg23
I0
sg24
S'/opt/ros/melodic/share/cartographer_ros_msgs/msg/SubmapTexture.msg'
p155
sbsS'dynamic_reconfigure/ParamDescription'
p156
g0
(g9
g2
Ntp157
Rp158
(dp159
g13
S'msg'
p160
sg15
S'dynamic_reconfigure/ParamDescription'
p161
sg17
S'dynamic_reconfigure'
p162
sg19
S'\nstring name\nstring type\nuint32 level\nstring description\nstring edit_method\n'
p163
sg21
S'package_modeler'
p164
sg23
I0
sg24
S'/opt/ros/melodic/share/dynamic_reconfigure/msg/ParamDescription.msg'
p165
sbsS'actionlib_tutorials/FibonacciActionFeedback'
p166
g0
(g9
g2
Ntp167
Rp168
(dp169
g13
S'msg'
p170
sg15
S'actionlib_tutorials/FibonacciActionFeedback'
p171
sg17
S'actionlib_tutorials'
p172
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nFibonacciFeedback feedback\n'
p173
sg21
S'package_modeler'
p174
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/msg/FibonacciActionFeedback.msg'
p175
sbsS'control_msgs/FollowJointTrajectoryActionFeedback'
p176
g0
(g9
g2
Ntp177
Rp178
(dp179
g13
S'msg'
p180
sg15
S'control_msgs/FollowJointTrajectoryActionFeedback'
p181
sg17
S'control_msgs'
p182
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nFollowJointTrajectoryFeedback feedback\n'
p183
sg21
S'package_modeler'
p184
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/FollowJointTrajectoryActionFeedback.msg'
p185
sbsS'moveit_msgs/RobotState'
p186
g0
(g9
g2
Ntp187
Rp188
(dp189
g13
S'msg'
p190
sg15
S'moveit_msgs/RobotState'
p191
sg17
S'moveit_msgs'
p192
sg19
S'\n# This message contains information about the robot state, i.e. the positions of its joints and links\nsensor_msgs/JointState joint_state\n\n# Joints that may have multiple DOF are specified here\nsensor_msgs/MultiDOFJointState multi_dof_joint_state\n\n# Attached collision objects (attached to some link on the robot)\nAttachedCollisionObject[] attached_collision_objects\n\n# Flag indicating whether this scene is to be interpreted as a diff with respect to some other scene\n# This is mostly important for handling the attached bodies (whether or not to clear the attached bodies\n# of a moveit::core::RobotState before updating it with this message)\nbool is_diff\n'
p193
sg21
S'package_modeler'
p194
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/RobotState.msg'
p195
sbsS'geometry_msgs/Pose'
p196
g0
(g9
g2
Ntp197
Rp198
(dp199
g13
S'msg'
p200
sg15
S'geometry_msgs/Pose'
p201
sg17
S'geometry_msgs'
p202
sg19
S'\n# A representation of pose in free space, composed of position and orientation. \nPoint position\nQuaternion orientation\n'
p203
sg21
S'package_modeler'
p204
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/Pose.msg'
p205
sbsS'geometry_msgs/AccelWithCovarianceStamped'
p206
g0
(g9
g2
Ntp207
Rp208
(dp209
g13
S'msg'
p210
sg15
S'geometry_msgs/AccelWithCovarianceStamped'
p211
sg17
S'geometry_msgs'
p212
sg19
S'\n# This represents an estimated accel with reference coordinate frame and timestamp.\nHeader header\nAccelWithCovariance accel\n'
p213
sg21
S'package_modeler'
p214
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/AccelWithCovarianceStamped.msg'
p215
sbsS'control_msgs/JointControllerState'
p216
g0
(g9
g2
Ntp217
Rp218
(dp219
g13
S'msg'
p220
sg15
S'control_msgs/JointControllerState'
p221
sg17
S'control_msgs'
p222
sg19
S'\n# This message presents current controller state of one joint.\n\n# Header timestamp should be update time of controller state\nHeader header\n\n# The set point, that is, desired state.\nfloat64 set_point\n\n# Current value of the process (ie: latest sensor measurement on the controlled value).\nfloat64 process_value\n\n# First time-derivative of the process value.\nfloat64 process_value_dot\n\n# The error of the controlled value, essentially process_value - set_point (for a regular PID implementation).\nfloat64 error\n\n# Time between two consecutive updates/execution of the control law.\nfloat64 time_step\n\n# Current output of the controller.\nfloat64 command\n\n# Current PID parameters of the controller.\nfloat64 p\nfloat64 i\nfloat64 d\nfloat64 i_clamp\nbool antiwindup\n'
p223
sg21
S'package_modeler'
p224
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/JointControllerState.msg'
p225
sbsS'twist_mux_msgs/JoyPriorityActionFeedback'
p226
g0
(g9
g2
Ntp227
Rp228
(dp229
g13
S'msg'
p230
sg15
S'twist_mux_msgs/JoyPriorityActionFeedback'
p231
sg17
S'twist_mux_msgs'
p232
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nJoyPriorityFeedback feedback\n'
p233
sg21
S'package_modeler'
p234
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/msg/JoyPriorityActionFeedback.msg'
p235
sbsS'pcl_msgs/PointIndices'
p236
g0
(g9
g2
Ntp237
Rp238
(dp239
g13
S'msg'
p240
sg15
S'pcl_msgs/PointIndices'
p241
sg17
S'pcl_msgs'
p242
sg19
S'\nHeader header\nint32[] indices\n\n'
p243
sg21
S'package_modeler'
p244
sg23
I0
sg24
S'/opt/ros/melodic/share/pcl_msgs/msg/PointIndices.msg'
p245
sbsS'object_recognition_msgs/ObjectRecognitionAction'
p246
g0
(g9
g2
Ntp247
Rp248
(dp249
g13
S'msg'
p250
sg15
S'object_recognition_msgs/ObjectRecognitionAction'
p251
sg17
S'object_recognition_msgs'
p252
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nObjectRecognitionActionGoal action_goal\nObjectRecognitionActionResult action_result\nObjectRecognitionActionFeedback action_feedback\n'
p253
sg21
S'package_modeler'
p254
sg23
I0
sg24
S'/opt/ros/melodic/share/object_recognition_msgs/msg/ObjectRecognitionAction.msg'
p255
sbsS'geographic_msgs/GeographicMap'
p256
g0
(g9
g2
Ntp257
Rp258
(dp259
g13
S'msg'
p260
sg15
S'geographic_msgs/GeographicMap'
p261
sg17
S'geographic_msgs'
p262
sg19
S'\n# Geographic map for a specified region.\n\nHeader header            # stamp specifies time\n                         # frame_id (normally /map)\n\nuuid_msgs/UniqueID id    # identifier for this map\nBoundingBox  bounds      # 2D bounding box containing map\n\nWayPoint[]   points      # way-points\nMapFeature[] features    # map features\nKeyValue[]   props       # map properties\n'
p263
sg21
S'package_modeler'
p264
sg23
I0
sg24
S'/opt/ros/melodic/share/geographic_msgs/msg/GeographicMap.msg'
p265
sbsS'turtle_actionlib/ShapeGoal'
p266
g0
(g9
g2
Ntp267
Rp268
(dp269
g13
S'msg'
p270
sg15
S'turtle_actionlib/ShapeGoal'
p271
sg17
S'turtle_actionlib'
p272
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n#goal definition\nint32 edges\nfloat32 radius\n'
p273
sg21
S'package_modeler'
p274
sg23
I0
sg24
S'/opt/ros/melodic/share/turtle_actionlib/msg/ShapeGoal.msg'
p275
sbsS'actionlib/TwoIntsFeedback'
p276
g0
(g9
g2
Ntp277
Rp278
(dp279
g13
S'msg'
p280
sg15
S'actionlib/TwoIntsFeedback'
p281
sg17
S'actionlib'
p282
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n'
p283
sg21
S'package_modeler'
p284
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TwoIntsFeedback.msg'
p285
sbsS'control_msgs/PidState'
p286
g0
(g9
g2
Ntp287
Rp288
(dp289
g13
S'msg'
p290
sg15
S'control_msgs/PidState'
p291
sg17
S'control_msgs'
p292
sg19
S'\nHeader header\nduration timestep\nfloat64 error\nfloat64 error_dot\nfloat64 p_error\nfloat64 i_error\nfloat64 d_error\nfloat64 p_term\nfloat64 i_term\nfloat64 d_term\nfloat64 i_max\nfloat64 i_min\nfloat64 output\n'
p293
sg21
S'package_modeler'
p294
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/PidState.msg'
p295
sbsS'control_msgs/PointHeadActionGoal'
p296
g0
(g9
g2
Ntp297
Rp298
(dp299
g13
S'msg'
p300
sg15
S'control_msgs/PointHeadActionGoal'
p301
sg17
S'control_msgs'
p302
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nPointHeadGoal goal\n'
p303
sg21
S'package_modeler'
p304
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/PointHeadActionGoal.msg'
p305
sbsS'move_base_msgs/MoveBaseActionGoal'
p306
g0
(g9
g2
Ntp307
Rp308
(dp309
g13
S'msg'
p310
sg15
S'move_base_msgs/MoveBaseActionGoal'
p311
sg17
S'move_base_msgs'
p312
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nMoveBaseGoal goal\n'
p313
sg21
S'package_modeler'
p314
sg23
I0
sg24
S'/opt/ros/melodic/share/move_base_msgs/msg/MoveBaseActionGoal.msg'
p315
sbsS'twist_mux_msgs/JoyPriorityAction'
p316
g0
(g9
g2
Ntp317
Rp318
(dp319
g13
S'msg'
p320
sg15
S'twist_mux_msgs/JoyPriorityAction'
p321
sg17
S'twist_mux_msgs'
p322
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nJoyPriorityActionGoal action_goal\nJoyPriorityActionResult action_result\nJoyPriorityActionFeedback action_feedback\n'
p323
sg21
S'package_modeler'
p324
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/msg/JoyPriorityAction.msg'
p325
sbsS'twist_mux_msgs/JoyPriorityActionResult'
p326
g0
(g9
g2
Ntp327
Rp328
(dp329
g13
S'msg'
p330
sg15
S'twist_mux_msgs/JoyPriorityActionResult'
p331
sg17
S'twist_mux_msgs'
p332
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nJoyPriorityResult result\n'
p333
sg21
S'package_modeler'
p334
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/msg/JoyPriorityActionResult.msg'
p335
sbsS'capabilities/RunningCapability'
p336
g0
(g9
g2
Ntp337
Rp338
(dp339
g13
S'msg'
p340
sg15
S'capabilities/RunningCapability'
p341
sg17
S'capabilities'
p342
sg19
S'\n# Name and provider of this running capability\nCapability capability\n# Capabilities which depend on this one\nCapability[] dependent_capabilities\n# Message stating what started this capability\nstring started_by\n# Process ID of the running provider\nint32 pid\n'
p343
sg21
S'package_modeler'
p344
sg23
I0
sg24
S'/opt/ros/melodic/share/capabilities/msg/RunningCapability.msg'
p345
sbsS'moveit_msgs/ExecuteTrajectoryActionFeedback'
p346
g0
(g9
g2
Ntp347
Rp348
(dp349
g13
S'msg'
p350
sg15
S'moveit_msgs/ExecuteTrajectoryActionFeedback'
p351
sg17
S'moveit_msgs'
p352
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nExecuteTrajectoryFeedback feedback\n'
p353
sg21
S'package_modeler'
p354
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/ExecuteTrajectoryActionFeedback.msg'
p355
sbsS'moveit_msgs/PlaceActionGoal'
p356
g0
(g9
g2
Ntp357
Rp358
(dp359
g13
S'msg'
p360
sg15
S'moveit_msgs/PlaceActionGoal'
p361
sg17
S'moveit_msgs'
p362
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nPlaceGoal goal\n'
p363
sg21
S'package_modeler'
p364
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PlaceActionGoal.msg'
p365
sbsS'moveit_msgs/MoveGroupFeedback'
p366
g0
(g9
g2
Ntp367
Rp368
(dp369
g13
S'msg'
p370
sg15
S'moveit_msgs/MoveGroupFeedback'
p371
sg17
S'moveit_msgs'
p372
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n# The internal state that the move group action currently is in\nstring state\n\n'
p373
sg21
S'package_modeler'
p374
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveGroupFeedback.msg'
p375
sbsS'actionlib/TestResult'
p376
g0
(g9
g2
Ntp377
Rp378
(dp379
g13
S'msg'
p380
sg15
S'actionlib/TestResult'
p381
sg17
S'actionlib'
p382
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nint32 result\n'
p383
sg21
S'package_modeler'
p384
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TestResult.msg'
p385
sbsS'nmea_msgs/Sentence'
p386
g0
(g9
g2
Ntp387
Rp388
(dp389
g13
S'msg'
p390
sg15
S'nmea_msgs/Sentence'
p391
sg17
S'nmea_msgs'
p392
sg19
S'\n# A message representing a single NMEA0183 sentence.\n\n# header.stamp is the ROS Time when the sentence was read.\n# header.frame_id is the frame of reference reported by the satellite\n#        receiver, usually the location of the antenna.  This is a\n#        Euclidean frame relative to the vehicle, not a reference\n#        ellipsoid.\nHeader header\n\n# This should only contain ASCII characters in order to be a valid NMEA0183 sentence.\nstring sentence\n'
p393
sg21
S'package_modeler'
p394
sg23
I0
sg24
S'/opt/ros/melodic/share/nmea_msgs/msg/Sentence.msg'
p395
sbsS'visualization_msgs/InteractiveMarkerControl'
p396
g0
(g9
g2
Ntp397
Rp398
(dp399
g13
S'msg'
p400
sg15
S'visualization_msgs/InteractiveMarkerControl'
p401
sg17
S'visualization_msgs'
p402
sg19
S'\n# Represents a control that is to be displayed together with an interactive marker\n\n# Identifying string for this control.\n# You need to assign a unique value to this to receive feedback from the GUI\n# on what actions the user performs on this control (e.g. a button click).\nstring name\n\n\n# Defines the local coordinate frame (relative to the pose of the parent\n# interactive marker) in which is being rotated and translated.\n# Default: Identity\ngeometry_msgs/Quaternion orientation\n\n\n# Orientation mode: controls how orientation changes.\n# INHERIT: Follow orientation of interactive marker\n# FIXED: Keep orientation fixed at initial state\n# VIEW_FACING: Align y-z plane with screen (x: forward, y:left, z:up).\nuint8 INHERIT = 0 \nuint8 FIXED = 1\nuint8 VIEW_FACING = 2\n\nuint8 orientation_mode\n\n# Interaction mode for this control\n# \n# NONE: This control is only meant for visualization; no context menu.\n# MENU: Like NONE, but right-click menu is active.\n# BUTTON: Element can be left-clicked.\n# MOVE_AXIS: Translate along local x-axis.\n# MOVE_PLANE: Translate in local y-z plane.\n# ROTATE_AXIS: Rotate around local x-axis.\n# MOVE_ROTATE: Combines MOVE_PLANE and ROTATE_AXIS.\nuint8 NONE = 0 \nuint8 MENU = 1\nuint8 BUTTON = 2\nuint8 MOVE_AXIS = 3 \nuint8 MOVE_PLANE = 4\nuint8 ROTATE_AXIS = 5\nuint8 MOVE_ROTATE = 6\n# "3D" interaction modes work with the mouse+SHIFT+CTRL or with 3D cursors.\n# MOVE_3D: Translate freely in 3D space.\n# ROTATE_3D: Rotate freely in 3D space about the origin of parent frame.\n# MOVE_ROTATE_3D: Full 6-DOF freedom of translation and rotation about the cursor origin.\nuint8 MOVE_3D = 7\nuint8 ROTATE_3D = 8\nuint8 MOVE_ROTATE_3D = 9\n\nuint8 interaction_mode\n\n\n# If true, the contained markers will also be visible\n# when the gui is not in interactive mode.\nbool always_visible\n\n\n# Markers to be displayed as custom visual representation.\n# Leave this empty to use the default control handles.\n#\n# Note: \n# - The markers can be defined in an arbitrary coordinate frame,\n#   but will be transformed into the local frame of the interactive marker.\n# - If the header of a marker is empty, its pose will be interpreted as \n#   relative to the pose of the parent interactive marker.\nMarker[] markers\n\n\n# In VIEW_FACING mode, set this to true if you don\'t want the markers\n# to be aligned with the camera view point. The markers will show up\n# as in INHERIT mode.\nbool independent_marker_orientation\n\n\n# Short description (< 40 characters) of what this control does,\n# e.g. "Move the robot". \n# Default: A generic description based on the interaction mode\nstring description\n'
p403
sg21
S'package_modeler'
p404
sg23
I0
sg24
S'/opt/ros/melodic/share/visualization_msgs/msg/InteractiveMarkerControl.msg'
p405
sbsS'moveit_msgs/AllowedCollisionMatrix'
p406
g0
(g9
g2
Ntp407
Rp408
(dp409
g13
S'msg'
p410
sg15
S'moveit_msgs/AllowedCollisionMatrix'
p411
sg17
S'moveit_msgs'
p412
sg19
S'\n# The list of entry names in the matrix\nstring[] entry_names\n\n# The individual entries in the allowed collision matrix\n# square, symmetric, with same order as entry_names\nAllowedCollisionEntry[] entry_values\n\n# In addition to the collision matrix itself, we also have \n# the default entry value for each entry name.\n\n# If the allowed collision flag is queried for a pair of names (n1, n2)\n# that is not found in the collision matrix itself, the value of\n# the collision flag is considered to be that of the entry (n1 or n2)\n# specified in the list below. If both n1 and n2 are found in the list \n# of defaults, the result is computed with an AND operation\n\nstring[] default_entry_names\nbool[] default_entry_values\n'
p413
sg21
S'package_modeler'
p414
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/AllowedCollisionMatrix.msg'
p415
sbsS'visualization_msgs/Marker'
p416
g0
(g9
g2
Ntp417
Rp418
(dp419
g13
S'msg'
p420
sg15
S'visualization_msgs/Marker'
p421
sg17
S'visualization_msgs'
p422
sg19
S'\n# See http://www.ros.org/wiki/rviz/DisplayTypes/Marker and http://www.ros.org/wiki/rviz/Tutorials/Markers%3A%20Basic%20Shapes for more information on using this message with rviz\n\nuint8 ARROW=0\nuint8 CUBE=1\nuint8 SPHERE=2\nuint8 CYLINDER=3\nuint8 LINE_STRIP=4\nuint8 LINE_LIST=5\nuint8 CUBE_LIST=6\nuint8 SPHERE_LIST=7\nuint8 POINTS=8\nuint8 TEXT_VIEW_FACING=9\nuint8 MESH_RESOURCE=10\nuint8 TRIANGLE_LIST=11\n\nuint8 ADD=0\nuint8 MODIFY=0\nuint8 DELETE=2\nuint8 DELETEALL=3\n\nHeader header                        # header for time/frame information\nstring ns                            # Namespace to place this object in... used in conjunction with id to create a unique name for the object\nint32 id \t\t                         # object ID useful in conjunction with the namespace for manipulating and deleting the object later\nint32 type \t\t                       # Type of object\nint32 action \t                       # 0 add/modify an object, 1 (deprecated), 2 deletes an object, 3 deletes all objects\ngeometry_msgs/Pose pose                 # Pose of the object\ngeometry_msgs/Vector3 scale             # Scale of the object 1,1,1 means default (usually 1 meter square)\nstd_msgs/ColorRGBA color             # Color [0.0-1.0]\nduration lifetime                    # How long the object should last before being automatically deleted.  0 means forever\nbool frame_locked                    # If this marker should be frame-locked, i.e. retransformed into its frame every timestep\n\n#Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)\ngeometry_msgs/Point[] points\n#Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ...)\n#number of colors must either be 0 or equal to the number of points\n#NOTE: alpha is not yet used\nstd_msgs/ColorRGBA[] colors\n\n# NOTE: only used for text markers\nstring text\n\n# NOTE: only used for MESH_RESOURCE markers\nstring mesh_resource\nbool mesh_use_embedded_materials\n'
p423
sg21
S'package_modeler'
p424
sg23
I0
sg24
S'/opt/ros/melodic/share/visualization_msgs/msg/Marker.msg'
p425
sbsS'geographic_msgs/GeoPoseStamped'
p426
g0
(g9
g2
Ntp427
Rp428
(dp429
g13
S'msg'
p430
sg15
S'geographic_msgs/GeoPoseStamped'
p431
sg17
S'geographic_msgs'
p432
sg19
S'\nHeader header\ngeographic_msgs/GeoPose pose\n'
p433
sg21
S'package_modeler'
p434
sg23
I0
sg24
S'/opt/ros/melodic/share/geographic_msgs/msg/GeoPoseStamped.msg'
p435
sbsS'moveit_msgs/ExecuteTrajectoryActionResult'
p436
g0
(g9
g2
Ntp437
Rp438
(dp439
g13
S'msg'
p440
sg15
S'moveit_msgs/ExecuteTrajectoryActionResult'
p441
sg17
S'moveit_msgs'
p442
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nExecuteTrajectoryResult result\n'
p443
sg21
S'package_modeler'
p444
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/ExecuteTrajectoryActionResult.msg'
p445
sbsS'geographic_msgs/MapFeature'
p446
g0
(g9
g2
Ntp447
Rp448
(dp449
g13
S'msg'
p450
sg15
S'geographic_msgs/MapFeature'
p451
sg17
S'geographic_msgs'
p452
sg19
S'\n# Geographic map feature.\n#\n# A list of WayPoint IDs for features like streets, highways, hiking\n# trails, the outlines of buildings and parking lots in sequential\n# order.\n#\n# Feature lists may also contain other feature lists as members.\n\nuuid_msgs/UniqueID   id         # Unique feature identifier\nuuid_msgs/UniqueID[] components # Sequence of feature components\nKeyValue[] props                # Key/value properties for this feature\n'
p453
sg21
S'package_modeler'
p454
sg23
I0
sg24
S'/opt/ros/melodic/share/geographic_msgs/msg/MapFeature.msg'
p455
sbsS'actionlib/TestRequestActionGoal'
p456
g0
(g9
g2
Ntp457
Rp458
(dp459
g13
S'msg'
p460
sg15
S'actionlib/TestRequestActionGoal'
p461
sg17
S'actionlib'
p462
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nTestRequestGoal goal\n'
p463
sg21
S'package_modeler'
p464
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TestRequestActionGoal.msg'
p465
sbsS'gazebo_msgs/LinkStates'
p466
g0
(g9
g2
Ntp467
Rp468
(dp469
g13
S'msg'
p470
sg15
S'gazebo_msgs/LinkStates'
p471
sg17
S'gazebo_msgs'
p472
sg19
S'\n# broadcast all link states in world frame\nstring[] name                 # link names\ngeometry_msgs/Pose[] pose     # desired pose in world frame\ngeometry_msgs/Twist[] twist   # desired twist in world frame\n'
p473
sg21
S'package_modeler'
p474
sg23
I0
sg24
S'/opt/ros/melodic/share/gazebo_msgs/msg/LinkStates.msg'
p475
sbsS'moveit_msgs/MoveGroupActionGoal'
p476
g0
(g9
g2
Ntp477
Rp478
(dp479
g13
S'msg'
p480
sg15
S'moveit_msgs/MoveGroupActionGoal'
p481
sg17
S'moveit_msgs'
p482
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nMoveGroupGoal goal\n'
p483
sg21
S'package_modeler'
p484
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveGroupActionGoal.msg'
p485
sbsS'octomap_msgs/Octomap'
p486
g0
(g9
g2
Ntp487
Rp488
(dp489
g13
S'msg'
p490
sg15
S'octomap_msgs/Octomap'
p491
sg17
S'octomap_msgs'
p492
sg19
S'\n# A 3D map in binary format, as Octree\nHeader header\n\n# Flag to denote a binary (only free/occupied) or full occupancy octree (.bt/.ot file)\nbool binary\n\n# Class id of the contained octree \nstring id\n\n# Resolution (in m) of the smallest octree nodes\nfloat64 resolution\n\n# binary serialization of octree, use conversions.h to read and write octrees\nint8[] data\n'
p493
sg21
S'package_modeler'
p494
sg23
I0
sg24
S'/opt/ros/melodic/share/octomap_msgs/msg/Octomap.msg'
p495
sbsS'move_base_msgs/MoveBaseResult'
p496
g0
(g9
g2
Ntp497
Rp498
(dp499
g13
S'msg'
p500
sg15
S'move_base_msgs/MoveBaseResult'
p501
sg17
S'move_base_msgs'
p502
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n'
p503
sg21
S'package_modeler'
p504
sg23
I0
sg24
S'/opt/ros/melodic/share/move_base_msgs/msg/MoveBaseResult.msg'
p505
sbsS'capabilities/CapabilityEvent'
p506
g0
(g9
g2
Ntp507
Rp508
(dp509
g13
S'msg'
p510
sg15
S'capabilities/CapabilityEvent'
p511
sg17
S'capabilities'
p512
sg19
S'\nHeader header\n# Capability which this event pretains to\nstring capability\n# Capability provider which this event pretains to\nstring provider\n\n# Event types\nstring LAUNCHED="launched"\nstring STOPPED="stopped"\nstring TERMINATED="terminated"\nstring SERVER_READY="server_ready"\n# Event type\nstring type\n\n# PID of the related process\nint32 pid\n'
p513
sg21
S'package_modeler'
p514
sg23
I0
sg24
S'/opt/ros/melodic/share/capabilities/msg/CapabilityEvent.msg'
p515
sbsS'sensor_msgs/CameraInfo'
p516
g0
(g9
g2
Ntp517
Rp518
(dp519
g13
S'msg'
p520
sg15
S'sensor_msgs/CameraInfo'
p521
sg17
S'sensor_msgs'
p522
sg19
S'\n# This message defines meta information for a camera. It should be in a\n# camera namespace on topic "camera_info" and accompanied by up to five\n# image topics named:\n#\n#   image_raw - raw data from the camera driver, possibly Bayer encoded\n#   image            - monochrome, distorted\n#   image_color      - color, distorted\n#   image_rect       - monochrome, rectified\n#   image_rect_color - color, rectified\n#\n# The image_pipeline contains packages (image_proc, stereo_image_proc)\n# for producing the four processed image topics from image_raw and\n# camera_info. The meaning of the camera parameters are described in\n# detail at http://www.ros.org/wiki/image_pipeline/CameraInfo.\n#\n# The image_geometry package provides a user-friendly interface to\n# common operations using this meta information. If you want to, e.g.,\n# project a 3d point into image coordinates, we strongly recommend\n# using image_geometry.\n#\n# If the camera is uncalibrated, the matrices D, K, R, P should be left\n# zeroed out. In particular, clients may assume that K[0] == 0.0\n# indicates an uncalibrated camera.\n\n#######################################################################\n#                     Image acquisition info                          #\n#######################################################################\n\n# Time of image acquisition, camera coordinate frame ID\nHeader header    # Header timestamp should be acquisition time of image\n                 # Header frame_id should be optical frame of camera\n                 # origin of frame should be optical center of camera\n                 # +x should point to the right in the image\n                 # +y should point down in the image\n                 # +z should point into the plane of the image\n\n\n#######################################################################\n#                      Calibration Parameters                         #\n#######################################################################\n# These are fixed during camera calibration. Their values will be the #\n# same in all messages until the camera is recalibrated. Note that    #\n# self-calibrating systems may "recalibrate" frequently.              #\n#                                                                     #\n# The internal parameters can be used to warp a raw (distorted) image #\n# to:                                                                 #\n#   1. An undistorted image (requires D and K)                        #\n#   2. A rectified image (requires D, K, R)                           #\n# The projection matrix P projects 3D points into the rectified image.#\n#######################################################################\n\n# The image dimensions with which the camera was calibrated. Normally\n# this will be the full camera resolution in pixels.\nuint32 height\nuint32 width\n\n# The distortion model used. Supported models are listed in\n# sensor_msgs/distortion_models.h. For most cameras, "plumb_bob" - a\n# simple model of radial and tangential distortion - is sufficient.\nstring distortion_model\n\n# The distortion parameters, size depending on the distortion model.\n# For "plumb_bob", the 5 parameters are: (k1, k2, t1, t2, k3).\nfloat64[] D\n\n# Intrinsic camera matrix for the raw (distorted) images.\n#     [fx  0 cx]\n# K = [ 0 fy cy]\n#     [ 0  0  1]\n# Projects 3D points in the camera coordinate frame to 2D pixel\n# coordinates using the focal lengths (fx, fy) and principal point\n# (cx, cy).\nfloat64[9]  K # 3x3 row-major matrix\n\n# Rectification matrix (stereo cameras only)\n# A rotation matrix aligning the camera coordinate system to the ideal\n# stereo image plane so that epipolar lines in both stereo images are\n# parallel.\nfloat64[9]  R # 3x3 row-major matrix\n\n# Projection/camera matrix\n#     [fx\'  0  cx\' Tx]\n# P = [ 0  fy\' cy\' Ty]\n#     [ 0   0   1   0]\n# By convention, this matrix specifies the intrinsic (camera) matrix\n#  of the processed (rectified) image. That is, the left 3x3 portion\n#  is the normal camera intrinsic matrix for the rectified image.\n# It projects 3D points in the camera coordinate frame to 2D pixel\n#  coordinates using the focal lengths (fx\', fy\') and principal point\n#  (cx\', cy\') - these may differ from the values in K.\n# For monocular cameras, Tx = Ty = 0. Normally, monocular cameras will\n#  also have R = the identity and P[1:3,1:3] = K.\n# For a stereo pair, the fourth column [Tx Ty 0]\' is related to the\n#  position of the optical center of the second camera in the first\n#  camera\'s frame. We assume Tz = 0 so both cameras are in the same\n#  stereo image plane. The first camera always has Tx = Ty = 0. For\n#  the right (second) camera of a horizontal stereo pair, Ty = 0 and\n#  Tx = -fx\' * B, where B is the baseline between the cameras.\n# Given a 3D point [X Y Z]\', the projection (x, y) of the point onto\n#  the rectified image is given by:\n#  [u v w]\' = P * [X Y Z 1]\'\n#         x = u / w\n#         y = v / w\n#  This holds for both images of a stereo pair.\nfloat64[12] P # 3x4 row-major matrix\n\n\n#######################################################################\n#                      Operational Parameters                         #\n#######################################################################\n# These define the image region actually captured by the camera       #\n# driver. Although they affect the geometry of the output image, they #\n# may be changed freely without recalibrating the camera.             #\n#######################################################################\n\n# Binning refers here to any camera setting which combines rectangular\n#  neighborhoods of pixels into larger "super-pixels." It reduces the\n#  resolution of the output image to\n#  (width / binning_x) x (height / binning_y).\n# The default values binning_x = binning_y = 0 is considered the same\n#  as binning_x = binning_y = 1 (no subsampling).\nuint32 binning_x\nuint32 binning_y\n\n# Region of interest (subwindow of full camera resolution), given in\n#  full resolution (unbinned) image coordinates. A particular ROI\n#  always denotes the same window of pixels on the camera sensor,\n#  regardless of binning settings.\n# The default setting of roi (all values 0) is considered the same as\n#  full resolution (roi.width = width, roi.height = height).\nRegionOfInterest roi\n'
p523
sg21
S'package_modeler'
p524
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/CameraInfo.msg'
p525
sbsS'control_msgs/GripperCommandGoal'
p526
g0
(g9
g2
Ntp527
Rp528
(dp529
g13
S'msg'
p530
sg15
S'control_msgs/GripperCommandGoal'
p531
sg17
S'control_msgs'
p532
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nGripperCommand command\n'
p533
sg21
S'package_modeler'
p534
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/GripperCommandGoal.msg'
p535
sbsS'dynamic_reconfigure/Config'
p536
g0
(g9
g2
Ntp537
Rp538
(dp539
g13
S'msg'
p540
sg15
S'dynamic_reconfigure/Config'
p541
sg17
S'dynamic_reconfigure'
p542
sg19
S'\nBoolParameter[] bools\nIntParameter[] ints\nStrParameter[] strs\nDoubleParameter[] doubles\nGroupState[] groups\n'
p543
sg21
S'package_modeler'
p544
sg23
I0
sg24
S'/opt/ros/melodic/share/dynamic_reconfigure/msg/Config.msg'
p545
sbsS'base_local_planner/Position2DInt'
p546
g0
(g9
g2
Ntp547
Rp548
(dp549
g13
S'msg'
p550
sg15
S'base_local_planner/Position2DInt'
p551
sg17
S'base_local_planner'
p552
sg19
S'\nint64 x\nint64 y'
p553
sg21
S'package_modeler'
p554
sg23
I0
sg24
S'/opt/ros/melodic/share/base_local_planner/msg/Position2DInt.msg'
p555
sbsS'control_msgs/JointTrajectoryGoal'
p556
g0
(g9
g2
Ntp557
Rp558
(dp559
g13
S'msg'
p560
sg15
S'control_msgs/JointTrajectoryGoal'
p561
sg17
S'control_msgs'
p562
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\ntrajectory_msgs/JointTrajectory trajectory\n'
p563
sg21
S'package_modeler'
p564
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/JointTrajectoryGoal.msg'
p565
sbsS'sensor_msgs/MultiEchoLaserScan'
p566
g0
(g9
g2
Ntp567
Rp568
(dp569
g13
S'msg'
p570
sg15
S'sensor_msgs/MultiEchoLaserScan'
p571
sg17
S'sensor_msgs'
p572
sg19
S'\n# Single scan from a multi-echo planar laser range-finder\n#\n# If you have another ranging device with different behavior (e.g. a sonar\n# array), please find or create a different message, since applications\n# will make fairly laser-specific assumptions about this data\n\nHeader header            # timestamp in the header is the acquisition time of \n                         # the first ray in the scan.\n                         #\n                         # in frame frame_id, angles are measured around \n                         # the positive Z axis (counterclockwise, if Z is up)\n                         # with zero angle being forward along the x axis\n                         \nfloat32 angle_min        # start angle of the scan [rad]\nfloat32 angle_max        # end angle of the scan [rad]\nfloat32 angle_increment  # angular distance between measurements [rad]\n\nfloat32 time_increment   # time between measurements [seconds] - if your scanner\n                         # is moving, this will be used in interpolating position\n                         # of 3d points\nfloat32 scan_time        # time between scans [seconds]\n\nfloat32 range_min        # minimum range value [m]\nfloat32 range_max        # maximum range value [m]\n\nLaserEcho[] ranges       # range data [m] (Note: NaNs, values < range_min or > range_max should be discarded)\n                         # +Inf measurements are out of range\n                         # -Inf measurements are too close to determine exact distance.\nLaserEcho[] intensities  # intensity data [device-specific units].  If your\n                         # device does not provide intensities, please leave\n                         # the array empty.'
p573
sg21
S'package_modeler'
p574
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/MultiEchoLaserScan.msg'
p575
sbsS'control_msgs/GripperCommandActionResult'
p576
g0
(g9
g2
Ntp577
Rp578
(dp579
g13
S'msg'
p580
sg15
S'control_msgs/GripperCommandActionResult'
p581
sg17
S'control_msgs'
p582
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nGripperCommandResult result\n'
p583
sg21
S'package_modeler'
p584
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/GripperCommandActionResult.msg'
p585
sbsS'control_msgs/GripperCommandResult'
p586
g0
(g9
g2
Ntp587
Rp588
(dp589
g13
S'msg'
p590
sg15
S'control_msgs/GripperCommandResult'
p591
sg17
S'control_msgs'
p592
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nfloat64 position  # The current gripper gap size (in meters)\nfloat64 effort    # The current effort exerted (in Newtons)\nbool stalled      # True iff the gripper is exerting max effort and not moving\nbool reached_goal # True iff the gripper position has reached the commanded setpoint\n'
p593
sg21
S'package_modeler'
p594
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/GripperCommandResult.msg'
p595
sbsS'actionlib_tutorials/AveragingResult'
p596
g0
(g9
g2
Ntp597
Rp598
(dp599
g13
S'msg'
p600
sg15
S'actionlib_tutorials/AveragingResult'
p601
sg17
S'actionlib_tutorials'
p602
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n#result definition\nfloat32 mean\nfloat32 std_dev\n'
p603
sg21
S'package_modeler'
p604
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/msg/AveragingResult.msg'
p605
sbsS'sensor_msgs/CompressedImage'
p606
g0
(g9
g2
Ntp607
Rp608
(dp609
g13
S'msg'
p610
sg15
S'sensor_msgs/CompressedImage'
p611
sg17
S'sensor_msgs'
p612
sg19
S'\n# This message contains a compressed image\n\nHeader header        # Header timestamp should be acquisition time of image\n                     # Header frame_id should be optical frame of camera\n                     # origin of frame should be optical center of camera\n                     # +x should point to the right in the image\n                     # +y should point down in the image\n                     # +z should point into to plane of the image\n\nstring format        # Specifies the format of the data\n                     #   Acceptable values:\n                     #     jpeg, png\nuint8[] data         # Compressed image buffer\n'
p613
sg21
S'package_modeler'
p614
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/CompressedImage.msg'
p615
sbsS'sensor_msgs/BatteryState'
p616
g0
(g9
g2
Ntp617
Rp618
(dp619
g13
S'msg'
p620
sg15
S'sensor_msgs/BatteryState'
p621
sg17
S'sensor_msgs'
p622
sg19
S'\n\n# Constants are chosen to match the enums in the linux kernel\n# defined in include/linux/power_supply.h as of version 3.7\n# The one difference is for style reasons the constants are\n# all uppercase not mixed case.\n\n# Power supply status constants\nuint8 POWER_SUPPLY_STATUS_UNKNOWN = 0\nuint8 POWER_SUPPLY_STATUS_CHARGING = 1\nuint8 POWER_SUPPLY_STATUS_DISCHARGING = 2\nuint8 POWER_SUPPLY_STATUS_NOT_CHARGING = 3\nuint8 POWER_SUPPLY_STATUS_FULL = 4\n\n# Power supply health constants\nuint8 POWER_SUPPLY_HEALTH_UNKNOWN = 0\nuint8 POWER_SUPPLY_HEALTH_GOOD = 1\nuint8 POWER_SUPPLY_HEALTH_OVERHEAT = 2\nuint8 POWER_SUPPLY_HEALTH_DEAD = 3\nuint8 POWER_SUPPLY_HEALTH_OVERVOLTAGE = 4\nuint8 POWER_SUPPLY_HEALTH_UNSPEC_FAILURE = 5\nuint8 POWER_SUPPLY_HEALTH_COLD = 6\nuint8 POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE = 7\nuint8 POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE = 8\n\n# Power supply technology (chemistry) constants\nuint8 POWER_SUPPLY_TECHNOLOGY_UNKNOWN = 0\nuint8 POWER_SUPPLY_TECHNOLOGY_NIMH = 1\nuint8 POWER_SUPPLY_TECHNOLOGY_LION = 2\nuint8 POWER_SUPPLY_TECHNOLOGY_LIPO = 3\nuint8 POWER_SUPPLY_TECHNOLOGY_LIFE = 4\nuint8 POWER_SUPPLY_TECHNOLOGY_NICD = 5\nuint8 POWER_SUPPLY_TECHNOLOGY_LIMN = 6\n\nHeader  header\nfloat32 voltage          # Voltage in Volts (Mandatory)\nfloat32 current          # Negative when discharging (A)  (If unmeasured NaN)\nfloat32 charge           # Current charge in Ah  (If unmeasured NaN)\nfloat32 capacity         # Capacity in Ah (last full capacity)  (If unmeasured NaN)\nfloat32 design_capacity  # Capacity in Ah (design capacity)  (If unmeasured NaN)\nfloat32 percentage       # Charge percentage on 0 to 1 range  (If unmeasured NaN)\nuint8   power_supply_status     # The charging status as reported. Values defined above\nuint8   power_supply_health     # The battery health metric. Values defined above\nuint8   power_supply_technology # The battery chemistry. Values defined above\nbool    present          # True if the battery is present\n\nfloat32[] cell_voltage   # An array of individual cell voltages for each cell in the pack\n                         # If individual voltages unknown but number of cells known set each to NaN\nstring location          # The location into which the battery is inserted. (slot number or plug)\nstring serial_number     # The best approximation of the battery serial number\n'
p623
sg21
S'package_modeler'
p624
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/BatteryState.msg'
p625
sbsS'actionlib/TestRequestFeedback'
p626
g0
(g9
g2
Ntp627
Rp628
(dp629
g13
S'msg'
p630
sg15
S'actionlib/TestRequestFeedback'
p631
sg17
S'actionlib'
p632
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n'
p633
sg21
S'package_modeler'
p634
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TestRequestFeedback.msg'
p635
sbsS'actionlib_tutorials/FibonacciGoal'
p636
g0
(g9
g2
Ntp637
Rp638
(dp639
g13
S'msg'
p640
sg15
S'actionlib_tutorials/FibonacciGoal'
p641
sg17
S'actionlib_tutorials'
p642
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n#goal definition\nint32 order\n'
p643
sg21
S'package_modeler'
p644
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/msg/FibonacciGoal.msg'
p645
sbsS'cartographer_ros_msgs/LandmarkEntry'
p646
g0
(g9
g2
Ntp647
Rp648
(dp649
g13
S'msg'
p650
sg15
S'cartographer_ros_msgs/LandmarkEntry'
p651
sg17
S'cartographer_ros_msgs'
p652
sg19
S'\n# 2018 The Cartographer Authors\n#\n# Licensed under the Apache License, Version 2.0 (the "License");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstring id\ngeometry_msgs/Pose tracking_from_landmark_transform\nfloat64 translation_weight\nfloat64 rotation_weight\n'
p653
sg21
S'package_modeler'
p654
sg23
I0
sg24
S'/opt/ros/melodic/share/cartographer_ros_msgs/msg/LandmarkEntry.msg'
p655
sbsS'gazebo_msgs/WorldState'
p656
g0
(g9
g2
Ntp657
Rp658
(dp659
g13
S'msg'
p660
sg15
S'gazebo_msgs/WorldState'
p661
sg17
S'gazebo_msgs'
p662
sg19
S'\n# This is a message that holds data necessary to reconstruct a snapshot of the world\n#\n# = Approach to Message Passing =\n# The state of the world is defined by either\n#   1. Inertial Model pose, twist\n#      * kinematic data - connectivity graph from Model to each Link\n#      * joint angles\n#      * joint velocities\n#      * Applied forces - Body wrench\n#        * relative transform from Body to each collision Geom\n# Or\n#   2. Inertial (absolute) Body pose, twist, wrench\n#      * relative transform from Body to each collision Geom - constant, so not sent over wire\n#      * back compute from canonical body info to get Model pose and twist.\n#\n# Chooing (2.) because it matches most physics engines out there\n#   and is simpler.\n#\n# = Future =\n# Consider impacts on using reduced coordinates / graph (parent/child links) approach\n#   constraint and physics solvers.\n#\n# = Application =\n# This message is used to do the following:\n#   * reconstruct the world and objects for sensor generation\n#   * stop / start simulation - need pose, twist, wrench of each body\n#   * collision detection - need pose of each collision geometry.  velocity/acceleration if\n#\n# = Assumptions =\n# Assuming that each (physics) processor node locally already has\n#   * collision information - Trimesh for Geoms, etc\n#   * relative transforms from Body to Geom - this is assumed to be fixed, do not send oved wire\n#   * inertial information - does not vary in time\n#   * visual information - does not vary in time\n#\n\nHeader header\n\nstring[] name\ngeometry_msgs/Pose[] pose\ngeometry_msgs/Twist[] twist\ngeometry_msgs/Wrench[] wrench\n'
p663
sg21
S'package_modeler'
p664
sg23
I0
sg24
S'/opt/ros/melodic/share/gazebo_msgs/msg/WorldState.msg'
p665
sbsS'actionlib/TestRequestActionResult'
p666
g0
(g9
g2
Ntp667
Rp668
(dp669
g13
S'msg'
p670
sg15
S'actionlib/TestRequestActionResult'
p671
sg17
S'actionlib'
p672
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nTestRequestResult result\n'
p673
sg21
S'package_modeler'
p674
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TestRequestActionResult.msg'
p675
sbsS'moveit_msgs/PlaceLocation'
p676
g0
(g9
g2
Ntp677
Rp678
(dp679
g13
S'msg'
p680
sg15
S'moveit_msgs/PlaceLocation'
p681
sg17
S'moveit_msgs'
p682
sg19
S'\n# A name for this grasp\nstring id\n\n# The internal posture of the hand for the grasp\n# positions and efforts are used\ntrajectory_msgs/JointTrajectory post_place_posture\n\n# The position of the end-effector for the grasp relative to a reference frame \n# (that is always specified elsewhere, not in this message)\ngeometry_msgs/PoseStamped place_pose\n\n# The approach motion\nGripperTranslation pre_place_approach\n\n# The retreat motion\nGripperTranslation post_place_retreat\n\n# an optional list of obstacles that we have semantic information about\n# and that can be touched/pushed/moved in the course of grasping\nstring[] allowed_touch_objects\n'
p683
sg21
S'package_modeler'
p684
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PlaceLocation.msg'
p685
sbsS'turtlesim/Pose'
p686
g0
(g9
g2
Ntp687
Rp688
(dp689
g13
S'msg'
p690
sg15
S'turtlesim/Pose'
p691
sg17
S'turtlesim'
p692
sg19
S'\nfloat32 x\nfloat32 y\nfloat32 theta\n\nfloat32 linear_velocity\nfloat32 angular_velocity'
p693
sg21
S'package_modeler'
p694
sg23
I0
sg24
S'/opt/ros/melodic/share/turtlesim/msg/Pose.msg'
p695
sbsS'sensor_msgs/MagneticField'
p696
g0
(g9
g2
Ntp697
Rp698
(dp699
g13
S'msg'
p700
sg15
S'sensor_msgs/MagneticField'
p701
sg17
S'sensor_msgs'
p702
sg19
S'\n # Measurement of the Magnetic Field vector at a specific location.\n\n # If the covariance of the measurement is known, it should be filled in\n # (if all you know is the variance of each measurement, e.g. from the datasheet,\n #just put those along the diagonal)\n # A covariance matrix of all zeros will be interpreted as "covariance unknown",\n # and to use the data a covariance will have to be assumed or gotten from some\n # other source\n\n\n Header header                        # timestamp is the time the\n                                      # field was measured\n                                      # frame_id is the location and orientation\n                                      # of the field measurement\n\n geometry_msgs/Vector3 magnetic_field # x, y, and z components of the\n                                      # field vector in Tesla\n                                      # If your sensor does not output 3 axes,\n                                      # put NaNs in the components not reported.\n\n float64[9] magnetic_field_covariance # Row major about x, y, z axes\n                                      # 0 is interpreted as variance unknown'
p703
sg21
S'package_modeler'
p704
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/MagneticField.msg'
p705
sbsS'turtle_actionlib/ShapeAction'
p706
g0
(g9
g2
Ntp707
Rp708
(dp709
g13
S'msg'
p710
sg15
S'turtle_actionlib/ShapeAction'
p711
sg17
S'turtle_actionlib'
p712
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nShapeActionGoal action_goal\nShapeActionResult action_result\nShapeActionFeedback action_feedback\n'
p713
sg21
S'package_modeler'
p714
sg23
I0
sg24
S'/opt/ros/melodic/share/turtle_actionlib/msg/ShapeAction.msg'
p715
sbsS'control_msgs/GripperCommandAction'
p716
g0
(g9
g2
Ntp717
Rp718
(dp719
g13
S'msg'
p720
sg15
S'control_msgs/GripperCommandAction'
p721
sg17
S'control_msgs'
p722
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nGripperCommandActionGoal action_goal\nGripperCommandActionResult action_result\nGripperCommandActionFeedback action_feedback\n'
p723
sg21
S'package_modeler'
p724
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/GripperCommandAction.msg'
p725
sbsS'control_msgs/PointHeadResult'
p726
g0
(g9
g2
Ntp727
Rp728
(dp729
g13
S'msg'
p730
sg15
S'control_msgs/PointHeadResult'
p731
sg17
S'control_msgs'
p732
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n'
p733
sg21
S'package_modeler'
p734
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/PointHeadResult.msg'
p735
sbsS'sensor_msgs/RelativeHumidity'
p736
g0
(g9
g2
Ntp737
Rp738
(dp739
g13
S'msg'
p740
sg15
S'sensor_msgs/RelativeHumidity'
p741
sg17
S'sensor_msgs'
p742
sg19
S'\n # Single reading from a relative humidity sensor.  Defines the ratio of partial\n # pressure of water vapor to the saturated vapor pressure at a temperature.\n\n Header header             # timestamp of the measurement\n                           # frame_id is the location of the humidity sensor\n\n float64 relative_humidity # Expression of the relative humidity\n                           # from 0.0 to 1.0.\n                           # 0.0 is no partial pressure of water vapor\n                           # 1.0 represents partial pressure of saturation\n\n float64 variance          # 0 is interpreted as variance unknown'
p743
sg21
S'package_modeler'
p744
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/RelativeHumidity.msg'
p745
sbsS'object_recognition_msgs/ObjectRecognitionActionGoal'
p746
g0
(g9
g2
Ntp747
Rp748
(dp749
g13
S'msg'
p750
sg15
S'object_recognition_msgs/ObjectRecognitionActionGoal'
p751
sg17
S'object_recognition_msgs'
p752
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nObjectRecognitionGoal goal\n'
p753
sg21
S'package_modeler'
p754
sg23
I0
sg24
S'/opt/ros/melodic/share/object_recognition_msgs/msg/ObjectRecognitionActionGoal.msg'
p755
sbsS'rospy_tutorials/HeaderString'
p756
g0
(g9
g2
Ntp757
Rp758
(dp759
g13
S'msg'
p760
sg15
S'rospy_tutorials/HeaderString'
p761
sg17
S'rospy_tutorials'
p762
sg19
S'\nHeader header\nstring data\n'
p763
sg21
S'package_modeler'
p764
sg23
I0
sg24
S'/opt/ros/melodic/share/rospy_tutorials/msg/HeaderString.msg'
p765
sbsS'moveit_msgs/PlanningSceneWorld'
p766
g0
(g9
g2
Ntp767
Rp768
(dp769
g13
S'msg'
p770
sg15
S'moveit_msgs/PlanningSceneWorld'
p771
sg17
S'moveit_msgs'
p772
sg19
S'\n# collision objects\nCollisionObject[] collision_objects\n\n# The octomap that represents additional collision data\noctomap_msgs/OctomapWithPose octomap\n'
p773
sg21
S'package_modeler'
p774
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PlanningSceneWorld.msg'
p775
sbsS'geographic_msgs/BoundingBox'
p776
g0
(g9
g2
Ntp777
Rp778
(dp779
g13
S'msg'
p780
sg15
S'geographic_msgs/BoundingBox'
p781
sg17
S'geographic_msgs'
p782
sg19
S'\n# Geographic map bounding box. \n#\n# The two GeoPoints denote diagonally opposite corners of the box.\n#\n# If min_pt.latitude is NaN, the bounding box is "global", matching\n# any valid latitude, longitude and altitude.\n#\n# If min_pt.altitude is NaN, the bounding box is two-dimensional and\n# matches any altitude within the specified latitude and longitude\n# range.\n\nGeoPoint min_pt         # lowest and most Southwestern corner\nGeoPoint max_pt         # highest and most Northeastern corner\n'
p783
sg21
S'package_modeler'
p784
sg23
I0
sg24
S'/opt/ros/melodic/share/geographic_msgs/msg/BoundingBox.msg'
p785
sbsS'sensor_msgs/LaserEcho'
p786
g0
(g9
g2
Ntp787
Rp788
(dp789
g13
S'msg'
p790
sg15
S'sensor_msgs/LaserEcho'
p791
sg17
S'sensor_msgs'
p792
sg19
S'\n# This message is a submessage of MultiEchoLaserScan and is not intended\n# to be used separately.\n\nfloat32[] echoes  # Multiple values of ranges or intensities.\n                  # Each array represents data from the same angle increment.'
p793
sg21
S'package_modeler'
p794
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/LaserEcho.msg'
p795
sbsS'actionlib_tutorials/AveragingGoal'
p796
g0
(g9
g2
Ntp797
Rp798
(dp799
g13
S'msg'
p800
sg15
S'actionlib_tutorials/AveragingGoal'
p801
sg17
S'actionlib_tutorials'
p802
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n#goal definition\nint32 samples\n'
p803
sg21
S'package_modeler'
p804
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/msg/AveragingGoal.msg'
p805
sbsS'twist_mux_msgs/JoyPriorityGoal'
p806
g0
(g9
g2
Ntp807
Rp808
(dp809
g13
S'msg'
p810
sg15
S'twist_mux_msgs/JoyPriorityGoal'
p811
sg17
S'twist_mux_msgs'
p812
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n'
p813
sg21
S'package_modeler'
p814
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/msg/JoyPriorityGoal.msg'
p815
sbsS'std_msgs/UInt16'
p816
g0
(g9
g2
Ntp817
Rp818
(dp819
g13
S'msg'
p820
sg15
S'std_msgs/UInt16'
p821
sg17
S'std_msgs'
p822
sg19
S'\nuint16 data\n'
p823
sg21
S'package_modeler'
p824
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/UInt16.msg'
p825
sbsS'moveit_msgs/PickupFeedback'
p826
g0
(g9
g2
Ntp827
Rp828
(dp829
g13
S'msg'
p830
sg15
S'moveit_msgs/PickupFeedback'
p831
sg17
S'moveit_msgs'
p832
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n# The internal state that the pickup action currently is in\nstring state\n\n'
p833
sg21
S'package_modeler'
p834
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PickupFeedback.msg'
p835
sbsS'moveit_msgs/MotionSequenceRequest'
p836
g0
(g9
g2
Ntp837
Rp838
(dp839
g13
S'msg'
p840
sg15
S'moveit_msgs/MotionSequenceRequest'
p841
sg17
S'moveit_msgs'
p842
sg19
S'\n# List of motion planning request with a blend_radius for each.\n# In the response of the planner all of these will be executable as one sequence.\nMotionSequenceItem[] items\n'
p843
sg21
S'package_modeler'
p844
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MotionSequenceRequest.msg'
p845
sbsS'dynamic_reconfigure/BoolParameter'
p846
g0
(g9
g2
Ntp847
Rp848
(dp849
g13
S'msg'
p850
sg15
S'dynamic_reconfigure/BoolParameter'
p851
sg17
S'dynamic_reconfigure'
p852
sg19
S'\nstring name\nbool value\n'
p853
sg21
S'package_modeler'
p854
sg23
I0
sg24
S'/opt/ros/melodic/share/dynamic_reconfigure/msg/BoolParameter.msg'
p855
sbsS'actionlib/TwoIntsAction'
p856
g0
(g9
g2
Ntp857
Rp858
(dp859
g13
S'msg'
p860
sg15
S'actionlib/TwoIntsAction'
p861
sg17
S'actionlib'
p862
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nTwoIntsActionGoal action_goal\nTwoIntsActionResult action_result\nTwoIntsActionFeedback action_feedback\n'
p863
sg21
S'package_modeler'
p864
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TwoIntsAction.msg'
p865
sbsS'shape_msgs/Plane'
p866
g0
(g9
g2
Ntp867
Rp868
(dp869
g13
S'msg'
p870
sg15
S'shape_msgs/Plane'
p871
sg17
S'shape_msgs'
p872
sg19
S'\n# Representation of a plane, using the plane equation ax + by + cz + d = 0\n\n# a := coef[0]\n# b := coef[1]\n# c := coef[2]\n# d := coef[3]\n\nfloat64[4] coef\n'
p873
sg21
S'package_modeler'
p874
sg23
I0
sg24
S'/opt/ros/melodic/share/shape_msgs/msg/Plane.msg'
p875
sbsS'control_msgs/JointTrajectoryActionGoal'
p876
g0
(g9
g2
Ntp877
Rp878
(dp879
g13
S'msg'
p880
sg15
S'control_msgs/JointTrajectoryActionGoal'
p881
sg17
S'control_msgs'
p882
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nJointTrajectoryGoal goal\n'
p883
sg21
S'package_modeler'
p884
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/JointTrajectoryActionGoal.msg'
p885
sbsS'move_base_msgs/MoveBaseAction'
p886
g0
(g9
g2
Ntp887
Rp888
(dp889
g13
S'msg'
p890
sg15
S'move_base_msgs/MoveBaseAction'
p891
sg17
S'move_base_msgs'
p892
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nMoveBaseActionGoal action_goal\nMoveBaseActionResult action_result\nMoveBaseActionFeedback action_feedback\n'
p893
sg21
S'package_modeler'
p894
sg23
I0
sg24
S'/opt/ros/melodic/share/move_base_msgs/msg/MoveBaseAction.msg'
p895
sbsS'control_msgs/SingleJointPositionGoal'
p896
g0
(g9
g2
Ntp897
Rp898
(dp899
g13
S'msg'
p900
sg15
S'control_msgs/SingleJointPositionGoal'
p901
sg17
S'control_msgs'
p902
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nfloat64 position\nduration min_duration\nfloat64 max_velocity\n'
p903
sg21
S'package_modeler'
p904
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/SingleJointPositionGoal.msg'
p905
sbsS'diagnostic_msgs/KeyValue'
p906
g0
(g9
g2
Ntp907
Rp908
(dp909
g13
S'msg'
p910
sg15
S'diagnostic_msgs/KeyValue'
p911
sg17
S'diagnostic_msgs'
p912
sg19
S'\nstring key # what to label this value when viewing\nstring value # a value to track over time\n'
p913
sg21
S'package_modeler'
p914
sg23
I0
sg24
S'/opt/ros/melodic/share/diagnostic_msgs/msg/KeyValue.msg'
p915
sbsS'actionlib_tutorials/AveragingFeedback'
p916
g0
(g9
g2
Ntp917
Rp918
(dp919
g13
S'msg'
p920
sg15
S'actionlib_tutorials/AveragingFeedback'
p921
sg17
S'actionlib_tutorials'
p922
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n#feedback\nint32 sample\nfloat32 data\nfloat32 mean\nfloat32 std_dev\n\n'
p923
sg21
S'package_modeler'
p924
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/msg/AveragingFeedback.msg'
p925
sbsS'moveit_msgs/PickupActionGoal'
p926
g0
(g9
g2
Ntp927
Rp928
(dp929
g13
S'msg'
p930
sg15
S'moveit_msgs/PickupActionGoal'
p931
sg17
S'moveit_msgs'
p932
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nPickupGoal goal\n'
p933
sg21
S'package_modeler'
p934
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PickupActionGoal.msg'
p935
sbsS'geometry_msgs/InertiaStamped'
p936
g0
(g9
g2
Ntp937
Rp938
(dp939
g13
S'msg'
p940
sg15
S'geometry_msgs/InertiaStamped'
p941
sg17
S'geometry_msgs'
p942
sg19
S'\nHeader header\nInertia inertia\n'
p943
sg21
S'package_modeler'
p944
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/InertiaStamped.msg'
p945
sbsS'move_base_msgs/MoveBaseFeedback'
p946
g0
(g9
g2
Ntp947
Rp948
(dp949
g13
S'msg'
p950
sg15
S'move_base_msgs/MoveBaseFeedback'
p951
sg17
S'move_base_msgs'
p952
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\ngeometry_msgs/PoseStamped base_position\n\n'
p953
sg21
S'package_modeler'
p954
sg23
I0
sg24
S'/opt/ros/melodic/share/move_base_msgs/msg/MoveBaseFeedback.msg'
p955
sbsS'moveit_msgs/MoveGroupSequenceActionResult'
p956
g0
(g9
g2
Ntp957
Rp958
(dp959
g13
S'msg'
p960
sg15
S'moveit_msgs/MoveGroupSequenceActionResult'
p961
sg17
S'moveit_msgs'
p962
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nMoveGroupSequenceResult result\n'
p963
sg21
S'package_modeler'
p964
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveGroupSequenceActionResult.msg'
p965
sbsS'geometry_msgs/Point'
p966
g0
(g9
g2
Ntp967
Rp968
(dp969
g13
S'msg'
p970
sg15
S'geometry_msgs/Point'
p971
sg17
S'geometry_msgs'
p972
sg19
S'\n# This contains the position of a point in free space\nfloat64 x\nfloat64 y\nfloat64 z\n'
p973
sg21
S'package_modeler'
p974
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/Point.msg'
p975
sbsS'control_msgs/SingleJointPositionAction'
p976
g0
(g9
g2
Ntp977
Rp978
(dp979
g13
S'msg'
p980
sg15
S'control_msgs/SingleJointPositionAction'
p981
sg17
S'control_msgs'
p982
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nSingleJointPositionActionGoal action_goal\nSingleJointPositionActionResult action_result\nSingleJointPositionActionFeedback action_feedback\n'
p983
sg21
S'package_modeler'
p984
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/SingleJointPositionAction.msg'
p985
sbsS'cartographer_ros_msgs/TrajectoryOptions'
p986
g0
(g9
g2
Ntp987
Rp988
(dp989
g13
S'msg'
p990
sg15
S'cartographer_ros_msgs/TrajectoryOptions'
p991
sg17
S'cartographer_ros_msgs'
p992
sg19
S'\n# Copyright 2016 The Cartographer Authors\n#\n# Licensed under the Apache License, Version 2.0 (the "License");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstring tracking_frame\nstring published_frame\nstring odom_frame\nbool provide_odom_frame\nbool use_odometry\nbool use_nav_sat\nbool use_landmarks\nbool publish_frame_projected_to_2d\nint32 num_laser_scans\nint32 num_multi_echo_laser_scans\nint32 num_subdivisions_per_laser_scan\nint32 num_point_clouds\nfloat64 rangefinder_sampling_ratio\nfloat64 odometry_sampling_ratio\nfloat64 fixed_frame_pose_sampling_ratio\nfloat64 imu_sampling_ratio\nfloat64 landmarks_sampling_ratio\n\n# This is a binary-encoded\n# \'cartographer.mapping.proto.TrajectoryBuilderOptions\' proto.\nstring trajectory_builder_options_proto\n'
p993
sg21
S'package_modeler'
p994
sg23
I0
sg24
S'/opt/ros/melodic/share/cartographer_ros_msgs/msg/TrajectoryOptions.msg'
p995
sbsS'control_msgs/GripperCommandFeedback'
p996
g0
(g9
g2
Ntp997
Rp998
(dp999
g13
S'msg'
p1000
sg15
S'control_msgs/GripperCommandFeedback'
p1001
sg17
S'control_msgs'
p1002
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nfloat64 position  # The current gripper gap size (in meters)\nfloat64 effort    # The current effort exerted (in Newtons)\nbool stalled      # True iff the gripper is exerting max effort and not moving\nbool reached_goal # True iff the gripper position has reached the commanded setpoint\n\n'
p1003
sg21
S'package_modeler'
p1004
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/GripperCommandFeedback.msg'
p1005
sbsS'moveit_msgs/MoveGroupActionResult'
p1006
g0
(g9
g2
Ntp1007
Rp1008
(dp1009
g13
S'msg'
p1010
sg15
S'moveit_msgs/MoveGroupActionResult'
p1011
sg17
S'moveit_msgs'
p1012
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nMoveGroupResult result\n'
p1013
sg21
S'package_modeler'
p1014
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveGroupActionResult.msg'
p1015
sbsS'std_msgs/Empty'
p1016
g0
(g9
g2
Ntp1017
Rp1018
(dp1019
g13
S'msg'
p1020
sg15
S'std_msgs/Empty'
p1021
sg17
S'std_msgs'
p1022
sg19
S'\n'
p1023
sg21
S'package_modeler'
p1024
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Empty.msg'
p1025
sbsS'geometry_msgs/Twist'
p1026
g0
(g9
g2
Ntp1027
Rp1028
(dp1029
g13
S'msg'
p1030
sg15
S'geometry_msgs/Twist'
p1031
sg17
S'geometry_msgs'
p1032
sg19
S'\n# This expresses velocity in free space broken into its linear and angular parts.\nVector3  linear\nVector3  angular\n'
p1033
sg21
S'package_modeler'
p1034
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/Twist.msg'
p1035
sbsS'cartographer_ros_msgs/LandmarkList'
p1036
g0
(g9
g2
Ntp1037
Rp1038
(dp1039
g13
S'msg'
p1040
sg15
S'cartographer_ros_msgs/LandmarkList'
p1041
sg17
S'cartographer_ros_msgs'
p1042
sg19
S'\n# Copyright 2018 The Cartographer Authors\n#\n# Licensed under the Apache License, Version 2.0 (the "License");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstd_msgs/Header header\ncartographer_ros_msgs/LandmarkEntry[] landmark\n'
p1043
sg21
S'package_modeler'
p1044
sg23
I0
sg24
S'/opt/ros/melodic/share/cartographer_ros_msgs/msg/LandmarkList.msg'
p1045
sbsS'sensor_msgs/MultiDOFJointState'
p1046
g0
(g9
g2
Ntp1047
Rp1048
(dp1049
g13
S'msg'
p1050
sg15
S'sensor_msgs/MultiDOFJointState'
p1051
sg17
S'sensor_msgs'
p1052
sg19
S'\n# Representation of state for joints with multiple degrees of freedom, \n# following the structure of JointState.\n#\n# It is assumed that a joint in a system corresponds to a transform that gets applied \n# along the kinematic chain. For example, a planar joint (as in URDF) is 3DOF (x, y, yaw)\n# and those 3DOF can be expressed as a transformation matrix, and that transformation\n# matrix can be converted back to (x, y, yaw)\n#\n# Each joint is uniquely identified by its name\n# The header specifies the time at which the joint states were recorded. All the joint states\n# in one message have to be recorded at the same time.\n#\n# This message consists of a multiple arrays, one for each part of the joint state. \n# The goal is to make each of the fields optional. When e.g. your joints have no\n# wrench associated with them, you can leave the wrench array empty. \n#\n# All arrays in this message should have the same size, or be empty.\n# This is the only way to uniquely associate the joint name with the correct\n# states.\n\nHeader header\n\nstring[] joint_names\ngeometry_msgs/Transform[] transforms\ngeometry_msgs/Twist[] twist\ngeometry_msgs/Wrench[] wrench\n'
p1053
sg21
S'package_modeler'
p1054
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/MultiDOFJointState.msg'
p1055
sbsS'nav_msgs/GetMapActionGoal'
p1056
g0
(g9
g2
Ntp1057
Rp1058
(dp1059
g13
S'msg'
p1060
sg15
S'nav_msgs/GetMapActionGoal'
p1061
sg17
S'nav_msgs'
p1062
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nGetMapGoal goal\n'
p1063
sg21
S'package_modeler'
p1064
sg23
I0
sg24
S'/opt/ros/melodic/share/nav_msgs/msg/GetMapActionGoal.msg'
p1065
sbsS'actionlib_msgs/GoalStatusArray'
p1066
g0
(g9
g2
Ntp1067
Rp1068
(dp1069
g13
S'msg'
p1070
sg15
S'actionlib_msgs/GoalStatusArray'
p1071
sg17
S'actionlib_msgs'
p1072
sg19
S'\n# Stores the statuses for goals that are currently being tracked\n# by an action server\nHeader header\nGoalStatus[] status_list\n\n'
p1073
sg21
S'package_modeler'
p1074
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_msgs/msg/GoalStatusArray.msg'
p1075
sbsS'moveit_msgs/VisibilityConstraint'
p1076
g0
(g9
g2
Ntp1077
Rp1078
(dp1079
g13
S'msg'
p1080
sg15
S'moveit_msgs/VisibilityConstraint'
p1081
sg17
S'moveit_msgs'
p1082
sg19
S'\n# The constraint is useful to maintain visibility to a disc (the target) in a particular frame.\n# This disc forms the base of a visibiliy cone whose tip is at the origin of the sensor.\n# Maintaining visibility is done by ensuring the robot does not obstruct the visibility cone.\n# Note:\n# This constraint does NOT enforce minimum or maximum distances between the sensor\n# and the target, nor does it enforce the target to be in the field of view of\n# the sensor. A PositionConstraint can (and probably should) be used for such purposes.\n\n# The radius of the disc that should be maintained visible \nfloat64 target_radius\n\n# The pose of the disc; as the robot moves, the pose of the disc may change as well\n# This can be in the frame of a particular robot link, for example\ngeometry_msgs/PoseStamped target_pose\n\n# From the sensor origin towards the target, the disc forms a visibility cone\n# This cone is approximated using many sides. For example, when using 4 sides, \n# that in fact makes the visibility region be a pyramid.\n# This value should always be 3 or more.\nint32 cone_sides\n\n# The pose in which visibility is to be maintained.\n# The frame id should represent the robot link to which the sensor is attached.\n# It is assumed the sensor can look directly at the target, in any direction.\n# This assumption is usually not true, but additional PositionConstraints\n# can resolve this issue.\ngeometry_msgs/PoseStamped sensor_pose\n\n# Even though the disc is maintained visible, the visibility cone can be very small\n# because of the orientation of the disc with respect to the sensor. It is possible\n# for example to view the disk almost from a side, in which case the visibility cone \n# can end up having close to 0 volume. The view angle is defined to be the angle between\n# the normal to the visibility disc and the direction vector from the sensor origin.\n# The value below represents the minimum desired view angle. For a perfect view,\n# this value will be 0 (the two vectors are exact opposites). For a completely obstructed view\n# this value will be Pi/2 (the vectors are perpendicular). This value defined below \n# is the maximum view angle to be maintained. This should be a value in the open interval\n# (0, Pi/2). If 0 is set, the view angle is NOT enforced.\nfloat64 max_view_angle\n\n# This angle is used similarly to max_view_angle but limits the maximum angle\n# between the sensor origin direction vector and the axis that connects the\n# sensor origin to the target frame origin. The value is again in the range (0, Pi/2)\n# and is NOT enforced if set to 0.\nfloat64 max_range_angle\n\n# The axis that is assumed to indicate the direction of view for the sensor\n# X = 2, Y = 1, Z = 0\nuint8 SENSOR_Z=0\nuint8 SENSOR_Y=1\nuint8 SENSOR_X=2\nuint8 sensor_view_direction\n\n# A weighting factor for this constraint (denotes relative importance to other constraints. Closer to zero means less important)\nfloat64 weight\n'
p1083
sg21
S'package_modeler'
p1084
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/VisibilityConstraint.msg'
p1085
sbsS'moveit_msgs/PositionIKRequest'
p1086
g0
(g9
g2
Ntp1087
Rp1088
(dp1089
g13
S'msg'
p1090
sg15
S'moveit_msgs/PositionIKRequest'
p1091
sg17
S'moveit_msgs'
p1092
sg19
S'\n# A Position IK request message\n\n# The name of the group which will be used to compute IK\n# e.g. "right_arm", or "arms" - see IK specification for multiple-groups below\n# Information from the SRDF will be used to automatically determine which link \n# to solve IK for, unless ik_link_name is also specified\nstring group_name\n\n# A RobotState consisting of hint/seed positions for the IK computation and positions \n# for all the other joints in the robot. Additional state information provided here is \n# used to specify starting positions for other joints/links on the robot.  \n# This state MUST contain state for all joints to be used by the IK solver\n# to compute IK. The list of joints that the IK solver deals with can be \n# found using the SRDF for the corresponding group\nmoveit_msgs/RobotState robot_state\n\n# A set of constraints that the IK must obey; by default, this set of constraints is empty\nConstraints constraints\n\n# Find an IK solution that avoids collisions. By default, this is false\nbool avoid_collisions\n\n# (OPTIONAL) The name of the link for which we are computing IK\n# If not specified, the link name will be inferred from a combination \n# of the group name and the SRDF. If any values are specified for ik_link_names,\n# this value is ignored\nstring ik_link_name\n\n# The stamped pose of the link, when the IK solver computes the joint values\n# for all the joints in a group. This value is ignored if pose_stamped_vector\n# has any elements specified.\ngeometry_msgs/PoseStamped pose_stamped\n\n# Multi-group parameters\n\n# (OPTIONAL) The names of the links for which we are computing IK\n# If not specified, the link name will be inferred from a combination \n# of the group name and the SRDF\nstring[] ik_link_names\n\n# (OPTIONAL) The (stamped) poses of the links we are computing IK for (when a group has more than one end effector)\n# e.g. The "arms" group might consist of both the "right_arm" and the "left_arm"\n# The order of the groups referred to is the same as the order setup in the SRDF\ngeometry_msgs/PoseStamped[] pose_stamped_vector\n\n# Maximum allowed time for IK calculation\nduration timeout\n\n# Maximum number of IK attempts (if using random seeds; leave as 0 for the default value specified on the param server to be used)\nint32 attempts\n\n'
p1093
sg21
S'package_modeler'
p1094
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PositionIKRequest.msg'
p1095
sbsS'std_msgs/Int8'
p1096
g0
(g9
g2
Ntp1097
Rp1098
(dp1099
g13
S'msg'
p1100
sg15
S'std_msgs/Int8'
p1101
sg17
S'std_msgs'
p1102
sg19
S'\nint8 data\n'
p1103
sg21
S'package_modeler'
p1104
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Int8.msg'
p1105
sbsS'nav_msgs/GetMapAction'
p1106
g0
(g9
g2
Ntp1107
Rp1108
(dp1109
g13
S'msg'
p1110
sg15
S'nav_msgs/GetMapAction'
p1111
sg17
S'nav_msgs'
p1112
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nGetMapActionGoal action_goal\nGetMapActionResult action_result\nGetMapActionFeedback action_feedback\n'
p1113
sg21
S'package_modeler'
p1114
sg23
I0
sg24
S'/opt/ros/melodic/share/nav_msgs/msg/GetMapAction.msg'
p1115
sbsS'twist_mux_msgs/JoyTurboActionGoal'
p1116
g0
(g9
g2
Ntp1117
Rp1118
(dp1119
g13
S'msg'
p1120
sg15
S'twist_mux_msgs/JoyTurboActionGoal'
p1121
sg17
S'twist_mux_msgs'
p1122
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nJoyTurboGoal goal\n'
p1123
sg21
S'package_modeler'
p1124
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/msg/JoyTurboActionGoal.msg'
p1125
sbsS'moveit_msgs/LinkScale'
p1126
g0
(g9
g2
Ntp1127
Rp1128
(dp1129
g13
S'msg'
p1130
sg15
S'moveit_msgs/LinkScale'
p1131
sg17
S'moveit_msgs'
p1132
sg19
S'\n#name for the link\nstring link_name\n\n# scaling to apply to the link\nfloat64 scale\n'
p1133
sg21
S'package_modeler'
p1134
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/LinkScale.msg'
p1135
sbsS'trajectory_msgs/JointTrajectoryPoint'
p1136
g0
(g9
g2
Ntp1137
Rp1138
(dp1139
g13
S'msg'
p1140
sg15
S'trajectory_msgs/JointTrajectoryPoint'
p1141
sg17
S'trajectory_msgs'
p1142
sg19
S'\n# Each trajectory point specifies either positions[, velocities[, accelerations]]\n# or positions[, effort] for the trajectory to be executed.\n# All specified values are in the same order as the joint names in JointTrajectory.msg\n\nfloat64[] positions\nfloat64[] velocities\nfloat64[] accelerations\nfloat64[] effort\nduration time_from_start\n'
p1143
sg21
S'package_modeler'
p1144
sg23
I0
sg24
S'/opt/ros/melodic/share/trajectory_msgs/msg/JointTrajectoryPoint.msg'
p1145
sbsS'geometry_msgs/AccelWithCovariance'
p1146
g0
(g9
g2
Ntp1147
Rp1148
(dp1149
g13
S'msg'
p1150
sg15
S'geometry_msgs/AccelWithCovariance'
p1151
sg17
S'geometry_msgs'
p1152
sg19
S'\n# This expresses acceleration in free space with uncertainty.\n\nAccel accel\n\n# Row-major representation of the 6x6 covariance matrix\n# The orientation parameters use a fixed-axis representation.\n# In order, the parameters are:\n# (x, y, z, rotation about X axis, rotation about Y axis, rotation about Z axis)\nfloat64[36] covariance\n'
p1153
sg21
S'package_modeler'
p1154
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/AccelWithCovariance.msg'
p1155
sbsS'geographic_msgs/GeoPointStamped'
p1156
g0
(g9
g2
Ntp1157
Rp1158
(dp1159
g13
S'msg'
p1160
sg15
S'geographic_msgs/GeoPointStamped'
p1161
sg17
S'geographic_msgs'
p1162
sg19
S'\nHeader header\ngeographic_msgs/GeoPoint position\n'
p1163
sg21
S'package_modeler'
p1164
sg23
I0
sg24
S'/opt/ros/melodic/share/geographic_msgs/msg/GeoPointStamped.msg'
p1165
sbsS'moveit_msgs/ExecuteTrajectoryFeedback'
p1166
g0
(g9
g2
Ntp1167
Rp1168
(dp1169
g13
S'msg'
p1170
sg15
S'moveit_msgs/ExecuteTrajectoryFeedback'
p1171
sg17
S'moveit_msgs'
p1172
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n# The internal state that the move group action currently is in\nstring state\n\n'
p1173
sg21
S'package_modeler'
p1174
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/ExecuteTrajectoryFeedback.msg'
p1175
sbsS'moveit_msgs/Grasp'
p1176
g0
(g9
g2
Ntp1177
Rp1178
(dp1179
g13
S'msg'
p1180
sg15
S'moveit_msgs/Grasp'
p1181
sg17
S'moveit_msgs'
p1182
sg19
S'\n# This message contains a description of a grasp that would be used\n# with a particular end-effector to grasp an object, including how to\n# approach it, grip it, etc.  This message does not contain any\n# information about a "grasp point" (a position ON the object).\n# Whatever generates this message should have already combined\n# information about grasp points with information about the geometry\n# of the end-effector to compute the grasp_pose in this message.\n\n# A name for this grasp\nstring id\n\n# The internal posture of the hand for the pre-grasp\n# only positions are used\ntrajectory_msgs/JointTrajectory pre_grasp_posture\n\n# The internal posture of the hand for the grasp\n# positions and efforts are used\ntrajectory_msgs/JointTrajectory grasp_posture\n\n# The position of the end-effector for the grasp.  This is the pose of\n# the "parent_link" of the end-effector, not actually the pose of any\n# link *in* the end-effector.  Typically this would be the pose of the\n# most distal wrist link before the hand (end-effector) links began.\ngeometry_msgs/PoseStamped grasp_pose\n\n# The estimated probability of success for this grasp, or some other\n# measure of how "good" it is.\nfloat64 grasp_quality\n\n# The approach direction to take before picking an object\nGripperTranslation pre_grasp_approach\n\n# The retreat direction to take after a grasp has been completed (object is attached)\nGripperTranslation post_grasp_retreat\n\n# The retreat motion to perform when releasing the object; this information\n# is not necessary for the grasp itself, but when releasing the object,\n# the information will be necessary. The grasp used to perform a pickup\n# is returned as part of the result, so this information is available for \n# later use.\nGripperTranslation post_place_retreat\n\n# the maximum contact force to use while grasping (<=0 to disable)\nfloat32 max_contact_force\n\n# an optional list of obstacles that we have semantic information about\n# and that can be touched/pushed/moved in the course of grasping\nstring[] allowed_touch_objects\n'
p1183
sg21
S'package_modeler'
p1184
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/Grasp.msg'
p1185
sbsS'moveit_msgs/ContactInformation'
p1186
g0
(g9
g2
Ntp1187
Rp1188
(dp1189
g13
S'msg'
p1190
sg15
S'moveit_msgs/ContactInformation'
p1191
sg17
S'moveit_msgs'
p1192
sg19
S'\n# Standard ROS header contains information \n# about the frame in which this \n# contact is specified\nHeader header\n\n# Position of the contact point\ngeometry_msgs/Point position\n\n# Normal corresponding to the contact point\ngeometry_msgs/Vector3 normal \n\n# Depth of contact point\nfloat64 depth\n\n# Name of the first body that is in contact\n# This could be a link or a namespace that represents a body\nstring contact_body_1\nuint32 body_type_1\n\n# Name of the second body that is in contact\n# This could be a link or a namespace that represents a body\nstring contact_body_2\nuint32 body_type_2\n\nuint32 ROBOT_LINK=0\nuint32 WORLD_OBJECT=1\nuint32 ROBOT_ATTACHED=2\n'
p1193
sg21
S'package_modeler'
p1194
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/ContactInformation.msg'
p1195
sbsS'object_recognition_msgs/TableArray'
p1196
g0
(g9
g2
Ntp1197
Rp1198
(dp1199
g13
S'msg'
p1200
sg15
S'object_recognition_msgs/TableArray'
p1201
sg17
S'object_recognition_msgs'
p1202
sg19
S'\nHeader header\n\n# Just an array of tables\nobject_recognition_msgs/Table[] tables\n'
p1203
sg21
S'package_modeler'
p1204
sg23
I0
sg24
S'/opt/ros/melodic/share/object_recognition_msgs/msg/TableArray.msg'
p1205
sbsS'sensor_msgs/Imu'
p1206
g0
(g9
g2
Ntp1207
Rp1208
(dp1209
g13
S'msg'
p1210
sg15
S'sensor_msgs/Imu'
p1211
sg17
S'sensor_msgs'
p1212
sg19
S'\n# This is a message to hold data from an IMU (Inertial Measurement Unit)\n#\n# Accelerations should be in m/s^2 (not in g\'s), and rotational velocity should be in rad/sec\n#\n# If the covariance of the measurement is known, it should be filled in (if all you know is the \n# variance of each measurement, e.g. from the datasheet, just put those along the diagonal)\n# A covariance matrix of all zeros will be interpreted as "covariance unknown", and to use the\n# data a covariance will have to be assumed or gotten from some other source\n#\n# If you have no estimate for one of the data elements (e.g. your IMU doesn\'t produce an orientation \n# estimate), please set element 0 of the associated covariance matrix to -1\n# If you are interpreting this message, please check for a value of -1 in the first element of each \n# covariance matrix, and disregard the associated estimate.\n\nHeader header\n\ngeometry_msgs/Quaternion orientation\nfloat64[9] orientation_covariance # Row major about x, y, z axes\n\ngeometry_msgs/Vector3 angular_velocity\nfloat64[9] angular_velocity_covariance # Row major about x, y, z axes\n\ngeometry_msgs/Vector3 linear_acceleration\nfloat64[9] linear_acceleration_covariance # Row major x, y z \n'
p1213
sg21
S'package_modeler'
p1214
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/Imu.msg'
p1215
sbsS'actionlib/TwoIntsActionFeedback'
p1216
g0
(g9
g2
Ntp1217
Rp1218
(dp1219
g13
S'msg'
p1220
sg15
S'actionlib/TwoIntsActionFeedback'
p1221
sg17
S'actionlib'
p1222
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nTwoIntsFeedback feedback\n'
p1223
sg21
S'package_modeler'
p1224
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TwoIntsActionFeedback.msg'
p1225
sbsS'moveit_msgs/JointConstraint'
p1226
g0
(g9
g2
Ntp1227
Rp1228
(dp1229
g13
S'msg'
p1230
sg15
S'moveit_msgs/JointConstraint'
p1231
sg17
S'moveit_msgs'
p1232
sg19
S'\n# Constrain the position of a joint to be within a certain bound\nstring joint_name\n\n# the bound to be achieved is [position - tolerance_below, position + tolerance_above]\nfloat64 position\nfloat64 tolerance_above\nfloat64 tolerance_below\n\n# A weighting factor for this constraint (denotes relative importance to other constraints. Closer to zero means less important)\nfloat64 weight'
p1233
sg21
S'package_modeler'
p1234
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/JointConstraint.msg'
p1235
sbsS'std_msgs/MultiArrayDimension'
p1236
g0
(g9
g2
Ntp1237
Rp1238
(dp1239
g13
S'msg'
p1240
sg15
S'std_msgs/MultiArrayDimension'
p1241
sg17
S'std_msgs'
p1242
sg19
S'\nstring label   # label of given dimension\nuint32 size    # size of given dimension (in type units)\nuint32 stride  # stride of given dimension'
p1243
sg21
S'package_modeler'
p1244
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/MultiArrayDimension.msg'
p1245
sbsS'control_msgs/JointTrajectoryActionFeedback'
p1246
g0
(g9
g2
Ntp1247
Rp1248
(dp1249
g13
S'msg'
p1250
sg15
S'control_msgs/JointTrajectoryActionFeedback'
p1251
sg17
S'control_msgs'
p1252
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nJointTrajectoryFeedback feedback\n'
p1253
sg21
S'package_modeler'
p1254
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/JointTrajectoryActionFeedback.msg'
p1255
sbsS'nav_msgs/OccupancyGrid'
p1256
g0
(g9
g2
Ntp1257
Rp1258
(dp1259
g13
S'msg'
p1260
sg15
S'nav_msgs/OccupancyGrid'
p1261
sg17
S'nav_msgs'
p1262
sg19
S'\n# This represents a 2-D grid map, in which each cell represents the probability of\n# occupancy.\n\nHeader header \n\n#MetaData for the map\nMapMetaData info\n\n# The map data, in row-major order, starting with (0,0).  Occupancy\n# probabilities are in the range [0,100].  Unknown is -1.\nint8[] data\n'
p1263
sg21
S'package_modeler'
p1264
sg23
I0
sg24
S'/opt/ros/melodic/share/nav_msgs/msg/OccupancyGrid.msg'
p1265
sbsS'object_recognition_msgs/Table'
p1266
g0
(g9
g2
Ntp1267
Rp1268
(dp1269
g13
S'msg'
p1270
sg15
S'object_recognition_msgs/Table'
p1271
sg17
S'object_recognition_msgs'
p1272
sg19
S"\n# Informs that a planar table has been detected at a given location\n\nHeader header\n\n# The pose gives you the transform that take you to the coordinate system\n# of the table, with the origin somewhere in the table plane and the \n# z axis normal to the plane\ngeometry_msgs/Pose pose\n\n# There is no guarantee that the table does NOT extend further than the\n# convex hull; this is just as far as we've observed it.\n# The origin of the table coordinate system is inside the convex hull\n\n# Set of points forming the convex hull of the table\ngeometry_msgs/Point[] convex_hull\n"
p1273
sg21
S'package_modeler'
p1274
sg23
I0
sg24
S'/opt/ros/melodic/share/object_recognition_msgs/msg/Table.msg'
p1275
sbsS'theora_image_transport/Packet'
p1276
g0
(g9
g2
Ntp1277
Rp1278
(dp1279
g13
S'msg'
p1280
sg15
S'theora_image_transport/Packet'
p1281
sg17
S'theora_image_transport'
p1282
sg19
S'\n# ROS message adaptation of the ogg_packet struct from libogg,\n# see http://www.xiph.org/ogg/doc/libogg/ogg_packet.html.\n\nHeader header     # Original sensor_msgs/Image header\nuint8[] data      # Raw Theora packet data (combines packet and bytes fields from ogg_packet)\nint32 b_o_s       # Flag indicating whether this packet begins a logical bitstream\nint32 e_o_s       # Flag indicating whether this packet ends a bitstream\nint64 granulepos  # A number indicating the position of this packet in the decoded data\nint64 packetno    # Sequential number of this packet in the ogg bitstream\n'
p1283
sg21
S'package_modeler'
p1284
sg23
I0
sg24
S'/opt/ros/melodic/share/theora_image_transport/msg/Packet.msg'
p1285
sbsS'sensor_msgs/Image'
p1286
g0
(g9
g2
Ntp1287
Rp1288
(dp1289
g13
S'msg'
p1290
sg15
S'sensor_msgs/Image'
p1291
sg17
S'sensor_msgs'
p1292
sg19
S'\n# This message contains an uncompressed image\n# (0, 0) is at top-left corner of image\n#\n\nHeader header        # Header timestamp should be acquisition time of image\n                     # Header frame_id should be optical frame of camera\n                     # origin of frame should be optical center of camera\n                     # +x should point to the right in the image\n                     # +y should point down in the image\n                     # +z should point into to plane of the image\n                     # If the frame_id here and the frame_id of the CameraInfo\n                     # message associated with the image conflict\n                     # the behavior is undefined\n\nuint32 height         # image height, that is, number of rows\nuint32 width          # image width, that is, number of columns\n\n# The legal values for encoding are in file src/image_encodings.cpp\n# If you want to standardize a new string format, join\n# ros-users@lists.sourceforge.net and send an email proposing a new encoding.\n\nstring encoding       # Encoding of pixels -- channel meaning, ordering, size\n                      # taken from the list of strings in include/sensor_msgs/image_encodings.h\n\nuint8 is_bigendian    # is this data bigendian?\nuint32 step           # Full row length in bytes\nuint8[] data          # actual matrix data, size is (step * rows)\n'
p1293
sg21
S'package_modeler'
p1294
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/Image.msg'
p1295
sbsS'sensor_msgs/Temperature'
p1296
g0
(g9
g2
Ntp1297
Rp1298
(dp1299
g13
S'msg'
p1300
sg15
S'sensor_msgs/Temperature'
p1301
sg17
S'sensor_msgs'
p1302
sg19
S'\n # Single temperature reading.\n\n Header header           # timestamp is the time the temperature was measured\n                         # frame_id is the location of the temperature reading\n\n float64 temperature     # Measurement of the Temperature in Degrees Celsius\n\n float64 variance        # 0 is interpreted as variance unknown'
p1303
sg21
S'package_modeler'
p1304
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/Temperature.msg'
p1305
sbsS'geometry_msgs/Wrench'
p1306
g0
(g9
g2
Ntp1307
Rp1308
(dp1309
g13
S'msg'
p1310
sg15
S'geometry_msgs/Wrench'
p1311
sg17
S'geometry_msgs'
p1312
sg19
S'\n# This represents force in free space, separated into\n# its linear and angular parts.\nVector3  force\nVector3  torque\n'
p1313
sg21
S'package_modeler'
p1314
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/Wrench.msg'
p1315
sbsS'std_msgs/ColorRGBA'
p1316
g0
(g9
g2
Ntp1317
Rp1318
(dp1319
g13
S'msg'
p1320
sg15
S'std_msgs/ColorRGBA'
p1321
sg17
S'std_msgs'
p1322
sg19
S'\nfloat32 r\nfloat32 g\nfloat32 b\nfloat32 a\n'
p1323
sg21
S'package_modeler'
p1324
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/ColorRGBA.msg'
p1325
sbsS'moveit_msgs/PlannerParams'
p1326
g0
(g9
g2
Ntp1327
Rp1328
(dp1329
g13
S'msg'
p1330
sg15
S'moveit_msgs/PlannerParams'
p1331
sg17
S'moveit_msgs'
p1332
sg19
S'\n# parameter names (same size as values)\nstring[] keys\n\n# parameter values (same size as keys)\nstring[] values\n\n# parameter description (can be empty)\nstring[] descriptions\n'
p1333
sg21
S'package_modeler'
p1334
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PlannerParams.msg'
p1335
sbsS'moveit_msgs/PlanningOptions'
p1336
g0
(g9
g2
Ntp1337
Rp1338
(dp1339
g13
S'msg'
p1340
sg15
S'moveit_msgs/PlanningOptions'
p1341
sg17
S'moveit_msgs'
p1342
sg19
S'\n\n# The diff to consider for the planning scene (optional)\nPlanningScene planning_scene_diff\n\n# If this flag is set to true, the action\n# returns an executable plan in the response but does not attempt execution  \nbool plan_only\n\n# If this flag is set to true, the action of planning &\n# executing is allowed to look around  (move sensors) if\n# it seems that not enough information is available about\n# the environment\nbool look_around\n\n# If this value is positive, the action of planning & executing\n# is allowed to look around for a maximum number of attempts;\n# If the value is left as 0, the default value is used, as set\n# with dynamic_reconfigure\nint32 look_around_attempts\n\n# If set and if look_around is true, this value is used as\n# the maximum cost allowed for a path to be considered executable.\n# If the cost of a path is higher than this value, more sensing or \n# a new plan needed. If left as 0.0 but look_around is true, then \n# the default value set via dynamic_reconfigure is used\nfloat64 max_safe_execution_cost\n\n# If the plan becomes invalidated during execution, it is possible to have\n# that plan recomputed and execution restarted. This flag enables this\n# functionality \nbool replan\n\n# The maximum number of replanning attempts \nint32 replan_attempts\n\n# The amount of time to wait in between replanning attempts (in seconds)\nfloat64 replan_delay\n'
p1343
sg21
S'package_modeler'
p1344
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PlanningOptions.msg'
p1345
sbsS'std_msgs/Char'
p1346
g0
(g9
g2
Ntp1347
Rp1348
(dp1349
g13
S'msg'
p1350
sg15
S'std_msgs/Char'
p1351
sg17
S'std_msgs'
p1352
sg19
S'\nchar data'
p1353
sg21
S'package_modeler'
p1354
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Char.msg'
p1355
sbsS'std_msgs/UInt32'
p1356
g0
(g9
g2
Ntp1357
Rp1358
(dp1359
g13
S'msg'
p1360
sg15
S'std_msgs/UInt32'
p1361
sg17
S'std_msgs'
p1362
sg19
S'\nuint32 data'
p1363
sg21
S'package_modeler'
p1364
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/UInt32.msg'
p1365
sbsS'std_msgs/Int16MultiArray'
p1366
g0
(g9
g2
Ntp1367
Rp1368
(dp1369
g13
S'msg'
p1370
sg15
S'std_msgs/Int16MultiArray'
p1371
sg17
S'std_msgs'
p1372
sg19
S'\n# Please look at the MultiArrayLayout message definition for\n# documentation on all multiarrays.\n\nMultiArrayLayout  layout        # specification of data layout\nint16[]           data          # array of data\n\n'
p1373
sg21
S'package_modeler'
p1374
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Int16MultiArray.msg'
p1375
sbsS'tf2_msgs/LookupTransformGoal'
p1376
g0
(g9
g2
Ntp1377
Rp1378
(dp1379
g13
S'msg'
p1380
sg15
S'tf2_msgs/LookupTransformGoal'
p1381
sg17
S'tf2_msgs'
p1382
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n#Simple API\nstring target_frame\nstring source_frame\ntime source_time\nduration timeout\n\n#Advanced API\ntime target_time\nstring fixed_frame\n\n#Whether or not to use the advanced API\nbool advanced\n\n'
p1383
sg21
S'package_modeler'
p1384
sg23
I0
sg24
S'/opt/ros/melodic/share/tf2_msgs/msg/LookupTransformGoal.msg'
p1385
sbsS'control_msgs/PointHeadFeedback'
p1386
g0
(g9
g2
Ntp1387
Rp1388
(dp1389
g13
S'msg'
p1390
sg15
S'control_msgs/PointHeadFeedback'
p1391
sg17
S'control_msgs'
p1392
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nfloat64 pointing_angle_error\n\n'
p1393
sg21
S'package_modeler'
p1394
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/PointHeadFeedback.msg'
p1395
sbsS'cartographer_ros_msgs/SensorTopics'
p1396
g0
(g9
g2
Ntp1397
Rp1398
(dp1399
g13
S'msg'
p1400
sg15
S'cartographer_ros_msgs/SensorTopics'
p1401
sg17
S'cartographer_ros_msgs'
p1402
sg19
S'\n# Copyright 2016 The Cartographer Authors\n#\n# Licensed under the Apache License, Version 2.0 (the "License");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstring laser_scan_topic\nstring multi_echo_laser_scan_topic\nstring point_cloud2_topic\nstring imu_topic\nstring odometry_topic\nstring nav_sat_fix_topic\nstring landmark_topic\n'
p1403
sg21
S'package_modeler'
p1404
sg23
I0
sg24
S'/opt/ros/melodic/share/cartographer_ros_msgs/msg/SensorTopics.msg'
p1405
sbsS'geometry_msgs/AccelStamped'
p1406
g0
(g9
g2
Ntp1407
Rp1408
(dp1409
g13
S'msg'
p1410
sg15
S'geometry_msgs/AccelStamped'
p1411
sg17
S'geometry_msgs'
p1412
sg19
S'\n# An accel with reference coordinate frame and timestamp\nHeader header\nAccel accel\n'
p1413
sg21
S'package_modeler'
p1414
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/AccelStamped.msg'
p1415
sbsS'moveit_msgs/ExecuteTrajectoryResult'
p1416
g0
(g9
g2
Ntp1417
Rp1418
(dp1419
g13
S'msg'
p1420
sg15
S'moveit_msgs/ExecuteTrajectoryResult'
p1421
sg17
S'moveit_msgs'
p1422
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n# Error code - encodes the overall reason for failure\nMoveItErrorCodes error_code\n\n'
p1423
sg21
S'package_modeler'
p1424
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/ExecuteTrajectoryResult.msg'
p1425
sbsS'std_msgs/Float32MultiArray'
p1426
g0
(g9
g2
Ntp1427
Rp1428
(dp1429
g13
S'msg'
p1430
sg15
S'std_msgs/Float32MultiArray'
p1431
sg17
S'std_msgs'
p1432
sg19
S'\n# Please look at the MultiArrayLayout message definition for\n# documentation on all multiarrays.\n\nMultiArrayLayout  layout        # specification of data layout\nfloat32[]         data          # array of data\n\n'
p1433
sg21
S'package_modeler'
p1434
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Float32MultiArray.msg'
p1435
sbsS'tf2_msgs/TFMessage'
p1436
g0
(g9
g2
Ntp1437
Rp1438
(dp1439
g13
S'msg'
p1440
sg15
S'tf2_msgs/TFMessage'
p1441
sg17
S'tf2_msgs'
p1442
sg19
S'\ngeometry_msgs/TransformStamped[] transforms\n'
p1443
sg21
S'package_modeler'
p1444
sg23
I0
sg24
S'/opt/ros/melodic/share/tf2_msgs/msg/TFMessage.msg'
p1445
sbsS'geographic_msgs/GeoPath'
p1446
g0
(g9
g2
Ntp1447
Rp1448
(dp1449
g13
S'msg'
p1450
sg15
S'geographic_msgs/GeoPath'
p1451
sg17
S'geographic_msgs'
p1452
sg19
S'\nstd_msgs/Header header\ngeographic_msgs/GeoPoseStamped[] poses\n'
p1453
sg21
S'package_modeler'
p1454
sg23
I0
sg24
S'/opt/ros/melodic/share/geographic_msgs/msg/GeoPath.msg'
p1455
sbsS'object_recognition_msgs/ObjectRecognitionGoal'
p1456
g0
(g9
g2
Ntp1457
Rp1458
(dp1459
g13
S'msg'
p1460
sg15
S'object_recognition_msgs/ObjectRecognitionGoal'
p1461
sg17
S'object_recognition_msgs'
p1462
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n# Optional ROI to use for the object detection\nbool use_roi\nfloat32[] filter_limits\n'
p1463
sg21
S'package_modeler'
p1464
sg23
I0
sg24
S'/opt/ros/melodic/share/object_recognition_msgs/msg/ObjectRecognitionGoal.msg'
p1465
sbsS'moveit_msgs/MotionSequenceResponse'
p1466
g0
(g9
g2
Ntp1467
Rp1468
(dp1469
g13
S'msg'
p1470
sg15
S'moveit_msgs/MotionSequenceResponse'
p1471
sg17
S'moveit_msgs'
p1472
sg19
S'\n# An error code reflecting what went wrong\nMoveItErrorCodes error_code\n\n# The full starting state of the robot at the start of the sequence\nRobotState sequence_start\n\n# The trajectories that the planner produced for execution\nRobotTrajectory[] planned_trajectories\n\n# The amount of time it took to complete the motion plan\nfloat64 planning_time\n'
p1473
sg21
S'package_modeler'
p1474
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MotionSequenceResponse.msg'
p1475
sbsS'moveit_msgs/Constraints'
p1476
g0
(g9
g2
Ntp1477
Rp1478
(dp1479
g13
S'msg'
p1480
sg15
S'moveit_msgs/Constraints'
p1481
sg17
S'moveit_msgs'
p1482
sg19
S'\n# This message contains a list of motion planning constraints.\n# All constraints must be satisfied for a goal to be considered valid\n\nstring name\n\nJointConstraint[] joint_constraints\n\nPositionConstraint[] position_constraints\n\nOrientationConstraint[] orientation_constraints\n\nVisibilityConstraint[] visibility_constraints\n'
p1483
sg21
S'package_modeler'
p1484
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/Constraints.msg'
p1485
sbsS'moveit_msgs/PlaceActionFeedback'
p1486
g0
(g9
g2
Ntp1487
Rp1488
(dp1489
g13
S'msg'
p1490
sg15
S'moveit_msgs/PlaceActionFeedback'
p1491
sg17
S'moveit_msgs'
p1492
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nPlaceFeedback feedback\n'
p1493
sg21
S'package_modeler'
p1494
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PlaceActionFeedback.msg'
p1495
sbsS'tf/tfMessage'
p1496
g0
(g9
g2
Ntp1497
Rp1498
(dp1499
g13
S'msg'
p1500
sg15
S'tf/tfMessage'
p1501
sg17
S'tf'
p1502
sg19
S'\ngeometry_msgs/TransformStamped[] transforms\n'
p1503
sg21
S'package_modeler'
p1504
sg23
I0
sg24
S'/opt/ros/melodic/share/tf/msg/tfMessage.msg'
p1505
sbsS'controller_manager_msgs/ControllersStatistics'
p1506
g0
(g9
g2
Ntp1507
Rp1508
(dp1509
g13
S'msg'
p1510
sg15
S'controller_manager_msgs/ControllersStatistics'
p1511
sg17
S'controller_manager_msgs'
p1512
sg19
S'\nstd_msgs/Header header\ncontroller_manager_msgs/ControllerStatistics[] controller\n'
p1513
sg21
S'package_modeler'
p1514
sg23
I0
sg24
S'/opt/ros/melodic/share/controller_manager_msgs/msg/ControllersStatistics.msg'
p1515
sbsS'nmea_msgs/Gpgga'
p1516
g0
(g9
g2
Ntp1517
Rp1518
(dp1519
g13
S'msg'
p1520
sg15
S'nmea_msgs/Gpgga'
p1521
sg17
S'nmea_msgs'
p1522
sg19
S'\n# Message from GPGGA NMEA String\nHeader header\n\nstring message_id\n\n# UTC seconds from midnight\nfloat64 utc_seconds\n\nfloat64 lat\nfloat64 lon\n\nstring lat_dir\nstring lon_dir\n\nuint32 gps_qual\n\nuint32 num_sats\nfloat32 hdop \nfloat32 alt\nstring altitude_units\n\nfloat32 undulation\nstring undulation_units\nuint32 diff_age\nstring station_id\n'
p1523
sg21
S'package_modeler'
p1524
sg23
I0
sg24
S'/opt/ros/melodic/share/nmea_msgs/msg/Gpgga.msg'
p1525
sbsS'geometry_msgs/PoseArray'
p1526
g0
(g9
g2
Ntp1527
Rp1528
(dp1529
g13
S'msg'
p1530
sg15
S'geometry_msgs/PoseArray'
p1531
sg17
S'geometry_msgs'
p1532
sg19
S'\n# An array of poses with a header for global reference.\n\nHeader header\n\nPose[] poses\n'
p1533
sg21
S'package_modeler'
p1534
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/PoseArray.msg'
p1535
sbsS'std_msgs/Int8MultiArray'
p1536
g0
(g9
g2
Ntp1537
Rp1538
(dp1539
g13
S'msg'
p1540
sg15
S'std_msgs/Int8MultiArray'
p1541
sg17
S'std_msgs'
p1542
sg19
S'\n# Please look at the MultiArrayLayout message definition for\n# documentation on all multiarrays.\n\nMultiArrayLayout  layout        # specification of data layout\nint8[]            data          # array of data\n\n'
p1543
sg21
S'package_modeler'
p1544
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Int8MultiArray.msg'
p1545
sbsS'moveit_msgs/MoveGroupSequenceActionGoal'
p1546
g0
(g9
g2
Ntp1547
Rp1548
(dp1549
g13
S'msg'
p1550
sg15
S'moveit_msgs/MoveGroupSequenceActionGoal'
p1551
sg17
S'moveit_msgs'
p1552
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nMoveGroupSequenceGoal goal\n'
p1553
sg21
S'package_modeler'
p1554
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveGroupSequenceActionGoal.msg'
p1555
sbsS'turtle_actionlib/ShapeActionGoal'
p1556
g0
(g9
g2
Ntp1557
Rp1558
(dp1559
g13
S'msg'
p1560
sg15
S'turtle_actionlib/ShapeActionGoal'
p1561
sg17
S'turtle_actionlib'
p1562
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nShapeGoal goal\n'
p1563
sg21
S'package_modeler'
p1564
sg23
I0
sg24
S'/opt/ros/melodic/share/turtle_actionlib/msg/ShapeActionGoal.msg'
p1565
sbsS'control_msgs/JointJog'
p1566
g0
(g9
g2
Ntp1567
Rp1568
(dp1569
g13
S'msg'
p1570
sg15
S'control_msgs/JointJog'
p1571
sg17
S'control_msgs'
p1572
sg19
S"\n# Used in time-stamping the message.\nHeader header\n\n# Name list of the joints. You don't need to specify all joints of the\n# robot. Joint names are case-sensitive.\nstring[] joint_names\n\n# A position command to the joints listed in joint_names.\n# The order must be identical.\n# Units are meters or radians.\n# If displacements and velocities are filled, a profiled motion is requested.\nfloat64[] displacements # or position_deltas\n\n# A velocity command to the joints listed in joint_names.\n# The order must be identical.\n# Units are m/s or rad/s.\n# If displacements and velocities are filled, a profiled motion is requested.\nfloat64[] velocities\n\nfloat64 duration\n"
p1573
sg21
S'package_modeler'
p1574
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/JointJog.msg'
p1575
sbsS'trajectory_msgs/MultiDOFJointTrajectory'
p1576
g0
(g9
g2
Ntp1577
Rp1578
(dp1579
g13
S'msg'
p1580
sg15
S'trajectory_msgs/MultiDOFJointTrajectory'
p1581
sg17
S'trajectory_msgs'
p1582
sg19
S'\n# The header is used to specify the coordinate frame and the reference time for the trajectory durations\nHeader header\n\n# A representation of a multi-dof joint trajectory (each point is a transformation)\n# Each point along the trajectory will include an array of positions/velocities/accelerations\n# that has the same length as the array of joint names, and has the same order of joints as \n# the joint names array.\n\nstring[] joint_names\nMultiDOFJointTrajectoryPoint[] points\n'
p1583
sg21
S'package_modeler'
p1584
sg23
I0
sg24
S'/opt/ros/melodic/share/trajectory_msgs/msg/MultiDOFJointTrajectory.msg'
p1585
sbsS'std_msgs/Byte'
p1586
g0
(g9
g2
Ntp1587
Rp1588
(dp1589
g13
S'msg'
p1590
sg15
S'std_msgs/Byte'
p1591
sg17
S'std_msgs'
p1592
sg19
S'\nbyte data\n'
p1593
sg21
S'package_modeler'
p1594
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Byte.msg'
p1595
sbsS'actionlib_tutorials/AveragingAction'
p1596
g0
(g9
g2
Ntp1597
Rp1598
(dp1599
g13
S'msg'
p1600
sg15
S'actionlib_tutorials/AveragingAction'
p1601
sg17
S'actionlib_tutorials'
p1602
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nAveragingActionGoal action_goal\nAveragingActionResult action_result\nAveragingActionFeedback action_feedback\n'
p1603
sg21
S'package_modeler'
p1604
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/msg/AveragingAction.msg'
p1605
sbsS'geographic_msgs/RoutePath'
p1606
g0
(g9
g2
Ntp1607
Rp1608
(dp1609
g13
S'msg'
p1610
sg15
S'geographic_msgs/RoutePath'
p1611
sg17
S'geographic_msgs'
p1612
sg19
S'\n# Path through a route network.\n#\n# A path is a sequence of RouteSegment edges.  This information is\n# extracted from a RouteNetwork graph.  A RoutePath lists the route\n# segments needed to reach some chosen goal.\n\nHeader header\n\nuuid_msgs/UniqueID   network    # Route network containing this path\nuuid_msgs/UniqueID[] segments   # Sequence of RouteSegment IDs\nKeyValue[]           props      # Key/value properties\n'
p1613
sg21
S'package_modeler'
p1614
sg23
I0
sg24
S'/opt/ros/melodic/share/geographic_msgs/msg/RoutePath.msg'
p1615
sbsS'geometry_msgs/Quaternion'
p1616
g0
(g9
g2
Ntp1617
Rp1618
(dp1619
g13
S'msg'
p1620
sg15
S'geometry_msgs/Quaternion'
p1621
sg17
S'geometry_msgs'
p1622
sg19
S'\n# This represents an orientation in free space in quaternion form.\n\nfloat64 x\nfloat64 y\nfloat64 z\nfloat64 w\n'
p1623
sg21
S'package_modeler'
p1624
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/Quaternion.msg'
p1625
sbsS'actionlib_tutorials/FibonacciActionGoal'
p1626
g0
(g9
g2
Ntp1627
Rp1628
(dp1629
g13
S'msg'
p1630
sg15
S'actionlib_tutorials/FibonacciActionGoal'
p1631
sg17
S'actionlib_tutorials'
p1632
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nFibonacciGoal goal\n'
p1633
sg21
S'package_modeler'
p1634
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/msg/FibonacciActionGoal.msg'
p1635
sbsS'control_msgs/FollowJointTrajectoryActionGoal'
p1636
g0
(g9
g2
Ntp1637
Rp1638
(dp1639
g13
S'msg'
p1640
sg15
S'control_msgs/FollowJointTrajectoryActionGoal'
p1641
sg17
S'control_msgs'
p1642
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nFollowJointTrajectoryGoal goal\n'
p1643
sg21
S'package_modeler'
p1644
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/FollowJointTrajectoryActionGoal.msg'
p1645
sbsS'control_msgs/SingleJointPositionFeedback'
p1646
g0
(g9
g2
Ntp1647
Rp1648
(dp1649
g13
S'msg'
p1650
sg15
S'control_msgs/SingleJointPositionFeedback'
p1651
sg17
S'control_msgs'
p1652
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nHeader header\nfloat64 position\nfloat64 velocity\nfloat64 error\n\n'
p1653
sg21
S'package_modeler'
p1654
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/SingleJointPositionFeedback.msg'
p1655
sbsS'gazebo_msgs/ContactsState'
p1656
g0
(g9
g2
Ntp1657
Rp1658
(dp1659
g13
S'msg'
p1660
sg15
S'gazebo_msgs/ContactsState'
p1661
sg17
S'gazebo_msgs'
p1662
sg19
S'\nHeader header                                   # stamp\ngazebo_msgs/ContactState[] states            # array of geom pairs in contact\n'
p1663
sg21
S'package_modeler'
p1664
sg23
I0
sg24
S'/opt/ros/melodic/share/gazebo_msgs/msg/ContactsState.msg'
p1665
sbsS'tf2_msgs/LookupTransformAction'
p1666
g0
(g9
g2
Ntp1667
Rp1668
(dp1669
g13
S'msg'
p1670
sg15
S'tf2_msgs/LookupTransformAction'
p1671
sg17
S'tf2_msgs'
p1672
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nLookupTransformActionGoal action_goal\nLookupTransformActionResult action_result\nLookupTransformActionFeedback action_feedback\n'
p1673
sg21
S'package_modeler'
p1674
sg23
I0
sg24
S'/opt/ros/melodic/share/tf2_msgs/msg/LookupTransformAction.msg'
p1675
sbsS'moveit_msgs/PlanningSceneComponents'
p1676
g0
(g9
g2
Ntp1677
Rp1678
(dp1679
g13
S'msg'
p1680
sg15
S'moveit_msgs/PlanningSceneComponents'
p1681
sg17
S'moveit_msgs'
p1682
sg19
S'\n# This message defines the components that make up the PlanningScene message.\n# The values can be used as a bitfield to specify which parts of the PlanningScene message\n# are of interest\n\n# Scene name, model name, model root\nuint32 SCENE_SETTINGS=1\n\n# Joint values of the robot state\nuint32 ROBOT_STATE=2\n\n# Attached objects (including geometry) for the robot state\nuint32 ROBOT_STATE_ATTACHED_OBJECTS=4\n\n# The names of the world objects\nuint32 WORLD_OBJECT_NAMES=8\n\n# The geometry of the world objects\nuint32 WORLD_OBJECT_GEOMETRY=16\n\n# The maintained octomap \nuint32 OCTOMAP=32\n\n# The maintained list of transforms\nuint32 TRANSFORMS=64\n\n# The allowed collision matrix\nuint32 ALLOWED_COLLISION_MATRIX=128\n\n# The default link padding and link scaling\nuint32 LINK_PADDING_AND_SCALING=256\n\n# The stored object colors\nuint32 OBJECT_COLORS=512\n\n# Bitfield combining options indicated above\nuint32 components\n'
p1683
sg21
S'package_modeler'
p1684
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PlanningSceneComponents.msg'
p1685
sbsS'twist_mux_msgs/JoyTurboResult'
p1686
g0
(g9
g2
Ntp1687
Rp1688
(dp1689
g13
S'msg'
p1690
sg15
S'twist_mux_msgs/JoyTurboResult'
p1691
sg17
S'twist_mux_msgs'
p1692
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n'
p1693
sg21
S'package_modeler'
p1694
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/msg/JoyTurboResult.msg'
p1695
sbsS'geometry_msgs/PolygonStamped'
p1696
g0
(g9
g2
Ntp1697
Rp1698
(dp1699
g13
S'msg'
p1700
sg15
S'geometry_msgs/PolygonStamped'
p1701
sg17
S'geometry_msgs'
p1702
sg19
S'\n# This represents a Polygon with reference coordinate frame and timestamp\nHeader header\nPolygon polygon\n'
p1703
sg21
S'package_modeler'
p1704
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/PolygonStamped.msg'
p1705
sbsS'control_msgs/PointHeadAction'
p1706
g0
(g9
g2
Ntp1707
Rp1708
(dp1709
g13
S'msg'
p1710
sg15
S'control_msgs/PointHeadAction'
p1711
sg17
S'control_msgs'
p1712
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nPointHeadActionGoal action_goal\nPointHeadActionResult action_result\nPointHeadActionFeedback action_feedback\n'
p1713
sg21
S'package_modeler'
p1714
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/PointHeadAction.msg'
p1715
sbsS'ar_track_alvar_msgs/AlvarMarker'
p1716
g0
(g9
g2
Ntp1717
Rp1718
(dp1719
g13
S'msg'
p1720
sg15
S'ar_track_alvar_msgs/AlvarMarker'
p1721
sg17
S'ar_track_alvar_msgs'
p1722
sg19
S'\nHeader header\nuint32 id\nuint32 confidence\ngeometry_msgs/PoseStamped pose\n\n'
p1723
sg21
S'package_modeler'
p1724
sg23
I0
sg24
S'/opt/ros/melodic/share/ar_track_alvar_msgs/msg/AlvarMarker.msg'
p1725
sbsS'capabilities/Capability'
p1726
g0
(g9
g2
Ntp1727
Rp1728
(dp1729
g13
S'msg'
p1730
sg15
S'capabilities/Capability'
p1731
sg17
S'capabilities'
p1732
sg19
S'\n# Capability\nstring capability\n# Used provider\nstring provider\n'
p1733
sg21
S'package_modeler'
p1734
sg23
I0
sg24
S'/opt/ros/melodic/share/capabilities/msg/Capability.msg'
p1735
sbsS'geometry_msgs/TwistWithCovariance'
p1736
g0
(g9
g2
Ntp1737
Rp1738
(dp1739
g13
S'msg'
p1740
sg15
S'geometry_msgs/TwistWithCovariance'
p1741
sg17
S'geometry_msgs'
p1742
sg19
S'\n# This expresses velocity in free space with uncertainty.\n\nTwist twist\n\n# Row-major representation of the 6x6 covariance matrix\n# The orientation parameters use a fixed-axis representation.\n# In order, the parameters are:\n# (x, y, z, rotation about X axis, rotation about Y axis, rotation about Z axis)\nfloat64[36] covariance\n'
p1743
sg21
S'package_modeler'
p1744
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/TwistWithCovariance.msg'
p1745
sbsS'moveit_msgs/JointLimits'
p1746
g0
(g9
g2
Ntp1747
Rp1748
(dp1749
g13
S'msg'
p1750
sg15
S'moveit_msgs/JointLimits'
p1751
sg17
S'moveit_msgs'
p1752
sg19
S'\n# This message contains information about limits of a particular joint (or control dimension)\nstring joint_name\n\n# true if the joint has position limits\nbool has_position_limits\n\n# min and max position limits\nfloat64 min_position\nfloat64 max_position\n\n# true if joint has velocity limits\nbool has_velocity_limits\n\n# max velocity limit\nfloat64 max_velocity\n# min_velocity is assumed to be -max_velocity\n\n# true if joint has acceleration limits\nbool has_acceleration_limits\n# max acceleration limit\nfloat64 max_acceleration\n# min_acceleration is assumed to be -max_acceleration\n'
p1753
sg21
S'package_modeler'
p1754
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/JointLimits.msg'
p1755
sbsS'actionlib_tutorials/FibonacciFeedback'
p1756
g0
(g9
g2
Ntp1757
Rp1758
(dp1759
g13
S'msg'
p1760
sg15
S'actionlib_tutorials/FibonacciFeedback'
p1761
sg17
S'actionlib_tutorials'
p1762
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n#feedback\nint32[] sequence\n\n'
p1763
sg21
S'package_modeler'
p1764
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/msg/FibonacciFeedback.msg'
p1765
sbsS'smach_msgs/SmachContainerInitialStatusCmd'
p1766
g0
(g9
g2
Ntp1767
Rp1768
(dp1769
g13
S'msg'
p1770
sg15
S'smach_msgs/SmachContainerInitialStatusCmd'
p1771
sg17
S'smach_msgs'
p1772
sg19
S"\n# The path to the node in the server\nstring path\n\n# The desired initial state(s)\nstring[] initial_states\n\n# Initial values for the local user data of the state machine\n# A pickled user data structure\n# i.e. the UserData's internal dictionary\nstring local_data\n"
p1773
sg21
S'package_modeler'
p1774
sg23
I0
sg24
S'/opt/ros/melodic/share/smach_msgs/msg/SmachContainerInitialStatusCmd.msg'
p1775
sbsS'std_msgs/Int64'
p1776
g0
(g9
g2
Ntp1777
Rp1778
(dp1779
g13
S'msg'
p1780
sg15
S'std_msgs/Int64'
p1781
sg17
S'std_msgs'
p1782
sg19
S'\nint64 data'
p1783
sg21
S'package_modeler'
p1784
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Int64.msg'
p1785
sbsS'geometry_msgs/PoseWithCovariance'
p1786
g0
(g9
g2
Ntp1787
Rp1788
(dp1789
g13
S'msg'
p1790
sg15
S'geometry_msgs/PoseWithCovariance'
p1791
sg17
S'geometry_msgs'
p1792
sg19
S'\n# This represents a pose in free space with uncertainty.\n\nPose pose\n\n# Row-major representation of the 6x6 covariance matrix\n# The orientation parameters use a fixed-axis representation.\n# In order, the parameters are:\n# (x, y, z, rotation about X axis, rotation about Y axis, rotation about Z axis)\nfloat64[36] covariance\n'
p1793
sg21
S'package_modeler'
p1794
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/PoseWithCovariance.msg'
p1795
sbsS'moveit_msgs/CollisionObject'
p1796
g0
(g9
g2
Ntp1797
Rp1798
(dp1799
g13
S'msg'
p1800
sg15
S'moveit_msgs/CollisionObject'
p1801
sg17
S'moveit_msgs'
p1802
sg19
S'\n# A header, used for interpreting the poses\nHeader header\n\n# The id of the object (name used in MoveIt)\nstring id\n\n# The object type in a database of known objects\nobject_recognition_msgs/ObjectType type\n\n# The collision geometries associated with the object.\n# Their poses are with respect to the specified header\n\n# Solid geometric primitives\nshape_msgs/SolidPrimitive[] primitives\ngeometry_msgs/Pose[] primitive_poses\n\n# Meshes\nshape_msgs/Mesh[] meshes\ngeometry_msgs/Pose[] mesh_poses\n\n# Bounding planes (equation is specified, but the plane can be oriented using an additional pose)\nshape_msgs/Plane[] planes\ngeometry_msgs/Pose[] plane_poses\n\n# Adds the object to the planning scene. If the object previously existed, it is replaced.\nbyte ADD=0\n\n# Removes the object from the environment entirely (everything that matches the specified id)\nbyte REMOVE=1\n\n# Append to an object that already exists in the planning scene. If the object does not exist, it is added.\nbyte APPEND=2\n\n# If an object already exists in the scene, new poses can be sent (the geometry arrays must be left empty)\n# if solely moving the object is desired\nbyte MOVE=3\n\n# Operation to be performed\nbyte operation\n'
p1803
sg21
S'package_modeler'
p1804
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/CollisionObject.msg'
p1805
sbsS'tf2_msgs/LookupTransformResult'
p1806
g0
(g9
g2
Ntp1807
Rp1808
(dp1809
g13
S'msg'
p1810
sg15
S'tf2_msgs/LookupTransformResult'
p1811
sg17
S'tf2_msgs'
p1812
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\ngeometry_msgs/TransformStamped transform\ntf2_msgs/TF2Error error\n'
p1813
sg21
S'package_modeler'
p1814
sg23
I0
sg24
S'/opt/ros/melodic/share/tf2_msgs/msg/LookupTransformResult.msg'
p1815
sbsS'geometry_msgs/Point32'
p1816
g0
(g9
g2
Ntp1817
Rp1818
(dp1819
g13
S'msg'
p1820
sg15
S'geometry_msgs/Point32'
p1821
sg17
S'geometry_msgs'
p1822
sg19
S'\n# This contains the position of a point in free space(with 32 bits of precision).\n# It is recommeded to use Point wherever possible instead of Point32.  \n# \n# This recommendation is to promote interoperability.  \n#\n# This message is designed to take up less space when sending\n# lots of points at once, as in the case of a PointCloud.  \n\nfloat32 x\nfloat32 y\nfloat32 z'
p1823
sg21
S'package_modeler'
p1824
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/Point32.msg'
p1825
sbsS'gazebo_msgs/ODEJointProperties'
p1826
g0
(g9
g2
Ntp1827
Rp1828
(dp1829
g13
S'msg'
p1830
sg15
S'gazebo_msgs/ODEJointProperties'
p1831
sg17
S'gazebo_msgs'
p1832
sg19
S'\n# access to low level joint properties, change these at your own risk\nfloat64[] damping             # joint damping\nfloat64[] hiStop              # joint limit\nfloat64[] loStop              # joint limit\nfloat64[] erp                 # set joint erp\nfloat64[] cfm                 # set joint cfm\nfloat64[] stop_erp            # set joint erp for joint limit "contact" joint\nfloat64[] stop_cfm            # set joint cfm for joint limit "contact" joint\nfloat64[] fudge_factor        # joint fudge_factor applied at limits, see ODE manual for info.\nfloat64[] fmax                # ode joint param fmax\nfloat64[] vel                 # ode joint param vel\n'
p1833
sg21
S'package_modeler'
p1834
sg23
I0
sg24
S'/opt/ros/melodic/share/gazebo_msgs/msg/ODEJointProperties.msg'
p1835
sbsS'diagnostic_msgs/DiagnosticArray'
p1836
g0
(g9
g2
Ntp1837
Rp1838
(dp1839
g13
S'msg'
p1840
sg15
S'diagnostic_msgs/DiagnosticArray'
p1841
sg17
S'diagnostic_msgs'
p1842
sg19
S'\n# This message is used to send diagnostic information about the state of the robot\nHeader header #for timestamp\nDiagnosticStatus[] status # an array of components being reported on'
p1843
sg21
S'package_modeler'
p1844
sg23
I0
sg24
S'/opt/ros/melodic/share/diagnostic_msgs/msg/DiagnosticArray.msg'
p1845
sbsS'sensor_msgs/NavSatFix'
p1846
g0
(g9
g2
Ntp1847
Rp1848
(dp1849
g13
S'msg'
p1850
sg15
S'sensor_msgs/NavSatFix'
p1851
sg17
S'sensor_msgs'
p1852
sg19
S'\n# Navigation Satellite fix for any Global Navigation Satellite System\n#\n# Specified using the WGS 84 reference ellipsoid\n\n# header.stamp specifies the ROS time for this measurement (the\n#        corresponding satellite time may be reported using the\n#        sensor_msgs/TimeReference message).\n#\n# header.frame_id is the frame of reference reported by the satellite\n#        receiver, usually the location of the antenna.  This is a\n#        Euclidean frame relative to the vehicle, not a reference\n#        ellipsoid.\nHeader header\n\n# satellite fix status information\nNavSatStatus status\n\n# Latitude [degrees]. Positive is north of equator; negative is south.\nfloat64 latitude\n\n# Longitude [degrees]. Positive is east of prime meridian; negative is west.\nfloat64 longitude\n\n# Altitude [m]. Positive is above the WGS 84 ellipsoid\n# (quiet NaN if no altitude is available).\nfloat64 altitude\n\n# Position covariance [m^2] defined relative to a tangential plane\n# through the reported position. The components are East, North, and\n# Up (ENU), in row-major order.\n#\n# Beware: this coordinate system exhibits singularities at the poles.\n\nfloat64[9] position_covariance\n\n# If the covariance of the fix is known, fill it in completely. If the\n# GPS receiver provides the variance of each measurement, put them\n# along the diagonal. If only Dilution of Precision is available,\n# estimate an approximate covariance from that.\n\nuint8 COVARIANCE_TYPE_UNKNOWN = 0\nuint8 COVARIANCE_TYPE_APPROXIMATED = 1\nuint8 COVARIANCE_TYPE_DIAGONAL_KNOWN = 2\nuint8 COVARIANCE_TYPE_KNOWN = 3\n\nuint8 position_covariance_type\n'
p1853
sg21
S'package_modeler'
p1854
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/NavSatFix.msg'
p1855
sbsS'twist_mux_msgs/JoyPriorityResult'
p1856
g0
(g9
g2
Ntp1857
Rp1858
(dp1859
g13
S'msg'
p1860
sg15
S'twist_mux_msgs/JoyPriorityResult'
p1861
sg17
S'twist_mux_msgs'
p1862
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n'
p1863
sg21
S'package_modeler'
p1864
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/msg/JoyPriorityResult.msg'
p1865
sbsS'object_recognition_msgs/RecognizedObjectArray'
p1866
g0
(g9
g2
Ntp1867
Rp1868
(dp1869
g13
S'msg'
p1870
sg15
S'object_recognition_msgs/RecognizedObjectArray'
p1871
sg17
S'object_recognition_msgs'
p1872
sg19
S'\n##################################################### HEADER ###########################################################\nHeader header\n\n# This message type describes a potential scene configuration: a set of objects that can explain the scene\nobject_recognition_msgs/RecognizedObject[] objects\n\n##################################################### SEARCH ###########################################################\n\n# The co-occurrence matrix between the recognized objects\nfloat32[] cooccurrence\n'
p1873
sg21
S'package_modeler'
p1874
sg23
I0
sg24
S'/opt/ros/melodic/share/object_recognition_msgs/msg/RecognizedObjectArray.msg'
p1875
sbsS'actionlib_tutorials/FibonacciResult'
p1876
g0
(g9
g2
Ntp1877
Rp1878
(dp1879
g13
S'msg'
p1880
sg15
S'actionlib_tutorials/FibonacciResult'
p1881
sg17
S'actionlib_tutorials'
p1882
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n#result definition\nint32[] sequence\n'
p1883
sg21
S'package_modeler'
p1884
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/msg/FibonacciResult.msg'
p1885
sbsS'dynamic_reconfigure/DoubleParameter'
p1886
g0
(g9
g2
Ntp1887
Rp1888
(dp1889
g13
S'msg'
p1890
sg15
S'dynamic_reconfigure/DoubleParameter'
p1891
sg17
S'dynamic_reconfigure'
p1892
sg19
S'\nstring name\nfloat64 value\n'
p1893
sg21
S'package_modeler'
p1894
sg23
I0
sg24
S'/opt/ros/melodic/share/dynamic_reconfigure/msg/DoubleParameter.msg'
p1895
sbsS'rosserial_msgs/TopicInfo'
p1896
g0
(g9
g2
Ntp1897
Rp1898
(dp1899
g13
S'msg'
p1900
sg15
S'rosserial_msgs/TopicInfo'
p1901
sg17
S'rosserial_msgs'
p1902
sg19
S'\n# special topic_ids\nuint16 ID_PUBLISHER=0\nuint16 ID_SUBSCRIBER=1\nuint16 ID_SERVICE_SERVER=2\nuint16 ID_SERVICE_CLIENT=4\nuint16 ID_PARAMETER_REQUEST=6\nuint16 ID_LOG=7\nuint16 ID_TIME=10\nuint16 ID_TX_STOP=11\n\n# The endpoint ID for this topic\nuint16 topic_id\n\nstring topic_name\nstring message_type\n\n# MD5 checksum for this message type\nstring md5sum\n\n# size of the buffer message must fit in\nint32 buffer_size\n'
p1903
sg21
S'package_modeler'
p1904
sg23
I0
sg24
S'/opt/ros/melodic/share/rosserial_msgs/msg/TopicInfo.msg'
p1905
sbsS'geometry_msgs/TwistWithCovarianceStamped'
p1906
g0
(g9
g2
Ntp1907
Rp1908
(dp1909
g13
S'msg'
p1910
sg15
S'geometry_msgs/TwistWithCovarianceStamped'
p1911
sg17
S'geometry_msgs'
p1912
sg19
S'\n# This represents an estimated twist with reference coordinate frame and timestamp.\nHeader header\nTwistWithCovariance twist\n'
p1913
sg21
S'package_modeler'
p1914
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/TwistWithCovarianceStamped.msg'
p1915
sbsS'control_msgs/SingleJointPositionResult'
p1916
g0
(g9
g2
Ntp1917
Rp1918
(dp1919
g13
S'msg'
p1920
sg15
S'control_msgs/SingleJointPositionResult'
p1921
sg17
S'control_msgs'
p1922
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n'
p1923
sg21
S'package_modeler'
p1924
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/SingleJointPositionResult.msg'
p1925
sbsS'moveit_msgs/PlaceGoal'
p1926
g0
(g9
g2
Ntp1927
Rp1928
(dp1929
g13
S'msg'
p1930
sg15
S'moveit_msgs/PlaceGoal'
p1931
sg17
S'moveit_msgs'
p1932
sg19
S"\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n# An action for placing an object\n\n# which group to be used to plan for grasping\nstring group_name\n\n# the name of the attached object to place\nstring attached_object_name\n\n# a list of possible transformations for placing the object\nPlaceLocation[] place_locations\n\n# if the user prefers setting the eef pose (same as in pick) rather than \n# the location of the object, this flag should be set to true\nbool place_eef\n\n# the name that the support surface (e.g. table) has in the collision world\n# can be left empty if no name is available\nstring support_surface_name\n\n# whether collisions between the gripper and the support surface should be acceptable\n# during move from pre-place to place and during retreat. Collisions when moving to the\n# pre-place location are still not allowed even if this is set to true.\nbool allow_gripper_support_collision\n\n# Optional constraints to be imposed on every point in the motion plan\nConstraints path_constraints\n\n# The name of the motion planner to use. If no name is specified,\n# a default motion planner will be used\nstring planner_id\n\n# an optional list of obstacles that we have semantic information about\n# and that can be touched/pushed/moved in the course of placing;\n# CAREFUL: If the object name 'all' is used, collisions with all objects are disabled during the approach & retreat.\nstring[] allowed_touch_objects\n\n# The maximum amount of time the motion planner is allowed to plan for\nfloat64 allowed_planning_time\n\n# Planning options\nPlanningOptions planning_options\n\n"
p1933
sg21
S'package_modeler'
p1934
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PlaceGoal.msg'
p1935
sbsS'moveit_msgs/ObjectColor'
p1936
g0
(g9
g2
Ntp1937
Rp1938
(dp1939
g13
S'msg'
p1940
sg15
S'moveit_msgs/ObjectColor'
p1941
sg17
S'moveit_msgs'
p1942
sg19
S'\n# The object id for which we specify color\nstring id\n\n# The value of the color\nstd_msgs/ColorRGBA color\n'
p1943
sg21
S'package_modeler'
p1944
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/ObjectColor.msg'
p1945
sbsS'object_recognition_msgs/ObjectType'
p1946
g0
(g9
g2
Ntp1947
Rp1948
(dp1949
g13
S'msg'
p1950
sg15
S'object_recognition_msgs/ObjectType'
p1951
sg17
S'object_recognition_msgs'
p1952
sg19
S'\n################################################## OBJECT ID #########################################################\n\n# Contains information about the type of a found object. Those two sets of parameters together uniquely define an\n# object\n\n# The key of the found object: the unique identifier in the given db\nstring key\n\n# The db parameters stored as a JSON/compressed YAML string. An object id does not make sense without the corresponding\n# database. E.g., in object_recognition, it can look like: "{\'type\':\'CouchDB\', \'root\':\'http://localhost\'}"\n# There is no conventional format for those parameters and it\'s nice to keep that flexibility.\n# The object_recognition_core as a generic DB type that can read those fields\n# Current examples:\n# For CouchDB:\n#   type: \'CouchDB\'\n#   root: \'http://localhost:5984\'\n#   collection: \'object_recognition\'\n# For SQL household database:\n#   type: \'SqlHousehold\'\n#   host: \'wgs36\'\n#   port: 5432\n#   user: \'willow\'\n#   password: \'willow\'\n#   name: \'household_objects\'\n#   module: \'tabletop\'\nstring db\n'
p1953
sg21
S'package_modeler'
p1954
sg23
I0
sg24
S'/opt/ros/melodic/share/object_recognition_msgs/msg/ObjectType.msg'
p1955
sbsS'nav_msgs/GetMapFeedback'
p1956
g0
(g9
g2
Ntp1957
Rp1958
(dp1959
g13
S'msg'
p1960
sg15
S'nav_msgs/GetMapFeedback'
p1961
sg17
S'nav_msgs'
p1962
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n# no feedback\n'
p1963
sg21
S'package_modeler'
p1964
sg23
I0
sg24
S'/opt/ros/melodic/share/nav_msgs/msg/GetMapFeedback.msg'
p1965
sbsS'geometry_msgs/WrenchStamped'
p1966
g0
(g9
g2
Ntp1967
Rp1968
(dp1969
g13
S'msg'
p1970
sg15
S'geometry_msgs/WrenchStamped'
p1971
sg17
S'geometry_msgs'
p1972
sg19
S'\n# A wrench with reference coordinate frame and timestamp\nHeader header\nWrench wrench\n'
p1973
sg21
S'package_modeler'
p1974
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/WrenchStamped.msg'
p1975
sbsS'roscpp/Logger'
p1976
g0
(g9
g2
Ntp1977
Rp1978
(dp1979
g13
S'msg'
p1980
sg15
S'roscpp/Logger'
p1981
sg17
S'roscpp'
p1982
sg19
S'\nstring name\nstring level\n'
p1983
sg21
S'package_modeler'
p1984
sg23
I0
sg24
S'/opt/ros/melodic/share/roscpp/msg/Logger.msg'
p1985
sbsS'moveit_msgs/AllowedCollisionEntry'
p1986
g0
(g9
g2
Ntp1987
Rp1988
(dp1989
g13
S'msg'
p1990
sg15
S'moveit_msgs/AllowedCollisionEntry'
p1991
sg17
S'moveit_msgs'
p1992
sg19
S'\n# whether or not collision checking is enabled\nbool[] enabled\n'
p1993
sg21
S'package_modeler'
p1994
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/AllowedCollisionEntry.msg'
p1995
sbsS'tf2_msgs/TF2Error'
p1996
g0
(g9
g2
Ntp1997
Rp1998
(dp1999
g13
S'msg'
p2000
sg15
S'tf2_msgs/TF2Error'
p2001
sg17
S'tf2_msgs'
p2002
sg19
S'\nuint8 NO_ERROR = 0\nuint8 LOOKUP_ERROR = 1\nuint8 CONNECTIVITY_ERROR = 2\nuint8 EXTRAPOLATION_ERROR = 3\nuint8 INVALID_ARGUMENT_ERROR = 4\nuint8 TIMEOUT_ERROR = 5\nuint8 TRANSFORM_ERROR = 6\n\nuint8 error\nstring error_string\n'
p2003
sg21
S'package_modeler'
p2004
sg23
I0
sg24
S'/opt/ros/melodic/share/tf2_msgs/msg/TF2Error.msg'
p2005
sbsS'map_msgs/ProjectedMapInfo'
p2006
g0
(g9
g2
Ntp2007
Rp2008
(dp2009
g13
S'msg'
p2010
sg15
S'map_msgs/ProjectedMapInfo'
p2011
sg17
S'map_msgs'
p2012
sg19
S'\nstring frame_id\nfloat64 x\nfloat64 y\nfloat64 width\nfloat64 height\nfloat64 min_z\nfloat64 max_z'
p2013
sg21
S'package_modeler'
p2014
sg23
I0
sg24
S'/opt/ros/melodic/share/map_msgs/msg/ProjectedMapInfo.msg'
p2015
sbsS'nav_msgs/Path'
p2016
g0
(g9
g2
Ntp2017
Rp2018
(dp2019
g13
S'msg'
p2020
sg15
S'nav_msgs/Path'
p2021
sg17
S'nav_msgs'
p2022
sg19
S'\n#An array of poses that represents a Path for a robot to follow\nHeader header\ngeometry_msgs/PoseStamped[] poses\n'
p2023
sg21
S'package_modeler'
p2024
sg23
I0
sg24
S'/opt/ros/melodic/share/nav_msgs/msg/Path.msg'
p2025
sbsS'moveit_msgs/MoveGroupGoal'
p2026
g0
(g9
g2
Ntp2027
Rp2028
(dp2029
g13
S'msg'
p2030
sg15
S'moveit_msgs/MoveGroupGoal'
p2031
sg17
S'moveit_msgs'
p2032
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n# Motion planning request to pass to planner\nMotionPlanRequest request\n\n# Planning options\nPlanningOptions planning_options\n\n'
p2033
sg21
S'package_modeler'
p2034
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveGroupGoal.msg'
p2035
sbsS'geographic_msgs/RouteSegment'
p2036
g0
(g9
g2
Ntp2037
Rp2038
(dp2039
g13
S'msg'
p2040
sg15
S'geographic_msgs/RouteSegment'
p2041
sg17
S'geographic_msgs'
p2042
sg19
S'\n# Route network segment.\n#\n# This is one directed edge of a RouteNetwork graph. It represents a\n# known path from one way point to another.  If the path is two-way,\n# there will be another RouteSegment with "start" and "end" reversed.\n\nuuid_msgs/UniqueID id           # Unique identifier for this segment\n\nuuid_msgs/UniqueID start        # beginning way point of segment\nuuid_msgs/UniqueID end          # ending way point of segment\n\nKeyValue[] props                # segment properties\n'
p2043
sg21
S'package_modeler'
p2044
sg23
I0
sg24
S'/opt/ros/melodic/share/geographic_msgs/msg/RouteSegment.msg'
p2045
sbsS'moveit_msgs/MotionPlanRequest'
p2046
g0
(g9
g2
Ntp2047
Rp2048
(dp2049
g13
S'msg'
p2050
sg15
S'moveit_msgs/MotionPlanRequest'
p2051
sg17
S'moveit_msgs'
p2052
sg19
S'\n# This service contains the definition for a request to the motion\n# planner and the output it provides\n\n# Parameters for the workspace that the planner should work inside\nWorkspaceParameters workspace_parameters\n\n# Starting state updates. If certain joints should be considered\n# at positions other than the current ones, these positions should\n# be set here\nRobotState start_state\n\n# The possible goal states for the model to plan for. Each element of\n# the array defines a goal region. The goal is achieved\n# if the constraints for a particular region are satisfied\nConstraints[] goal_constraints\n\n# No state at any point along the path in the produced motion plan will violate these constraints (this applies to all points, not just waypoints)\nConstraints path_constraints\n\n# The constraints the resulting trajectory must satisfy\nTrajectoryConstraints trajectory_constraints\n\n# The name of the motion planner to use. If no name is specified,\n# a default motion planner will be used\nstring planner_id\n\n# The name of the group of joints on which this planner is operating\nstring group_name\n\n# The number of times this plan is to be computed. Shortest solution\n# will be reported.\nint32 num_planning_attempts\n\n# The maximum amount of time the motion planner is allowed to plan for (in seconds)\nfloat64 allowed_planning_time\n\n# Scaling factors for optionally reducing the maximum joint velocities and\n# accelerations.  Allowed values are in (0,1].  The maximum joint velocity and\n# acceleration specified in the robot model are multiplied by thier respective\n# factors.  If either are outside their valid ranges (importantly, this\n# includes being set to 0.0), the factor is set to the default value of 1.0\n# internally (i.e., maximum joint velocity or maximum joint acceleration).\nfloat64 max_velocity_scaling_factor\nfloat64 max_acceleration_scaling_factor\n\n'
p2053
sg21
S'package_modeler'
p2054
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MotionPlanRequest.msg'
p2055
sbsS'sensor_msgs/PointCloud'
p2056
g0
(g9
g2
Ntp2057
Rp2058
(dp2059
g13
S'msg'
p2060
sg15
S'sensor_msgs/PointCloud'
p2061
sg17
S'sensor_msgs'
p2062
sg19
S'\n# This message holds a collection of 3d points, plus optional additional\n# information about each point.\n\n# Time of sensor data acquisition, coordinate frame ID.\nHeader header\n\n# Array of 3d points. Each Point32 should be interpreted as a 3d point\n# in the frame given in the header.\ngeometry_msgs/Point32[] points\n\n# Each channel should have the same number of elements as points array,\n# and the data in each channel should correspond 1:1 with each point.\n# Channel names in common practice are listed in ChannelFloat32.msg.\nChannelFloat32[] channels\n'
p2063
sg21
S'package_modeler'
p2064
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/PointCloud.msg'
p2065
sbsS'pcl_msgs/PolygonMesh'
p2066
g0
(g9
g2
Ntp2067
Rp2068
(dp2069
g13
S'msg'
p2070
sg15
S'pcl_msgs/PolygonMesh'
p2071
sg17
S'pcl_msgs'
p2072
sg19
S'\n# Separate header for the polygonal surface\nHeader header\n# Vertices of the mesh as a point cloud\nsensor_msgs/PointCloud2 cloud\n# List of polygons\nVertices[] polygons\n'
p2073
sg21
S'package_modeler'
p2074
sg23
I0
sg24
S'/opt/ros/melodic/share/pcl_msgs/msg/PolygonMesh.msg'
p2075
sbsS'control_msgs/SingleJointPositionActionGoal'
p2076
g0
(g9
g2
Ntp2077
Rp2078
(dp2079
g13
S'msg'
p2080
sg15
S'control_msgs/SingleJointPositionActionGoal'
p2081
sg17
S'control_msgs'
p2082
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nSingleJointPositionGoal goal\n'
p2083
sg21
S'package_modeler'
p2084
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/SingleJointPositionActionGoal.msg'
p2085
sbsS'costmap_2d/VoxelGrid'
p2086
g0
(g9
g2
Ntp2087
Rp2088
(dp2089
g13
S'msg'
p2090
sg15
S'costmap_2d/VoxelGrid'
p2091
sg17
S'costmap_2d'
p2092
sg19
S'\nHeader header\nuint32[] data\ngeometry_msgs/Point32 origin\ngeometry_msgs/Vector3 resolutions\nuint32 size_x\nuint32 size_y\nuint32 size_z\n\n'
p2093
sg21
S'package_modeler'
p2094
sg23
I0
sg24
S'/opt/ros/melodic/share/costmap_2d/msg/VoxelGrid.msg'
p2095
sbsS'nav_msgs/GetMapGoal'
p2096
g0
(g9
g2
Ntp2097
Rp2098
(dp2099
g13
S'msg'
p2100
sg15
S'nav_msgs/GetMapGoal'
p2101
sg17
S'nav_msgs'
p2102
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n# Get the map as a nav_msgs/OccupancyGrid\n'
p2103
sg21
S'package_modeler'
p2104
sg23
I0
sg24
S'/opt/ros/melodic/share/nav_msgs/msg/GetMapGoal.msg'
p2105
sbsS'actionlib/TestAction'
p2106
g0
(g9
g2
Ntp2107
Rp2108
(dp2109
g13
S'msg'
p2110
sg15
S'actionlib/TestAction'
p2111
sg17
S'actionlib'
p2112
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nTestActionGoal action_goal\nTestActionResult action_result\nTestActionFeedback action_feedback\n'
p2113
sg21
S'package_modeler'
p2114
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TestAction.msg'
p2115
sbsS'moveit_msgs/AttachedCollisionObject'
p2116
g0
(g9
g2
Ntp2117
Rp2118
(dp2119
g13
S'msg'
p2120
sg15
S'moveit_msgs/AttachedCollisionObject'
p2121
sg17
S'moveit_msgs'
p2122
sg19
S'\n# The CollisionObject will be attached with a fixed joint to this link\nstring link_name\n\n#This contains the actual shapes and poses for the CollisionObject\n#to be attached to the link\n#If action is remove and no object.id is set, all objects\n#attached to the link indicated by link_name will be removed\nCollisionObject object\n\n# The set of links that the attached objects are allowed to touch\n# by default - the link_name is already considered by default\nstring[] touch_links\n\n# If certain links were placed in a particular posture for this object to remain attached \n# (e.g., an end effector closing around an object), the posture necessary for releasing\n# the object is stored here\ntrajectory_msgs/JointTrajectory detach_posture\n\n# The weight of the attached object, if known\nfloat64 weight\n'
p2123
sg21
S'package_modeler'
p2124
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/AttachedCollisionObject.msg'
p2125
sbsS'tf2_msgs/LookupTransformActionGoal'
p2126
g0
(g9
g2
Ntp2127
Rp2128
(dp2129
g13
S'msg'
p2130
sg15
S'tf2_msgs/LookupTransformActionGoal'
p2131
sg17
S'tf2_msgs'
p2132
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nLookupTransformGoal goal\n'
p2133
sg21
S'package_modeler'
p2134
sg23
I0
sg24
S'/opt/ros/melodic/share/tf2_msgs/msg/LookupTransformActionGoal.msg'
p2135
sbsS'cartographer_ros_msgs/SubmapEntry'
p2136
g0
(g9
g2
Ntp2137
Rp2138
(dp2139
g13
S'msg'
p2140
sg15
S'cartographer_ros_msgs/SubmapEntry'
p2141
sg17
S'cartographer_ros_msgs'
p2142
sg19
S'\n# Copyright 2016 The Cartographer Authors\n#\n# Licensed under the Apache License, Version 2.0 (the "License");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nint32 trajectory_id\nint32 submap_index\nint32 submap_version\ngeometry_msgs/Pose pose\n'
p2143
sg21
S'package_modeler'
p2144
sg23
I0
sg24
S'/opt/ros/melodic/share/cartographer_ros_msgs/msg/SubmapEntry.msg'
p2145
sbsS'uuid_msgs/UniqueID'
p2146
g0
(g9
g2
Ntp2147
Rp2148
(dp2149
g13
S'msg'
p2150
sg15
S'uuid_msgs/UniqueID'
p2151
sg17
S'uuid_msgs'
p2152
sg19
S'\n# A universally unique identifier (UUID).\n#\n#  http://en.wikipedia.org/wiki/Universally_unique_identifier\n#  http://tools.ietf.org/html/rfc4122.html\n\nuint8[16] uuid\n'
p2153
sg21
S'package_modeler'
p2154
sg23
I0
sg24
S'/opt/ros/melodic/share/uuid_msgs/msg/UniqueID.msg'
p2155
sbsS'actionlib/TwoIntsActionResult'
p2156
g0
(g9
g2
Ntp2157
Rp2158
(dp2159
g13
S'msg'
p2160
sg15
S'actionlib/TwoIntsActionResult'
p2161
sg17
S'actionlib'
p2162
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nTwoIntsResult result\n'
p2163
sg21
S'package_modeler'
p2164
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TwoIntsActionResult.msg'
p2165
sbsS'control_msgs/GripperCommand'
p2166
g0
(g9
g2
Ntp2167
Rp2168
(dp2169
g13
S'msg'
p2170
sg15
S'control_msgs/GripperCommand'
p2171
sg17
S'control_msgs'
p2172
sg19
S'\nfloat64 position\nfloat64 max_effort\n'
p2173
sg21
S'package_modeler'
p2174
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/GripperCommand.msg'
p2175
sbsS'twist_mux_msgs/JoyTurboGoal'
p2176
g0
(g9
g2
Ntp2177
Rp2178
(dp2179
g13
S'msg'
p2180
sg15
S'twist_mux_msgs/JoyTurboGoal'
p2181
sg17
S'twist_mux_msgs'
p2182
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n'
p2183
sg21
S'package_modeler'
p2184
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/msg/JoyTurboGoal.msg'
p2185
sbsS'std_msgs/UInt64MultiArray'
p2186
g0
(g9
g2
Ntp2187
Rp2188
(dp2189
g13
S'msg'
p2190
sg15
S'std_msgs/UInt64MultiArray'
p2191
sg17
S'std_msgs'
p2192
sg19
S'\n# Please look at the MultiArrayLayout message definition for\n# documentation on all multiarrays.\n\nMultiArrayLayout  layout        # specification of data layout\nuint64[]          data          # array of data\n\n'
p2193
sg21
S'package_modeler'
p2194
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/UInt64MultiArray.msg'
p2195
sbsS'moveit_msgs/MoveGroupSequenceGoal'
p2196
g0
(g9
g2
Ntp2197
Rp2198
(dp2199
g13
S'msg'
p2200
sg15
S'moveit_msgs/MoveGroupSequenceGoal'
p2201
sg17
S'moveit_msgs'
p2202
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n# A list of motion commands - one for each section of the sequence\nMotionSequenceRequest request\n\n# Planning options\nPlanningOptions planning_options\n'
p2203
sg21
S'package_modeler'
p2204
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveGroupSequenceGoal.msg'
p2205
sbsS'geometry_msgs/TransformStamped'
p2206
g0
(g9
g2
Ntp2207
Rp2208
(dp2209
g13
S'msg'
p2210
sg15
S'geometry_msgs/TransformStamped'
p2211
sg17
S'geometry_msgs'
p2212
sg19
S'\n# This expresses a transform from coordinate frame header.frame_id\n# to the coordinate frame child_frame_id\n#\n# This message is mostly used by the \n# <a href="http://wiki.ros.org/tf">tf</a> package. \n# See its documentation for more information.\n\nHeader header\nstring child_frame_id # the frame id of the child frame\nTransform transform\n'
p2213
sg21
S'package_modeler'
p2214
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/TransformStamped.msg'
p2215
sbsS'moveit_msgs/ExecuteTrajectoryGoal'
p2216
g0
(g9
g2
Ntp2217
Rp2218
(dp2219
g13
S'msg'
p2220
sg15
S'moveit_msgs/ExecuteTrajectoryGoal'
p2221
sg17
S'moveit_msgs'
p2222
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n# The trajectory to execute\nRobotTrajectory trajectory\n\n'
p2223
sg21
S'package_modeler'
p2224
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/ExecuteTrajectoryGoal.msg'
p2225
sbsS'actionlib_tutorials/FibonacciAction'
p2226
g0
(g9
g2
Ntp2227
Rp2228
(dp2229
g13
S'msg'
p2230
sg15
S'actionlib_tutorials/FibonacciAction'
p2231
sg17
S'actionlib_tutorials'
p2232
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nFibonacciActionGoal action_goal\nFibonacciActionResult action_result\nFibonacciActionFeedback action_feedback\n'
p2233
sg21
S'package_modeler'
p2234
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/msg/FibonacciAction.msg'
p2235
sbsS'turtlesim/Color'
p2236
g0
(g9
g2
Ntp2237
Rp2238
(dp2239
g13
S'msg'
p2240
sg15
S'turtlesim/Color'
p2241
sg17
S'turtlesim'
p2242
sg19
S'\nuint8 r\nuint8 g\nuint8 b\n'
p2243
sg21
S'package_modeler'
p2244
sg23
I0
sg24
S'/opt/ros/melodic/share/turtlesim/msg/Color.msg'
p2245
sbsS'cartographer_ros_msgs/StatusCode'
p2246
g0
(g9
g2
Ntp2247
Rp2248
(dp2249
g13
S'msg'
p2250
sg15
S'cartographer_ros_msgs/StatusCode'
p2251
sg17
S'cartographer_ros_msgs'
p2252
sg19
S'\n# Copyright 2018 The Cartographer Authors\n#\n# Licensed under the Apache License, Version 2.0 (the "License");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Definition of status code constants equivalent to the gRPC API.\n# https://developers.google.com/maps-booking/reference/grpc-api/status_codes\nuint8 OK=0\nuint8 CANCELLED=1\nuint8 UNKNOWN=2\nuint8 INVALID_ARGUMENT=3\nuint8 DEADLINE_EXCEEDED=4\nuint8 NOT_FOUND=5\nuint8 ALREADY_EXISTS=6\nuint8 PERMISSION_DENIED=7\nuint8 RESOURCE_EXHAUSTED=8\nuint8 FAILED_PRECONDITION=9\nuint8 ABORTED=10\nuint8 OUT_OF_RANGE=11\nuint8 UNIMPLEMENTED=12\nuint8 INTERNAL=13\nuint8 UNAVAILABLE=14\nuint8 DATA_LOSS=15\n'
p2253
sg21
S'package_modeler'
p2254
sg23
I0
sg24
S'/opt/ros/melodic/share/cartographer_ros_msgs/msg/StatusCode.msg'
p2255
sbsS'control_msgs/PointHeadActionFeedback'
p2256
g0
(g9
g2
Ntp2257
Rp2258
(dp2259
g13
S'msg'
p2260
sg15
S'control_msgs/PointHeadActionFeedback'
p2261
sg17
S'control_msgs'
p2262
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nPointHeadFeedback feedback\n'
p2263
sg21
S'package_modeler'
p2264
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/PointHeadActionFeedback.msg'
p2265
sbsS'std_msgs/UInt32MultiArray'
p2266
g0
(g9
g2
Ntp2267
Rp2268
(dp2269
g13
S'msg'
p2270
sg15
S'std_msgs/UInt32MultiArray'
p2271
sg17
S'std_msgs'
p2272
sg19
S'\n# Please look at the MultiArrayLayout message definition for\n# documentation on all multiarrays.\n\nMultiArrayLayout  layout        # specification of data layout\nuint32[]          data          # array of data\n\n'
p2273
sg21
S'package_modeler'
p2274
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/UInt32MultiArray.msg'
p2275
sbsS'geographic_msgs/KeyValue'
p2276
g0
(g9
g2
Ntp2277
Rp2278
(dp2279
g13
S'msg'
p2280
sg15
S'geographic_msgs/KeyValue'
p2281
sg17
S'geographic_msgs'
p2282
sg19
S'\n# Geographic map tag (key, value) pair\n#\n# This is equivalent to diagnostic_msgs/KeyValue, repeated here to\n# avoid introducing a trivial stack dependency.\n\nstring key                     # tag label\nstring value                   # corresponding value\n'
p2283
sg21
S'package_modeler'
p2284
sg23
I0
sg24
S'/opt/ros/melodic/share/geographic_msgs/msg/KeyValue.msg'
p2285
sbsS'moveit_msgs/MoveGroupSequenceAction'
p2286
g0
(g9
g2
Ntp2287
Rp2288
(dp2289
g13
S'msg'
p2290
sg15
S'moveit_msgs/MoveGroupSequenceAction'
p2291
sg17
S'moveit_msgs'
p2292
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nMoveGroupSequenceActionGoal action_goal\nMoveGroupSequenceActionResult action_result\nMoveGroupSequenceActionFeedback action_feedback\n'
p2293
sg21
S'package_modeler'
p2294
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveGroupSequenceAction.msg'
p2295
sbsS'geometry_msgs/PointStamped'
p2296
g0
(g9
g2
Ntp2297
Rp2298
(dp2299
g13
S'msg'
p2300
sg15
S'geometry_msgs/PointStamped'
p2301
sg17
S'geometry_msgs'
p2302
sg19
S'\n# This represents a Point with reference coordinate frame and timestamp\nHeader header\nPoint point\n'
p2303
sg21
S'package_modeler'
p2304
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/PointStamped.msg'
p2305
sbsS'control_msgs/SingleJointPositionActionFeedback'
p2306
g0
(g9
g2
Ntp2307
Rp2308
(dp2309
g13
S'msg'
p2310
sg15
S'control_msgs/SingleJointPositionActionFeedback'
p2311
sg17
S'control_msgs'
p2312
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nSingleJointPositionFeedback feedback\n'
p2313
sg21
S'package_modeler'
p2314
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/SingleJointPositionActionFeedback.msg'
p2315
sbsS'visualization_msgs/InteractiveMarkerPose'
p2316
g0
(g9
g2
Ntp2317
Rp2318
(dp2319
g13
S'msg'
p2320
sg15
S'visualization_msgs/InteractiveMarkerPose'
p2321
sg17
S'visualization_msgs'
p2322
sg19
S'\n# Time/frame info.\nHeader header\n\n# Initial pose. Also, defines the pivot point for rotations.\ngeometry_msgs/Pose pose\n\n# Identifying string. Must be globally unique in\n# the topic that this message is sent through.\nstring name\n'
p2323
sg21
S'package_modeler'
p2324
sg23
I0
sg24
S'/opt/ros/melodic/share/visualization_msgs/msg/InteractiveMarkerPose.msg'
p2325
sbsS'control_msgs/GripperCommandActionFeedback'
p2326
g0
(g9
g2
Ntp2327
Rp2328
(dp2329
g13
S'msg'
p2330
sg15
S'control_msgs/GripperCommandActionFeedback'
p2331
sg17
S'control_msgs'
p2332
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nGripperCommandFeedback feedback\n'
p2333
sg21
S'package_modeler'
p2334
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/GripperCommandActionFeedback.msg'
p2335
sbsS'nmea_msgs/GpgsvSatellite'
p2336
g0
(g9
g2
Ntp2337
Rp2338
(dp2339
g13
S'msg'
p2340
sg15
S'nmea_msgs/GpgsvSatellite'
p2341
sg17
S'nmea_msgs'
p2342
sg19
S'\n# Satellite data structure used in GPGSV messages\n\n# PRN number of the satellite\n# GPS = 1..32\n# SBAS = 33..64\n# GLO = 65..96\nuint8 prn\n\n# Elevation, degrees. Maximum 90\nuint8 elevation\n\n# Azimuth, True North degrees. [0, 359]\nuint16 azimuth\n\n# Signal to noise ratio, 0-99 dB. -1 when null in NMEA sentence (not tracking)\nint8 snr\n'
p2343
sg21
S'package_modeler'
p2344
sg23
I0
sg24
S'/opt/ros/melodic/share/nmea_msgs/msg/GpgsvSatellite.msg'
p2345
sbsS'object_recognition_msgs/ObjectRecognitionActionFeedback'
p2346
g0
(g9
g2
Ntp2347
Rp2348
(dp2349
g13
S'msg'
p2350
sg15
S'object_recognition_msgs/ObjectRecognitionActionFeedback'
p2351
sg17
S'object_recognition_msgs'
p2352
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nObjectRecognitionFeedback feedback\n'
p2353
sg21
S'package_modeler'
p2354
sg23
I0
sg24
S'/opt/ros/melodic/share/object_recognition_msgs/msg/ObjectRecognitionActionFeedback.msg'
p2355
sbsS'actionlib_msgs/GoalStatus'
p2356
g0
(g9
g2
Ntp2357
Rp2358
(dp2359
g13
S'msg'
p2360
sg15
S'actionlib_msgs/GoalStatus'
p2361
sg17
S'actionlib_msgs'
p2362
sg19
S'\nGoalID goal_id\nuint8 status\nuint8 PENDING         = 0   # The goal has yet to be processed by the action server\nuint8 ACTIVE          = 1   # The goal is currently being processed by the action server\nuint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing\n                            #   and has since completed its execution (Terminal State)\nuint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)\nuint8 ABORTED         = 4   # The goal was aborted during execution by the action server due\n                            #    to some failure (Terminal State)\nuint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,\n                            #    because the goal was unattainable or invalid (Terminal State)\nuint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing\n                            #    and has not yet completed execution\nuint8 RECALLING       = 7   # The goal received a cancel request before it started executing,\n                            #    but the action server has not yet confirmed that the goal is canceled\nuint8 RECALLED        = 8   # The goal received a cancel request before it started executing\n                            #    and was successfully cancelled (Terminal State)\nuint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be\n                            #    sent over the wire by an action server\n\n#Allow for the user to associate a string with GoalStatus for debugging\nstring text\n\n'
p2363
sg21
S'package_modeler'
p2364
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_msgs/msg/GoalStatus.msg'
p2365
sbsS'move_base_msgs/MoveBaseActionFeedback'
p2366
g0
(g9
g2
Ntp2367
Rp2368
(dp2369
g13
S'msg'
p2370
sg15
S'move_base_msgs/MoveBaseActionFeedback'
p2371
sg17
S'move_base_msgs'
p2372
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nMoveBaseFeedback feedback\n'
p2373
sg21
S'package_modeler'
p2374
sg23
I0
sg24
S'/opt/ros/melodic/share/move_base_msgs/msg/MoveBaseActionFeedback.msg'
p2375
sbsS'dynamic_reconfigure/StrParameter'
p2376
g0
(g9
g2
Ntp2377
Rp2378
(dp2379
g13
S'msg'
p2380
sg15
S'dynamic_reconfigure/StrParameter'
p2381
sg17
S'dynamic_reconfigure'
p2382
sg19
S'\nstring name\nstring value\n'
p2383
sg21
S'package_modeler'
p2384
sg23
I0
sg24
S'/opt/ros/melodic/share/dynamic_reconfigure/msg/StrParameter.msg'
p2385
sbsS'geometry_msgs/Pose2D'
p2386
g0
(g9
g2
Ntp2387
Rp2388
(dp2389
g13
S'msg'
p2390
sg15
S'geometry_msgs/Pose2D'
p2391
sg17
S'geometry_msgs'
p2392
sg19
S"\n# Deprecated\n# Please use the full 3D pose.\n\n# In general our recommendation is to use a full 3D representation of everything and for 2D specific applications make the appropriate projections into the plane for their calculations but optimally will preserve the 3D information during processing.\n\n# If we have parallel copies of 2D datatypes every UI and other pipeline will end up needing to have dual interfaces to plot everything. And you will end up with not being able to use 3D tools for 2D use cases even if they're completely valid, as you'd have to reimplement it with different inputs and outputs. It's not particularly hard to plot the 2D pose or compute the yaw error for the Pose message and there are already tools and libraries that can do this for you.\n\n\n# This expresses a position and orientation on a 2D manifold.\n\nfloat64 x\nfloat64 y\nfloat64 theta\n"
p2393
sg21
S'package_modeler'
p2394
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/Pose2D.msg'
p2395
sbsS'geometry_msgs/PoseStamped'
p2396
g0
(g9
g2
Ntp2397
Rp2398
(dp2399
g13
S'msg'
p2400
sg15
S'geometry_msgs/PoseStamped'
p2401
sg17
S'geometry_msgs'
p2402
sg19
S'\n# A Pose with reference coordinate frame and timestamp\nHeader header\nPose pose\n'
p2403
sg21
S'package_modeler'
p2404
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/PoseStamped.msg'
p2405
sbsS'moveit_msgs/PickupActionFeedback'
p2406
g0
(g9
g2
Ntp2407
Rp2408
(dp2409
g13
S'msg'
p2410
sg15
S'moveit_msgs/PickupActionFeedback'
p2411
sg17
S'moveit_msgs'
p2412
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nPickupFeedback feedback\n'
p2413
sg21
S'package_modeler'
p2414
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PickupActionFeedback.msg'
p2415
sbsS'control_msgs/FollowJointTrajectoryGoal'
p2416
g0
(g9
g2
Ntp2417
Rp2418
(dp2419
g13
S'msg'
p2420
sg15
S'control_msgs/FollowJointTrajectoryGoal'
p2421
sg17
S'control_msgs'
p2422
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n# The joint trajectory to follow\ntrajectory_msgs/JointTrajectory trajectory\n\n# Tolerances for the trajectory.  If the measured joint values fall\n# outside the tolerances the trajectory goal is aborted.  Any\n# tolerances that are not specified (by being omitted or set to 0) are\n# set to the defaults for the action server (often taken from the\n# parameter server).\n\n# Tolerances applied to the joints as the trajectory is executed.  If\n# violated, the goal aborts with error_code set to\n# PATH_TOLERANCE_VIOLATED.\nJointTolerance[] path_tolerance\n\n# To report success, the joints must be within goal_tolerance of the\n# final trajectory value.  The goal must be achieved by time the\n# trajectory ends plus goal_time_tolerance.  (goal_time_tolerance\n# allows some leeway in time, so that the trajectory goal can still\n# succeed even if the joints reach the goal some time after the\n# precise end time of the trajectory).\n#\n# If the joints are not within goal_tolerance after "trajectory finish\n# time" + goal_time_tolerance, the goal aborts with error_code set to\n# GOAL_TOLERANCE_VIOLATED\nJointTolerance[] goal_tolerance\nduration goal_time_tolerance\n\n'
p2423
sg21
S'package_modeler'
p2424
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/FollowJointTrajectoryGoal.msg'
p2425
sbsS'controller_manager_msgs/ControllerStatistics'
p2426
g0
(g9
g2
Ntp2427
Rp2428
(dp2429
g13
S'msg'
p2430
sg15
S'controller_manager_msgs/ControllerStatistics'
p2431
sg17
S'controller_manager_msgs'
p2432
sg19
S'\n# This message contains the state of one realtime controller\n# that was spawned in the controller manager\n\n# the name of the controller\nstring name\n\n# the type of the controller\nstring type\n\n# the time at which these controller statistics were measured\ntime timestamp\n\n# bool that indicates if the controller is currently\n# in a running or a stopped state\nbool running\n\n# the maximum time the update loop of the controller ever needed to complete\nduration max_time\n\n# the average time the update loop of the controller needs to complete.\n# the average is computed in a sliding time window.\nduration mean_time\n\n# the variance on the time the update loop of the controller needs to complete.\n# the variance applies to a sliding time window.\nduration variance_time\n\n# the number of times this controller broke the realtime loop\nint32 num_control_loop_overruns\n\n# the timestamp of the last time this controller broke the realtime loop\ntime time_last_control_loop_overrun'
p2433
sg21
S'package_modeler'
p2434
sg23
I0
sg24
S'/opt/ros/melodic/share/controller_manager_msgs/msg/ControllerStatistics.msg'
p2435
sbsS'turtle_actionlib/ShapeActionFeedback'
p2436
g0
(g9
g2
Ntp2437
Rp2438
(dp2439
g13
S'msg'
p2440
sg15
S'turtle_actionlib/ShapeActionFeedback'
p2441
sg17
S'turtle_actionlib'
p2442
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nShapeFeedback feedback\n'
p2443
sg21
S'package_modeler'
p2444
sg23
I0
sg24
S'/opt/ros/melodic/share/turtle_actionlib/msg/ShapeActionFeedback.msg'
p2445
sbsS'sensor_msgs/FluidPressure'
p2446
g0
(g9
g2
Ntp2447
Rp2448
(dp2449
g13
S'msg'
p2450
sg15
S'sensor_msgs/FluidPressure'
p2451
sg17
S'sensor_msgs'
p2452
sg19
S'\n # Single pressure reading.  This message is appropriate for measuring the\n # pressure inside of a fluid (air, water, etc).  This also includes\n # atmospheric or barometric pressure.\n\n # This message is not appropriate for force/pressure contact sensors.\n\n Header header           # timestamp of the measurement\n                         # frame_id is the location of the pressure sensor\n\n float64 fluid_pressure  # Absolute pressure reading in Pascals.\n\n float64 variance        # 0 is interpreted as variance unknown'
p2453
sg21
S'package_modeler'
p2454
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/FluidPressure.msg'
p2455
sbsS'moveit_msgs/DisplayRobotState'
p2456
g0
(g9
g2
Ntp2457
Rp2458
(dp2459
g13
S'msg'
p2460
sg15
S'moveit_msgs/DisplayRobotState'
p2461
sg17
S'moveit_msgs'
p2462
sg19
S'\n# The robot state to display\nRobotState state\n\n# Optionally, various links can be highlighted\nObjectColor[] highlight_links\n'
p2463
sg21
S'package_modeler'
p2464
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/DisplayRobotState.msg'
p2465
sbsS'turtle_actionlib/ShapeFeedback'
p2466
g0
(g9
g2
Ntp2467
Rp2468
(dp2469
g13
S'msg'
p2470
sg15
S'turtle_actionlib/ShapeFeedback'
p2471
sg17
S'turtle_actionlib'
p2472
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n#feedback\n\n\n'
p2473
sg21
S'package_modeler'
p2474
sg23
I0
sg24
S'/opt/ros/melodic/share/turtle_actionlib/msg/ShapeFeedback.msg'
p2475
sbsS'trajectory_msgs/JointTrajectory'
p2476
g0
(g9
g2
Ntp2477
Rp2478
(dp2479
g13
S'msg'
p2480
sg15
S'trajectory_msgs/JointTrajectory'
p2481
sg17
S'trajectory_msgs'
p2482
sg19
S'\nHeader header\nstring[] joint_names\nJointTrajectoryPoint[] points'
p2483
sg21
S'package_modeler'
p2484
sg23
I0
sg24
S'/opt/ros/melodic/share/trajectory_msgs/msg/JointTrajectory.msg'
p2485
sbsS'moveit_msgs/MoveGroupSequenceFeedback'
p2486
g0
(g9
g2
Ntp2487
Rp2488
(dp2489
g13
S'msg'
p2490
sg15
S'moveit_msgs/MoveGroupSequenceFeedback'
p2491
sg17
S'moveit_msgs'
p2492
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n# The internal state that the move group action currently is in\nstring state\n\n'
p2493
sg21
S'package_modeler'
p2494
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveGroupSequenceFeedback.msg'
p2495
sbsS'control_msgs/SingleJointPositionActionResult'
p2496
g0
(g9
g2
Ntp2497
Rp2498
(dp2499
g13
S'msg'
p2500
sg15
S'control_msgs/SingleJointPositionActionResult'
p2501
sg17
S'control_msgs'
p2502
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nSingleJointPositionResult result\n'
p2503
sg21
S'package_modeler'
p2504
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/SingleJointPositionActionResult.msg'
p2505
sbsS'shape_msgs/MeshTriangle'
p2506
g0
(g9
g2
Ntp2507
Rp2508
(dp2509
g13
S'msg'
p2510
sg15
S'shape_msgs/MeshTriangle'
p2511
sg17
S'shape_msgs'
p2512
sg19
S"\n# Definition of a triangle's vertices\nuint32[3] vertex_indices\n"
p2513
sg21
S'package_modeler'
p2514
sg23
I0
sg24
S'/opt/ros/melodic/share/shape_msgs/msg/MeshTriangle.msg'
p2515
sbsS'urg_node/Status'
p2516
g0
(g9
g2
Ntp2517
Rp2518
(dp2519
g13
S'msg'
p2520
sg15
S'urg_node/Status'
p2521
sg17
S'urg_node'
p2522
sg19
S'\n# Normal vs setting in the UAM manual.\nuint16 NORMAL=0\nuint16 SETTING=1\nuint16 operating_mode\n\n# The configured area number the stop occurred in.\nuint16 area_number\n# If the laser is reporting an error or not.\nbool error_status\n# The error code the laser is reporting.\nuint16 error_code\n# Does the laser report that it is locked out.\nbool lockout_status\n# Distance in mm the stop was reported at.\nuint16 distance\n# The reported angle of the stop in deg.\nfloat32 angle\n'
p2523
sg21
S'package_modeler'
p2524
sg23
I0
sg24
S'/opt/ros/melodic/share/urg_node/msg/Status.msg'
p2525
sbsS'visualization_msgs/InteractiveMarkerFeedback'
p2526
g0
(g9
g2
Ntp2527
Rp2528
(dp2529
g13
S'msg'
p2530
sg15
S'visualization_msgs/InteractiveMarkerFeedback'
p2531
sg17
S'visualization_msgs'
p2532
sg19
S'\n# Time/frame info.\nHeader header\n\n# Identifying string. Must be unique in the topic namespace.\nstring client_id\n\n# Feedback message sent back from the GUI, e.g.\n# when the status of an interactive marker was modified by the user.\n\n# Specifies which interactive marker and control this message refers to\nstring marker_name\nstring control_name\n\n# Type of the event\n# KEEP_ALIVE: sent while dragging to keep up control of the marker\n# MENU_SELECT: a menu entry has been selected\n# BUTTON_CLICK: a button control has been clicked\n# POSE_UPDATE: the pose has been changed using one of the controls\nuint8 KEEP_ALIVE = 0\nuint8 POSE_UPDATE = 1\nuint8 MENU_SELECT = 2\nuint8 BUTTON_CLICK = 3\n\nuint8 MOUSE_DOWN = 4\nuint8 MOUSE_UP = 5\n\nuint8 event_type\n\n# Current pose of the marker\n# Note: Has to be valid for all feedback types.\ngeometry_msgs/Pose pose\n\n# Contains the ID of the selected menu entry\n# Only valid for MENU_SELECT events.\nuint32 menu_entry_id\n\n# If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point\n# may contain the 3 dimensional position of the event on the\n# control.  If it does, mouse_point_valid will be true.  mouse_point\n# will be relative to the frame listed in the header.\ngeometry_msgs/Point mouse_point\nbool mouse_point_valid\n'
p2533
sg21
S'package_modeler'
p2534
sg23
I0
sg24
S'/opt/ros/melodic/share/visualization_msgs/msg/InteractiveMarkerFeedback.msg'
p2535
sbsS'std_msgs/ByteMultiArray'
p2536
g0
(g9
g2
Ntp2537
Rp2538
(dp2539
g13
S'msg'
p2540
sg15
S'std_msgs/ByteMultiArray'
p2541
sg17
S'std_msgs'
p2542
sg19
S'\n# Please look at the MultiArrayLayout message definition for\n# documentation on all multiarrays.\n\nMultiArrayLayout  layout        # specification of data layout\nbyte[]            data          # array of data\n\n'
p2543
sg21
S'package_modeler'
p2544
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/ByteMultiArray.msg'
p2545
sbsS'actionlib/TwoIntsActionGoal'
p2546
g0
(g9
g2
Ntp2547
Rp2548
(dp2549
g13
S'msg'
p2550
sg15
S'actionlib/TwoIntsActionGoal'
p2551
sg17
S'actionlib'
p2552
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nTwoIntsGoal goal\n'
p2553
sg21
S'package_modeler'
p2554
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TwoIntsActionGoal.msg'
p2555
sbsS'moveit_msgs/MoveGroupSequenceActionFeedback'
p2556
g0
(g9
g2
Ntp2557
Rp2558
(dp2559
g13
S'msg'
p2560
sg15
S'moveit_msgs/MoveGroupSequenceActionFeedback'
p2561
sg17
S'moveit_msgs'
p2562
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nMoveGroupSequenceFeedback feedback\n'
p2563
sg21
S'package_modeler'
p2564
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveGroupSequenceActionFeedback.msg'
p2565
sbsS'control_msgs/JointTrajectoryFeedback'
p2566
g0
(g9
g2
Ntp2567
Rp2568
(dp2569
g13
S'msg'
p2570
sg15
S'control_msgs/JointTrajectoryFeedback'
p2571
sg17
S'control_msgs'
p2572
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n'
p2573
sg21
S'package_modeler'
p2574
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/JointTrajectoryFeedback.msg'
p2575
sbsS'rosgraph_msgs/Log'
p2576
g0
(g9
g2
Ntp2577
Rp2578
(dp2579
g13
S'msg'
p2580
sg15
S'rosgraph_msgs/Log'
p2581
sg17
S'rosgraph_msgs'
p2582
sg19
S'\n##\n## Severity level constants\n##\nbyte DEBUG=1 #debug level\nbyte INFO=2  #general level\nbyte WARN=4  #warning level\nbyte ERROR=8 #error level\nbyte FATAL=16 #fatal/critical level\n##\n## Fields\n##\nHeader header\nbyte level\nstring name # name of the node\nstring msg # message \nstring file # file the message came from\nstring function # function the message came from\nuint32 line # line the message came from\nstring[] topics # topic names that the node publishes\n'
p2583
sg21
S'package_modeler'
p2584
sg23
I0
sg24
S'/opt/ros/melodic/share/rosgraph_msgs/msg/Log.msg'
p2585
sbsS'std_msgs/Int32MultiArray'
p2586
g0
(g9
g2
Ntp2587
Rp2588
(dp2589
g13
S'msg'
p2590
sg15
S'std_msgs/Int32MultiArray'
p2591
sg17
S'std_msgs'
p2592
sg19
S'\n# Please look at the MultiArrayLayout message definition for\n# documentation on all multiarrays.\n\nMultiArrayLayout  layout        # specification of data layout\nint32[]           data          # array of data\n\n'
p2593
sg21
S'package_modeler'
p2594
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Int32MultiArray.msg'
p2595
sbsS'moveit_msgs/BoundingVolume'
p2596
g0
(g9
g2
Ntp2597
Rp2598
(dp2599
g13
S'msg'
p2600
sg15
S'moveit_msgs/BoundingVolume'
p2601
sg17
S'moveit_msgs'
p2602
sg19
S'\n# Define a volume in 3D\n\n# A set of solid geometric primitives that make up the volume to define (as a union)\nshape_msgs/SolidPrimitive[] primitives\n\n# The poses at which the primitives are located\ngeometry_msgs/Pose[] primitive_poses\n\n# In addition to primitives, meshes can be specified to add to the bounding volume (again, as union)\nshape_msgs/Mesh[] meshes\n\n# The poses at which the meshes are located\ngeometry_msgs/Pose[] mesh_poses\n'
p2603
sg21
S'package_modeler'
p2604
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/BoundingVolume.msg'
p2605
sbsS'control_msgs/PointHeadGoal'
p2606
g0
(g9
g2
Ntp2607
Rp2608
(dp2609
g13
S'msg'
p2610
sg15
S'control_msgs/PointHeadGoal'
p2611
sg17
S'control_msgs'
p2612
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\ngeometry_msgs/PointStamped target\ngeometry_msgs/Vector3 pointing_axis\nstring pointing_frame\nduration min_duration\nfloat64 max_velocity\n'
p2613
sg21
S'package_modeler'
p2614
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/PointHeadGoal.msg'
p2615
sbsS'geometry_msgs/Transform'
p2616
g0
(g9
g2
Ntp2617
Rp2618
(dp2619
g13
S'msg'
p2620
sg15
S'geometry_msgs/Transform'
p2621
sg17
S'geometry_msgs'
p2622
sg19
S'\n# This represents the transform between two coordinate frames in free space.\n\nVector3 translation\nQuaternion rotation\n'
p2623
sg21
S'package_modeler'
p2624
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/Transform.msg'
p2625
sbsS'actionlib_msgs/GoalID'
p2626
g0
(g9
g2
Ntp2627
Rp2628
(dp2629
g13
S'msg'
p2630
sg15
S'actionlib_msgs/GoalID'
p2631
sg17
S'actionlib_msgs'
p2632
sg19
S'\n# The stamp should store the time at which this goal was requested.\n# It is used by an action server when it tries to preempt all\n# goals that were requested before a certain time\ntime stamp\n\n# The id provides a way to associate feedback and\n# result message with specific goal requests. The id\n# specified must be unique.\nstring id\n\n'
p2633
sg21
S'package_modeler'
p2634
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_msgs/msg/GoalID.msg'
p2635
sbsS'moveit_msgs/MoveGroupActionFeedback'
p2636
g0
(g9
g2
Ntp2637
Rp2638
(dp2639
g13
S'msg'
p2640
sg15
S'moveit_msgs/MoveGroupActionFeedback'
p2641
sg17
S'moveit_msgs'
p2642
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nMoveGroupFeedback feedback\n'
p2643
sg21
S'package_modeler'
p2644
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveGroupActionFeedback.msg'
p2645
sbsS'tf2_msgs/LookupTransformActionResult'
p2646
g0
(g9
g2
Ntp2647
Rp2648
(dp2649
g13
S'msg'
p2650
sg15
S'tf2_msgs/LookupTransformActionResult'
p2651
sg17
S'tf2_msgs'
p2652
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nLookupTransformResult result\n'
p2653
sg21
S'package_modeler'
p2654
sg23
I0
sg24
S'/opt/ros/melodic/share/tf2_msgs/msg/LookupTransformActionResult.msg'
p2655
sbsS'control_msgs/FollowJointTrajectoryResult'
p2656
g0
(g9
g2
Ntp2657
Rp2658
(dp2659
g13
S'msg'
p2660
sg15
S'control_msgs/FollowJointTrajectoryResult'
p2661
sg17
S'control_msgs'
p2662
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nint32 error_code\nint32 SUCCESSFUL = 0\nint32 INVALID_GOAL = -1\nint32 INVALID_JOINTS = -2\nint32 OLD_HEADER_TIMESTAMP = -3\nint32 PATH_TOLERANCE_VIOLATED = -4\nint32 GOAL_TOLERANCE_VIOLATED = -5\n\n# Human readable description of the error code. Contains complementary\n# information that is especially useful when execution fails, for instance:\n# - INVALID_GOAL: The reason for the invalid goal (e.g., the requested\n#   trajectory is in the past).\n# - INVALID_JOINTS: The mismatch between the expected controller joints\n#   and those provided in the goal.\n# - PATH_TOLERANCE_VIOLATED and GOAL_TOLERANCE_VIOLATED: Which joint\n#   violated which tolerance, and by how much.\nstring error_string\n\n'
p2663
sg21
S'package_modeler'
p2664
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/FollowJointTrajectoryResult.msg'
p2665
sbsS'shape_msgs/SolidPrimitive'
p2666
g0
(g9
g2
Ntp2667
Rp2668
(dp2669
g13
S'msg'
p2670
sg15
S'shape_msgs/SolidPrimitive'
p2671
sg17
S'shape_msgs'
p2672
sg19
S"\n# Define box, sphere, cylinder, cone \n# All shapes are defined to have their bounding boxes centered around 0,0,0.\n\nuint8 BOX=1\nuint8 SPHERE=2\nuint8 CYLINDER=3\nuint8 CONE=4\n\n# The type of the shape\nuint8 type\n\n\n# The dimensions of the shape\nfloat64[] dimensions\n\n# The meaning of the shape dimensions: each constant defines the index in the 'dimensions' array\n\n# For the BOX type, the X, Y, and Z dimensions are the length of the corresponding\n# sides of the box.\nuint8 BOX_X=0\nuint8 BOX_Y=1\nuint8 BOX_Z=2\n\n\n# For the SPHERE type, only one component is used, and it gives the radius of\n# the sphere.\nuint8 SPHERE_RADIUS=0\n\n\n# For the CYLINDER and CONE types, the center line is oriented along\n# the Z axis.  Therefore the CYLINDER_HEIGHT (CONE_HEIGHT) component\n# of dimensions gives the height of the cylinder (cone).  The\n# CYLINDER_RADIUS (CONE_RADIUS) component of dimensions gives the\n# radius of the base of the cylinder (cone).  Cone and cylinder\n# primitives are defined to be circular. The tip of the cone is\n# pointing up, along +Z axis.\n\nuint8 CYLINDER_HEIGHT=0\nuint8 CYLINDER_RADIUS=1\n\nuint8 CONE_HEIGHT=0\nuint8 CONE_RADIUS=1\n"
p2673
sg21
S'package_modeler'
p2674
sg23
I0
sg24
S'/opt/ros/melodic/share/shape_msgs/msg/SolidPrimitive.msg'
p2675
sbsS'moveit_msgs/OrientationConstraint'
p2676
g0
(g9
g2
Ntp2677
Rp2678
(dp2679
g13
S'msg'
p2680
sg15
S'moveit_msgs/OrientationConstraint'
p2681
sg17
S'moveit_msgs'
p2682
sg19
S'\n# This message contains the definition of an orientation constraint.\n\nHeader header\n\n# The desired orientation of the robot link specified as a quaternion\ngeometry_msgs/Quaternion orientation\n\n# The robot link this constraint refers to\nstring link_name\n\n# optional axis-angle error tolerances specified\nfloat64 absolute_x_axis_tolerance\nfloat64 absolute_y_axis_tolerance\nfloat64 absolute_z_axis_tolerance\n\n# A weighting factor for this constraint (denotes relative importance to other constraints. Closer to zero means less important)\nfloat64 weight\n'
p2683
sg21
S'package_modeler'
p2684
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/OrientationConstraint.msg'
p2685
sbsS'control_msgs/JointTrajectoryResult'
p2686
g0
(g9
g2
Ntp2687
Rp2688
(dp2689
g13
S'msg'
p2690
sg15
S'control_msgs/JointTrajectoryResult'
p2691
sg17
S'control_msgs'
p2692
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n'
p2693
sg21
S'package_modeler'
p2694
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/JointTrajectoryResult.msg'
p2695
sbsS'sensor_msgs/JoyFeedback'
p2696
g0
(g9
g2
Ntp2697
Rp2698
(dp2699
g13
S'msg'
p2700
sg15
S'sensor_msgs/JoyFeedback'
p2701
sg17
S'sensor_msgs'
p2702
sg19
S'\n# Declare of the type of feedback\nuint8 TYPE_LED    = 0\nuint8 TYPE_RUMBLE = 1\nuint8 TYPE_BUZZER = 2\n\nuint8 type\n\n# This will hold an id number for each type of each feedback.\n# Example, the first led would be id=0, the second would be id=1\nuint8 id\n\n# Intensity of the feedback, from 0.0 to 1.0, inclusive.  If device is\n# actually binary, driver should treat 0<=x<0.5 as off, 0.5<=x<=1 as on.\nfloat32 intensity\n\n'
p2703
sg21
S'package_modeler'
p2704
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/JoyFeedback.msg'
p2705
sbsS'control_msgs/FollowJointTrajectoryActionResult'
p2706
g0
(g9
g2
Ntp2707
Rp2708
(dp2709
g13
S'msg'
p2710
sg15
S'control_msgs/FollowJointTrajectoryActionResult'
p2711
sg17
S'control_msgs'
p2712
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nFollowJointTrajectoryResult result\n'
p2713
sg21
S'package_modeler'
p2714
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/FollowJointTrajectoryActionResult.msg'
p2715
sbsS'nav_msgs/GetMapActionResult'
p2716
g0
(g9
g2
Ntp2717
Rp2718
(dp2719
g13
S'msg'
p2720
sg15
S'nav_msgs/GetMapActionResult'
p2721
sg17
S'nav_msgs'
p2722
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nGetMapResult result\n'
p2723
sg21
S'package_modeler'
p2724
sg23
I0
sg24
S'/opt/ros/melodic/share/nav_msgs/msg/GetMapActionResult.msg'
p2725
sbsS'moveit_msgs/MoveGroupResult'
p2726
g0
(g9
g2
Ntp2727
Rp2728
(dp2729
g13
S'msg'
p2730
sg15
S'moveit_msgs/MoveGroupResult'
p2731
sg17
S'moveit_msgs'
p2732
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n# An error code reflecting what went wrong\nMoveItErrorCodes error_code\n\n# The full starting state of the robot at the start of the trajectory\nmoveit_msgs/RobotState trajectory_start\n\n# The trajectory that moved group produced for execution\nmoveit_msgs/RobotTrajectory planned_trajectory\n\n# The trace of the trajectory recorded during execution\nmoveit_msgs/RobotTrajectory executed_trajectory\n\n# The amount of time it took to complete the motion plan\nfloat64 planning_time\n\n'
p2733
sg21
S'package_modeler'
p2734
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveGroupResult.msg'
p2735
sbsS'geometry_msgs/Polygon'
p2736
g0
(g9
g2
Ntp2737
Rp2738
(dp2739
g13
S'msg'
p2740
sg15
S'geometry_msgs/Polygon'
p2741
sg17
S'geometry_msgs'
p2742
sg19
S'\n#A specification of a polygon where the first and last points are assumed to be connected\nPoint32[] points\n'
p2743
sg21
S'package_modeler'
p2744
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/Polygon.msg'
p2745
sbsS'actionlib/TestRequestActionFeedback'
p2746
g0
(g9
g2
Ntp2747
Rp2748
(dp2749
g13
S'msg'
p2750
sg15
S'actionlib/TestRequestActionFeedback'
p2751
sg17
S'actionlib'
p2752
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nTestRequestFeedback feedback\n'
p2753
sg21
S'package_modeler'
p2754
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TestRequestActionFeedback.msg'
p2755
sbsS'moveit_msgs/PlaceAction'
p2756
g0
(g9
g2
Ntp2757
Rp2758
(dp2759
g13
S'msg'
p2760
sg15
S'moveit_msgs/PlaceAction'
p2761
sg17
S'moveit_msgs'
p2762
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nPlaceActionGoal action_goal\nPlaceActionResult action_result\nPlaceActionFeedback action_feedback\n'
p2763
sg21
S'package_modeler'
p2764
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PlaceAction.msg'
p2765
sbsS'sensor_msgs/NavSatStatus'
p2766
g0
(g9
g2
Ntp2767
Rp2768
(dp2769
g13
S'msg'
p2770
sg15
S'sensor_msgs/NavSatStatus'
p2771
sg17
S'sensor_msgs'
p2772
sg19
S'\n# Navigation Satellite fix status for any Global Navigation Satellite System\n\n# Whether to output an augmented fix is determined by both the fix\n# type and the last time differential corrections were received.  A\n# fix is valid when status >= STATUS_FIX.\n\nint8 STATUS_NO_FIX =  -1        # unable to fix position\nint8 STATUS_FIX =      0        # unaugmented fix\nint8 STATUS_SBAS_FIX = 1        # with satellite-based augmentation\nint8 STATUS_GBAS_FIX = 2        # with ground-based augmentation\n\nint8 status\n\n# Bits defining which Global Navigation Satellite System signals were\n# used by the receiver.\n\nuint16 SERVICE_GPS =     1\nuint16 SERVICE_GLONASS = 2\nuint16 SERVICE_COMPASS = 4      # includes BeiDou.\nuint16 SERVICE_GALILEO = 8\n\nuint16 service\n'
p2773
sg21
S'package_modeler'
p2774
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/NavSatStatus.msg'
p2775
sbsS'moveit_msgs/OrientedBoundingBox'
p2776
g0
(g9
g2
Ntp2777
Rp2778
(dp2779
g13
S'msg'
p2780
sg15
S'moveit_msgs/OrientedBoundingBox'
p2781
sg17
S'moveit_msgs'
p2782
sg19
S'\n# the pose of the box\ngeometry_msgs/Pose pose\n\n# the extents of the box, assuming the center is at the origin\ngeometry_msgs/Point32 extents\n'
p2783
sg21
S'package_modeler'
p2784
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/OrientedBoundingBox.msg'
p2785
sbsS'std_msgs/Float64MultiArray'
p2786
g0
(g9
g2
Ntp2787
Rp2788
(dp2789
g13
S'msg'
p2790
sg15
S'std_msgs/Float64MultiArray'
p2791
sg17
S'std_msgs'
p2792
sg19
S'\n# Please look at the MultiArrayLayout message definition for\n# documentation on all multiarrays.\n\nMultiArrayLayout  layout        # specification of data layout\nfloat64[]         data          # array of data\n\n'
p2793
sg21
S'package_modeler'
p2794
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Float64MultiArray.msg'
p2795
sbsS'std_msgs/UInt64'
p2796
g0
(g9
g2
Ntp2797
Rp2798
(dp2799
g13
S'msg'
p2800
sg15
S'std_msgs/UInt64'
p2801
sg17
S'std_msgs'
p2802
sg19
S'\nuint64 data'
p2803
sg21
S'package_modeler'
p2804
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/UInt64.msg'
p2805
sbsS'twist_mux_msgs/JoyPriorityFeedback'
p2806
g0
(g9
g2
Ntp2807
Rp2808
(dp2809
g13
S'msg'
p2810
sg15
S'twist_mux_msgs/JoyPriorityFeedback'
p2811
sg17
S'twist_mux_msgs'
p2812
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n'
p2813
sg21
S'package_modeler'
p2814
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/msg/JoyPriorityFeedback.msg'
p2815
sbsS'actionlib/TestGoal'
p2816
g0
(g9
g2
Ntp2817
Rp2818
(dp2819
g13
S'msg'
p2820
sg15
S'actionlib/TestGoal'
p2821
sg17
S'actionlib'
p2822
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nint32 goal\n'
p2823
sg21
S'package_modeler'
p2824
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TestGoal.msg'
p2825
sbsS'rosgraph_msgs/TopicStatistics'
p2826
g0
(g9
g2
Ntp2827
Rp2828
(dp2829
g13
S'msg'
p2830
sg15
S'rosgraph_msgs/TopicStatistics'
p2831
sg17
S'rosgraph_msgs'
p2832
sg19
S'\n# name of the topic\nstring topic\n\n# node id of the publisher\nstring node_pub\n\n# node id of the subscriber\nstring node_sub\n\n# the statistics apply to this time window\ntime window_start\ntime window_stop\n\n# number of messages delivered during the window\nint32 delivered_msgs\n# numbers of messages dropped during the window\nint32 dropped_msgs\n\n# traffic during the window, in bytes\nint32 traffic\n\n# mean/stddev/max period between two messages\nduration period_mean\nduration period_stddev\nduration period_max\n\n# mean/stddev/max age of the message based on the\n# timestamp in the message header. In case the\n# message does not have a header, it will be 0.\nduration stamp_age_mean\nduration stamp_age_stddev\nduration stamp_age_max\n'
p2833
sg21
S'package_modeler'
p2834
sg23
I0
sg24
S'/opt/ros/melodic/share/rosgraph_msgs/msg/TopicStatistics.msg'
p2835
sbsS'actionlib/TwoIntsResult'
p2836
g0
(g9
g2
Ntp2837
Rp2838
(dp2839
g13
S'msg'
p2840
sg15
S'actionlib/TwoIntsResult'
p2841
sg17
S'actionlib'
p2842
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nint64 sum\n'
p2843
sg21
S'package_modeler'
p2844
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TwoIntsResult.msg'
p2845
sbsS'nmea_msgs/Gpgsa'
p2846
g0
(g9
g2
Ntp2847
Rp2848
(dp2849
g13
S'msg'
p2850
sg15
S'nmea_msgs/Gpgsa'
p2851
sg17
S'nmea_msgs'
p2852
sg19
S'\n# Message from GPGSA NMEA String\nHeader header\n\nstring message_id\n\nstring auto_manual_mode\nuint8 fix_mode\n\nuint8[] sv_ids\n\nfloat32 pdop\nfloat32 hdop\nfloat32 vdop\n'
p2853
sg21
S'package_modeler'
p2854
sg23
I0
sg24
S'/opt/ros/melodic/share/nmea_msgs/msg/Gpgsa.msg'
p2855
sbsS'object_recognition_msgs/ObjectRecognitionFeedback'
p2856
g0
(g9
g2
Ntp2857
Rp2858
(dp2859
g13
S'msg'
p2860
sg15
S'object_recognition_msgs/ObjectRecognitionFeedback'
p2861
sg17
S'object_recognition_msgs'
p2862
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n#no feedback\n\n'
p2863
sg21
S'package_modeler'
p2864
sg23
I0
sg24
S'/opt/ros/melodic/share/object_recognition_msgs/msg/ObjectRecognitionFeedback.msg'
p2865
sbsS'object_recognition_msgs/RecognizedObject'
p2866
g0
(g9
g2
Ntp2867
Rp2868
(dp2869
g13
S'msg'
p2870
sg15
S'object_recognition_msgs/RecognizedObject'
p2871
sg17
S'object_recognition_msgs'
p2872
sg19
S"\n##################################################### HEADER ###########################################################\n\n# The header frame corresponds to the pose frame, NOT the point_cloud frame.\nHeader header\n\n################################################## OBJECT INFO #########################################################\n\n# Contains information about the type and the position of a found object\n# Some of those fields might not be filled because the used techniques do not fill them or because the user does not\n# request them\n\n# The type of the found object\nobject_recognition_msgs/ObjectType type\n\n#confidence: how sure you are it is that object and not another one.\n# It is between 0 and 1 and the closer to one it is the better\nfloat32 confidence\n\n################################################ OBJECT CLUSTERS #######################################################\n\n# Sometimes you can extract the 3d points that belong to the object, in the frames of the original sensors\n# (it is an array as you might have several sensors)\nsensor_msgs/PointCloud2[] point_clouds\n\n# Sometimes, you can only provide a bounding box/shape, even in 3d\n# This is in the pose frame\nshape_msgs/Mesh bounding_mesh\n\n# Sometimes, you only have 2d input so you can't really give a pose, you just get a contour, or a box\n# The last point will be linked to the first one automatically\ngeometry_msgs/Point[] bounding_contours\n\n#################################################### POSE INFO #########################################################\n\n# This is the result that everybody expects : the pose in some frame given with the input. The units are radian/meters\n# as usual\ngeometry_msgs/PoseWithCovarianceStamped pose\n"
p2873
sg21
S'package_modeler'
p2874
sg23
I0
sg24
S'/opt/ros/melodic/share/object_recognition_msgs/msg/RecognizedObject.msg'
p2875
sbsS'controller_manager_msgs/HardwareInterfaceResources'
p2876
g0
(g9
g2
Ntp2877
Rp2878
(dp2879
g13
S'msg'
p2880
sg15
S'controller_manager_msgs/HardwareInterfaceResources'
p2881
sg17
S'controller_manager_msgs'
p2882
sg19
S'\n# Type of hardware interface\nstring hardware_interface\n# List of resources belonging to the hardware interface\nstring[] resources\n'
p2883
sg21
S'package_modeler'
p2884
sg23
I0
sg24
S'/opt/ros/melodic/share/controller_manager_msgs/msg/HardwareInterfaceResources.msg'
p2885
sbsS'sensor_msgs/JoyFeedbackArray'
p2886
g0
(g9
g2
Ntp2887
Rp2888
(dp2889
g13
S'msg'
p2890
sg15
S'sensor_msgs/JoyFeedbackArray'
p2891
sg17
S'sensor_msgs'
p2892
sg19
S'\n# This message publishes values for multiple feedback at once. \nJoyFeedback[] array'
p2893
sg21
S'package_modeler'
p2894
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/JoyFeedbackArray.msg'
p2895
sbsS'std_msgs/Float64'
p2896
g0
(g9
g2
Ntp2897
Rp2898
(dp2899
g13
S'msg'
p2900
sg15
S'std_msgs/Float64'
p2901
sg17
S'std_msgs'
p2902
sg19
S'\nfloat64 data'
p2903
sg21
S'package_modeler'
p2904
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Float64.msg'
p2905
sbsS'nmea_msgs/Gpgsv'
p2906
g0
(g9
g2
Ntp2907
Rp2908
(dp2909
g13
S'msg'
p2910
sg15
S'nmea_msgs/Gpgsv'
p2911
sg17
S'nmea_msgs'
p2912
sg19
S'\n# Total number of satellites in view and data about satellites\n# Because the NMEA sentence is limited to 4 satellites per message, several\n# of these messages may need to be synthesized to get data about all visible\n# satellites.\n\nHeader header\n\nstring message_id\n\n# Number of messages in this sequence\nuint8 n_msgs\n# This messages number in its sequence. The first message is number 1.\nuint8 msg_number\n\n# Number of satellites currently visible\nuint8 n_satellites\n\n# Up to 4 satellites are described in each message\nGpgsvSatellite[] satellites\n'
p2913
sg21
S'package_modeler'
p2914
sg23
I0
sg24
S'/opt/ros/melodic/share/nmea_msgs/msg/Gpgsv.msg'
p2915
sbsS'cartographer_ros_msgs/StatusResponse'
p2916
g0
(g9
g2
Ntp2917
Rp2918
(dp2919
g13
S'msg'
p2920
sg15
S'cartographer_ros_msgs/StatusResponse'
p2921
sg17
S'cartographer_ros_msgs'
p2922
sg19
S'\n# Copyright 2018 The Cartographer Authors\n#\n# Licensed under the Apache License, Version 2.0 (the "License");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# A common message type to indicate the outcome of a service call.\nuint8 code\nstring message\n'
p2923
sg21
S'package_modeler'
p2924
sg23
I0
sg24
S'/opt/ros/melodic/share/cartographer_ros_msgs/msg/StatusResponse.msg'
p2925
sbsS'moveit_msgs/PlaceResult'
p2926
g0
(g9
g2
Ntp2927
Rp2928
(dp2929
g13
S'msg'
p2930
sg15
S'moveit_msgs/PlaceResult'
p2931
sg17
S'moveit_msgs'
p2932
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n# The result of the place attempt\nMoveItErrorCodes error_code\n\n# The full starting state of the robot at the start of the trajectory\nRobotState trajectory_start\n\n# The trajectory that moved group produced for execution\nRobotTrajectory[] trajectory_stages\n\nstring[] trajectory_descriptions\n\n# The successful place location, if any\nPlaceLocation place_location\n\n# The amount of time in seconds it took to complete the plan\nfloat64 planning_time\n'
p2933
sg21
S'package_modeler'
p2934
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PlaceResult.msg'
p2935
sbsS'capabilities/CapabilitySpec'
p2936
g0
(g9
g2
Ntp2937
Rp2938
(dp2939
g13
S'msg'
p2940
sg15
S'capabilities/CapabilitySpec'
p2941
sg17
S'capabilities'
p2942
sg19
S"\n# Package which contains this spec file\nstring package\n\n# Type of spec file, one of:\n#   'capability_interface'\n#   'semantic_capability_interface'\n#   'capability_provider'\nstring type\n\n# Raw string content of the spec file\nstring content\n\n# The name of the default provider (pulled from ROS param's)\n# (only used for capability_interface specs)\nstring default_provider\n"
p2943
sg21
S'package_modeler'
p2944
sg23
I0
sg24
S'/opt/ros/melodic/share/capabilities/msg/CapabilitySpec.msg'
p2945
sbsS'moveit_msgs/PickupActionResult'
p2946
g0
(g9
g2
Ntp2947
Rp2948
(dp2949
g13
S'msg'
p2950
sg15
S'moveit_msgs/PickupActionResult'
p2951
sg17
S'moveit_msgs'
p2952
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nPickupResult result\n'
p2953
sg21
S'package_modeler'
p2954
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PickupActionResult.msg'
p2955
sbsS'control_msgs/JointTolerance'
p2956
g0
(g9
g2
Ntp2957
Rp2958
(dp2959
g13
S'msg'
p2960
sg15
S'control_msgs/JointTolerance'
p2961
sg17
S'control_msgs'
p2962
sg19
S'\n# The tolerances specify the amount the position, velocity, and\n# accelerations can vary from the setpoints.  For example, in the case\n# of trajectory control, when the actual position varies beyond\n# (desired position + position tolerance), the trajectory goal may\n# abort.\n# \n# There are two special values for tolerances:\n#  * 0 - The tolerance is unspecified and will remain at whatever the default is\n#  * -1 - The tolerance is "erased".  If there was a default, the joint will be\n#         allowed to move without restriction.\n\nstring name\nfloat64 position  # in radians or meters (for a revolute or prismatic joint, respectively)\nfloat64 velocity  # in rad/sec or m/sec\nfloat64 acceleration  # in rad/sec^2 or m/sec^2\n'
p2963
sg21
S'package_modeler'
p2964
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/JointTolerance.msg'
p2965
sbsS'actionlib/TestRequestAction'
p2966
g0
(g9
g2
Ntp2967
Rp2968
(dp2969
g13
S'msg'
p2970
sg15
S'actionlib/TestRequestAction'
p2971
sg17
S'actionlib'
p2972
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nTestRequestActionGoal action_goal\nTestRequestActionResult action_result\nTestRequestActionFeedback action_feedback\n'
p2973
sg21
S'package_modeler'
p2974
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TestRequestAction.msg'
p2975
sbsS'control_msgs/FollowJointTrajectoryAction'
p2976
g0
(g9
g2
Ntp2977
Rp2978
(dp2979
g13
S'msg'
p2980
sg15
S'control_msgs/FollowJointTrajectoryAction'
p2981
sg17
S'control_msgs'
p2982
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nFollowJointTrajectoryActionGoal action_goal\nFollowJointTrajectoryActionResult action_result\nFollowJointTrajectoryActionFeedback action_feedback\n'
p2983
sg21
S'package_modeler'
p2984
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/FollowJointTrajectoryAction.msg'
p2985
sbsS'sensor_msgs/ChannelFloat32'
p2986
g0
(g9
g2
Ntp2987
Rp2988
(dp2989
g13
S'msg'
p2990
sg15
S'sensor_msgs/ChannelFloat32'
p2991
sg17
S'sensor_msgs'
p2992
sg19
S'\n# This message is used by the PointCloud message to hold optional data\n# associated with each point in the cloud. The length of the values\n# array should be the same as the length of the points array in the\n# PointCloud, and each value should be associated with the corresponding\n# point.\n\n# Channel names in existing practice include:\n#   "u", "v" - row and column (respectively) in the left stereo image.\n#              This is opposite to usual conventions but remains for\n#              historical reasons. The newer PointCloud2 message has no\n#              such problem.\n#   "rgb" - For point clouds produced by color stereo cameras. uint8\n#           (R,G,B) values packed into the least significant 24 bits,\n#           in order.\n#   "intensity" - laser or pixel intensity.\n#   "distance"\n\n# The channel name should give semantics of the channel (e.g.\n# "intensity" instead of "value").\nstring name\n\n# The values array should be 1-1 with the elements of the associated\n# PointCloud.\nfloat32[] values\n'
p2993
sg21
S'package_modeler'
p2994
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/ChannelFloat32.msg'
p2995
sbsS'std_msgs/String'
p2996
g0
(g9
g2
Ntp2997
Rp2998
(dp2999
g13
S'msg'
p3000
sg15
S'std_msgs/String'
p3001
sg17
S'std_msgs'
p3002
sg19
S'\nstring data\n'
p3003
sg21
S'package_modeler'
p3004
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/String.msg'
p3005
sbsS'visualization_msgs/MenuEntry'
p3006
g0
(g9
g2
Ntp3007
Rp3008
(dp3009
g13
S'msg'
p3010
sg15
S'visualization_msgs/MenuEntry'
p3011
sg17
S'visualization_msgs'
p3012
sg19
S'\n# MenuEntry message.\n\n# Each InteractiveMarker message has an array of MenuEntry messages.\n# A collection of MenuEntries together describe a\n# menu/submenu/subsubmenu/etc tree, though they are stored in a flat\n# array.  The tree structure is represented by giving each menu entry\n# an ID number and a "parent_id" field.  Top-level entries are the\n# ones with parent_id = 0.  Menu entries are ordered within their\n# level the same way they are ordered in the containing array.  Parent\n# entries must appear before their children.\n\n# Example:\n# - id = 3\n#   parent_id = 0\n#   title = "fun"\n# - id = 2\n#   parent_id = 0\n#   title = "robot"\n# - id = 4\n#   parent_id = 2\n#   title = "pr2"\n# - id = 5\n#   parent_id = 2\n#   title = "turtle"\n#\n# Gives a menu tree like this:\n#  - fun\n#  - robot\n#    - pr2\n#    - turtle\n\n# ID is a number for each menu entry.  Must be unique within the\n# control, and should never be 0.\nuint32 id\n\n# ID of the parent of this menu entry, if it is a submenu.  If this\n# menu entry is a top-level entry, set parent_id to 0.\nuint32 parent_id\n\n# menu / entry title\nstring title\n\n# Arguments to command indicated by command_type (below)\nstring command\n\n# Command_type stores the type of response desired when this menu\n# entry is clicked.\n# FEEDBACK: send an InteractiveMarkerFeedback message with menu_entry_id set to this entry\'s id.\n# ROSRUN: execute "rosrun" with arguments given in the command field (above).\n# ROSLAUNCH: execute "roslaunch" with arguments given in the command field (above).\nuint8 FEEDBACK=0\nuint8 ROSRUN=1\nuint8 ROSLAUNCH=2\nuint8 command_type\n'
p3013
sg21
S'package_modeler'
p3014
sg23
I0
sg24
S'/opt/ros/melodic/share/visualization_msgs/msg/MenuEntry.msg'
p3015
sbsS'moveit_msgs/CostSource'
p3016
g0
(g9
g2
Ntp3017
Rp3018
(dp3019
g13
S'msg'
p3020
sg15
S'moveit_msgs/CostSource'
p3021
sg17
S'moveit_msgs'
p3022
sg19
S'\n# The density of the cost source\nfloat64 cost_density\n\n# The volume of the cost source is represented as an\n# axis-aligned bounding box (AABB)\n# The AABB is specified by two of its opposite corners\n\ngeometry_msgs/Vector3 aabb_min\n\ngeometry_msgs/Vector3 aabb_max\n'
p3023
sg21
S'package_modeler'
p3024
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/CostSource.msg'
p3025
sbsS'moveit_msgs/MoveGroupAction'
p3026
g0
(g9
g2
Ntp3027
Rp3028
(dp3029
g13
S'msg'
p3030
sg15
S'moveit_msgs/MoveGroupAction'
p3031
sg17
S'moveit_msgs'
p3032
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nMoveGroupActionGoal action_goal\nMoveGroupActionResult action_result\nMoveGroupActionFeedback action_feedback\n'
p3033
sg21
S'package_modeler'
p3034
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveGroupAction.msg'
p3035
sbsS'object_recognition_msgs/ObjectRecognitionResult'
p3036
g0
(g9
g2
Ntp3037
Rp3038
(dp3039
g13
S'msg'
p3040
sg15
S'object_recognition_msgs/ObjectRecognitionResult'
p3041
sg17
S'object_recognition_msgs'
p3042
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n# Send the found objects, see the msg files for docs\nobject_recognition_msgs/RecognizedObjectArray recognized_objects\n'
p3043
sg21
S'package_modeler'
p3044
sg23
I0
sg24
S'/opt/ros/melodic/share/object_recognition_msgs/msg/ObjectRecognitionResult.msg'
p3045
sbsS'bond/Status'
p3046
g0
(g9
g2
Ntp3047
Rp3048
(dp3049
g13
S'msg'
p3050
sg15
S'bond/Status'
p3051
sg17
S'bond'
p3052
sg19
S'\nHeader header\nstring id  # ID of the bond\nstring instance_id  # Unique ID for an individual in a bond\nbool active\n\n# Including the timeouts for the bond makes it easier to debug mis-matches\n# between the two sides.\nfloat32 heartbeat_timeout\nfloat32 heartbeat_period'
p3053
sg21
S'package_modeler'
p3054
sg23
I0
sg24
S'/opt/ros/melodic/share/bond/msg/Status.msg'
p3055
sbsS'actionlib/TestActionGoal'
p3056
g0
(g9
g2
Ntp3057
Rp3058
(dp3059
g13
S'msg'
p3060
sg15
S'actionlib/TestActionGoal'
p3061
sg17
S'actionlib'
p3062
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nTestGoal goal\n'
p3063
sg21
S'package_modeler'
p3064
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TestActionGoal.msg'
p3065
sbsS'stereo_msgs/DisparityImage'
p3066
g0
(g9
g2
Ntp3067
Rp3068
(dp3069
g13
S'msg'
p3070
sg15
S'stereo_msgs/DisparityImage'
p3071
sg17
S'stereo_msgs'
p3072
sg19
S'\n# Separate header for compatibility with current TimeSynchronizer.\n# Likely to be removed in a later release, use image.header instead.\nHeader header\n\n# Floating point disparity image. The disparities are pre-adjusted for any\n# x-offset between the principal points of the two cameras (in the case\n# that they are verged). That is: d = x_l - x_r - (cx_l - cx_r)\nsensor_msgs/Image image\n\n# Stereo geometry. For disparity d, the depth from the camera is Z = fT/d.\nfloat32 f # Focal length, pixels\nfloat32 T # Baseline, world units\n\n# Subwindow of (potentially) valid disparity values.\nsensor_msgs/RegionOfInterest valid_window\n\n# The range of disparities searched.\n# In the disparity image, any disparity less than min_disparity is invalid.\n# The disparity search range defines the horopter, or 3D volume that the\n# stereo algorithm can "see". Points with Z outside of:\n#     Z_min = fT / max_disparity\n#     Z_max = fT / min_disparity\n# could not be found.\nfloat32 min_disparity\nfloat32 max_disparity\n\n# Smallest allowed disparity increment. The smallest achievable depth range\n# resolution is delta_Z = (Z^2/fT)*delta_d.\nfloat32 delta_d\n'
p3073
sg21
S'package_modeler'
p3074
sg23
I0
sg24
S'/opt/ros/melodic/share/stereo_msgs/msg/DisparityImage.msg'
p3075
sbsS'std_msgs/Duration'
p3076
g0
(g9
g2
Ntp3077
Rp3078
(dp3079
g13
S'msg'
p3080
sg15
S'std_msgs/Duration'
p3081
sg17
S'std_msgs'
p3082
sg19
S'\nduration data\n'
p3083
sg21
S'package_modeler'
p3084
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Duration.msg'
p3085
sbsS'moveit_msgs/MotionPlanResponse'
p3086
g0
(g9
g2
Ntp3087
Rp3088
(dp3089
g13
S'msg'
p3090
sg15
S'moveit_msgs/MotionPlanResponse'
p3091
sg17
S'moveit_msgs'
p3092
sg19
S'\n# The representation of a solution to a planning problem\n\n# The corresponding robot state\nRobotState trajectory_start\n\n# The group used for planning (usually the same as in the request)\nstring group_name\n\n# A solution trajectory, if found\nRobotTrajectory trajectory\n\n# Planning time (seconds)\nfloat64 planning_time\n\n# Error code - encodes the overall reason for failure\nMoveItErrorCodes error_code\n'
p3093
sg21
S'package_modeler'
p3094
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MotionPlanResponse.msg'
p3095
sbsS'geometry_msgs/Vector3Stamped'
p3096
g0
(g9
g2
Ntp3097
Rp3098
(dp3099
g13
S'msg'
p3100
sg15
S'geometry_msgs/Vector3Stamped'
p3101
sg17
S'geometry_msgs'
p3102
sg19
S'\n# This represents a Vector3 with reference coordinate frame and timestamp\nHeader header\nVector3 vector\n'
p3103
sg21
S'package_modeler'
p3104
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/Vector3Stamped.msg'
p3105
sbsS'moveit_msgs/PlannerInterfaceDescription'
p3106
g0
(g9
g2
Ntp3107
Rp3108
(dp3109
g13
S'msg'
p3110
sg15
S'moveit_msgs/PlannerInterfaceDescription'
p3111
sg17
S'moveit_msgs'
p3112
sg19
S'\n# The name of the planner interface\nstring name\n\n# The names of the planner ids within the interface\nstring[] planner_ids\n'
p3113
sg21
S'package_modeler'
p3114
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PlannerInterfaceDescription.msg'
p3115
sbsS'std_msgs/UInt16MultiArray'
p3116
g0
(g9
g2
Ntp3117
Rp3118
(dp3119
g13
S'msg'
p3120
sg15
S'std_msgs/UInt16MultiArray'
p3121
sg17
S'std_msgs'
p3122
sg19
S'\n# Please look at the MultiArrayLayout message definition for\n# documentation on all multiarrays.\n\nMultiArrayLayout  layout        # specification of data layout\nuint16[]            data        # array of data\n\n'
p3123
sg21
S'package_modeler'
p3124
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/UInt16MultiArray.msg'
p3125
sbsS'actionlib_tutorials/AveragingActionGoal'
p3126
g0
(g9
g2
Ntp3127
Rp3128
(dp3129
g13
S'msg'
p3130
sg15
S'actionlib_tutorials/AveragingActionGoal'
p3131
sg17
S'actionlib_tutorials'
p3132
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nAveragingGoal goal\n'
p3133
sg21
S'package_modeler'
p3134
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/msg/AveragingActionGoal.msg'
p3135
sbsS'actionlib/TestRequestGoal'
p3136
g0
(g9
g2
Ntp3137
Rp3138
(dp3139
g13
S'msg'
p3140
sg15
S'actionlib/TestRequestGoal'
p3141
sg17
S'actionlib'
p3142
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nint32 TERMINATE_SUCCESS = 0\nint32 TERMINATE_ABORTED = 1\nint32 TERMINATE_REJECTED = 2\nint32 TERMINATE_LOSE = 3\nint32 TERMINATE_DROP = 4\nint32 TERMINATE_EXCEPTION = 5\nint32 terminate_status\nbool ignore_cancel  # If true, ignores requests to cancel\nstring result_text\nint32 the_result    # Desired value for the_result in the Result\nbool is_simple_client\nduration delay_accept  # Delays accepting the goal by this amount of time\nduration delay_terminate  # Delays terminating for this amount of time\nduration pause_status  # Pauses the status messages for this amount of time\n'
p3143
sg21
S'package_modeler'
p3144
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TestRequestGoal.msg'
p3145
sbsS'map_msgs/PointCloud2Update'
p3146
g0
(g9
g2
Ntp3147
Rp3148
(dp3149
g13
S'msg'
p3150
sg15
S'map_msgs/PointCloud2Update'
p3151
sg17
S'map_msgs'
p3152
sg19
S'\nuint32 ADD=0\nuint32 DELETE=1\nHeader header\nuint32 type          # type of update, one of ADD or DELETE\nsensor_msgs/PointCloud2 points\n'
p3153
sg21
S'package_modeler'
p3154
sg23
I0
sg24
S'/opt/ros/melodic/share/map_msgs/msg/PointCloud2Update.msg'
p3155
sbsS'moveit_msgs/PickupGoal'
p3156
g0
(g9
g2
Ntp3157
Rp3158
(dp3159
g13
S'msg'
p3160
sg15
S'moveit_msgs/PickupGoal'
p3161
sg17
S'moveit_msgs'
p3162
sg19
S"\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n# An action for picking up an object\n\n# The name of the object to pick up (as known in the planning scene)\nstring target_name\n\n# which group should be used to plan for pickup\nstring group_name\n\n# which end-effector to be used for pickup (ideally descending from the group above)\nstring end_effector\n\n# a list of possible grasps to be used. At least one grasp must be filled in\nGrasp[] possible_grasps\n\n# the name that the support surface (e.g. table) has in the collision map\n# can be left empty if no name is available\nstring support_surface_name\n\n# whether collisions between the gripper and the support surface should be acceptable\n# during move from pre-grasp to grasp and during lift. Collisions when moving to the\n# pre-grasp location are still not allowed even if this is set to true.\nbool allow_gripper_support_collision\n\n# The names of the links the object to be attached is allowed to touch;\n# If this is left empty, it defaults to the links in the used end-effector\nstring[] attached_object_touch_links\n\n# Optionally notify the pick action that it should approach the object further,\n# as much as possible (this minimizing the distance to the object before the grasp)\n# along the approach direction; Note: this option changes the grasping poses\n# supplied in possible_grasps[] such that they are closer to the object when possible.\nbool minimize_object_distance\n\n# Optional constraints to be imposed on every point in the motion plan\nConstraints path_constraints\n\n# The name of the motion planner to use. If no name is specified,\n# a default motion planner will be used\nstring planner_id\n\n# an optional list of obstacles that we have semantic information about\n# and that can be touched/pushed/moved in the course of grasping;\n# CAREFUL: If the object name 'all' is used, collisions with all objects are disabled during the approach & lift.\nstring[] allowed_touch_objects\n\n# The maximum amount of time the motion planner is allowed to plan for\nfloat64 allowed_planning_time\n\n# Planning options\nPlanningOptions planning_options\n\n"
p3163
sg21
S'package_modeler'
p3164
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PickupGoal.msg'
p3165
sbsS'moveit_msgs/GripperTranslation'
p3166
g0
(g9
g2
Ntp3167
Rp3168
(dp3169
g13
S'msg'
p3170
sg15
S'moveit_msgs/GripperTranslation'
p3171
sg17
S'moveit_msgs'
p3172
sg19
S'\n# defines a translation for the gripper, used in pickup or place tasks\n# for example for lifting an object off a table or approaching the table for placing\n\n# the direction of the translation\ngeometry_msgs/Vector3Stamped direction\n\n# the desired translation distance\nfloat32 desired_distance\n\n# the min distance that must be considered feasible before the\n# grasp is even attempted\nfloat32 min_distance\n'
p3173
sg21
S'package_modeler'
p3174
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/GripperTranslation.msg'
p3175
sbsS'nav_msgs/GridCells'
p3176
g0
(g9
g2
Ntp3177
Rp3178
(dp3179
g13
S'msg'
p3180
sg15
S'nav_msgs/GridCells'
p3181
sg17
S'nav_msgs'
p3182
sg19
S'\n#an array of cells in a 2D grid\nHeader header\nfloat32 cell_width\nfloat32 cell_height\ngeometry_msgs/Point[] cells\n'
p3183
sg21
S'package_modeler'
p3184
sg23
I0
sg24
S'/opt/ros/melodic/share/nav_msgs/msg/GridCells.msg'
p3185
sbsS'visualization_msgs/InteractiveMarker'
p3186
g0
(g9
g2
Ntp3187
Rp3188
(dp3189
g13
S'msg'
p3190
sg15
S'visualization_msgs/InteractiveMarker'
p3191
sg17
S'visualization_msgs'
p3192
sg19
S"\n# Time/frame info.\n# If header.time is set to 0, the marker will be retransformed into\n# its frame on each timestep. You will receive the pose feedback\n# in the same frame.\n# Otherwise, you might receive feedback in a different frame.\n# For rviz, this will be the current 'fixed frame' set by the user.\nHeader header\n\n# Initial pose. Also, defines the pivot point for rotations.\ngeometry_msgs/Pose pose\n\n# Identifying string. Must be globally unique in\n# the topic that this message is sent through.\nstring name\n\n# Short description (< 40 characters).\nstring description\n\n# Scale to be used for default controls (default=1).\nfloat32 scale\n\n# All menu and submenu entries associated with this marker.\nMenuEntry[] menu_entries\n\n# List of controls displayed for this marker.\nInteractiveMarkerControl[] controls\n"
p3193
sg21
S'package_modeler'
p3194
sg23
I0
sg24
S'/opt/ros/melodic/share/visualization_msgs/msg/InteractiveMarker.msg'
p3195
sbsS'gazebo_msgs/ContactState'
p3196
g0
(g9
g2
Ntp3197
Rp3198
(dp3199
g13
S'msg'
p3200
sg15
S'gazebo_msgs/ContactState'
p3201
sg17
S'gazebo_msgs'
p3202
sg19
S'\nstring info                                   # text info on this contact\nstring collision1_name                        # name of contact collision1\nstring collision2_name                        # name of contact collision2\ngeometry_msgs/Wrench[] wrenches               # list of forces/torques\ngeometry_msgs/Wrench total_wrench             # sum of forces/torques in every DOF\ngeometry_msgs/Vector3[] contact_positions     # list of contact position\ngeometry_msgs/Vector3[] contact_normals       # list of contact normals\nfloat64[] depths                              # list of penetration depths\n'
p3203
sg21
S'package_modeler'
p3204
sg23
I0
sg24
S'/opt/ros/melodic/share/gazebo_msgs/msg/ContactState.msg'
p3205
sbsS'geometry_msgs/Inertia'
p3206
g0
(g9
g2
Ntp3207
Rp3208
(dp3209
g13
S'msg'
p3210
sg15
S'geometry_msgs/Inertia'
p3211
sg17
S'geometry_msgs'
p3212
sg19
S'\n# Mass [kg]\nfloat64 m\n\n# Center of mass [m]\ngeometry_msgs/Vector3 com\n\n# Inertia Tensor [kg-m^2]\n#     | ixx ixy ixz |\n# I = | ixy iyy iyz |\n#     | ixz iyz izz |\nfloat64 ixx\nfloat64 ixy\nfloat64 ixz\nfloat64 iyy\nfloat64 iyz\nfloat64 izz\n'
p3213
sg21
S'package_modeler'
p3214
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/Inertia.msg'
p3215
sbsS'control_msgs/FollowJointTrajectoryFeedback'
p3216
g0
(g9
g2
Ntp3217
Rp3218
(dp3219
g13
S'msg'
p3220
sg15
S'control_msgs/FollowJointTrajectoryFeedback'
p3221
sg17
S'control_msgs'
p3222
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nHeader header\nstring[] joint_names\ntrajectory_msgs/JointTrajectoryPoint desired\ntrajectory_msgs/JointTrajectoryPoint actual\ntrajectory_msgs/JointTrajectoryPoint error\n\n'
p3223
sg21
S'package_modeler'
p3224
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/FollowJointTrajectoryFeedback.msg'
p3225
sbsS'std_msgs/Time'
p3226
g0
(g9
g2
Ntp3227
Rp3228
(dp3229
g13
S'msg'
p3230
sg15
S'std_msgs/Time'
p3231
sg17
S'std_msgs'
p3232
sg19
S'\ntime data\n'
p3233
sg21
S'package_modeler'
p3234
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Time.msg'
p3235
sbsS'control_msgs/JointTrajectoryActionResult'
p3236
g0
(g9
g2
Ntp3237
Rp3238
(dp3239
g13
S'msg'
p3240
sg15
S'control_msgs/JointTrajectoryActionResult'
p3241
sg17
S'control_msgs'
p3242
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nJointTrajectoryResult result\n'
p3243
sg21
S'package_modeler'
p3244
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/JointTrajectoryActionResult.msg'
p3245
sbsS'moveit_msgs/DisplayTrajectory'
p3246
g0
(g9
g2
Ntp3247
Rp3248
(dp3249
g13
S'msg'
p3250
sg15
S'moveit_msgs/DisplayTrajectory'
p3251
sg17
S'moveit_msgs'
p3252
sg19
S'\n# The model id for which this path has been generated\nstring model_id\n\n# The representation of the path contains position values for all the joints that are moving along the path; a sequence of trajectories may be specified\nRobotTrajectory[] trajectory\n\n# The robot state is used to obtain positions for all/some of the joints of the robot. \n# It is used by the path display node to determine the positions of the joints that are not specified in the joint path message above. \n# If the robot state message contains joint position information for joints that are also mentioned in the joint path message, the positions in the joint path message will overwrite the positions specified in the robot state message. \nRobotState trajectory_start\n'
p3253
sg21
S'package_modeler'
p3254
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/DisplayTrajectory.msg'
p3255
sbsS'capabilities/Remapping'
p3256
g0
(g9
g2
Ntp3257
Rp3258
(dp3259
g13
S'msg'
p3260
sg15
S'capabilities/Remapping'
p3261
sg17
S'capabilities'
p3262
sg19
S'\nstring key\nstring value\n'
p3263
sg21
S'package_modeler'
p3264
sg23
I0
sg24
S'/opt/ros/melodic/share/capabilities/msg/Remapping.msg'
p3265
sbsS'moveit_msgs/PickupResult'
p3266
g0
(g9
g2
Ntp3267
Rp3268
(dp3269
g13
S'msg'
p3270
sg15
S'moveit_msgs/PickupResult'
p3271
sg17
S'moveit_msgs'
p3272
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n# The overall result of the pickup attempt\nMoveItErrorCodes error_code\n\n# The full starting state of the robot at the start of the trajectory\nRobotState trajectory_start\n\n# The trajectory that moved group produced for execution\nRobotTrajectory[] trajectory_stages\n\nstring[] trajectory_descriptions\n\n# The performed grasp, if attempt was successful\nGrasp grasp\n\n# The amount of time in seconds it took to complete the plan\nfloat64 planning_time\n'
p3273
sg21
S'package_modeler'
p3274
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PickupResult.msg'
p3275
sbsS'twist_mux_msgs/JoyTurboActionFeedback'
p3276
g0
(g9
g2
Ntp3277
Rp3278
(dp3279
g13
S'msg'
p3280
sg15
S'twist_mux_msgs/JoyTurboActionFeedback'
p3281
sg17
S'twist_mux_msgs'
p3282
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nJoyTurboFeedback feedback\n'
p3283
sg21
S'package_modeler'
p3284
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/msg/JoyTurboActionFeedback.msg'
p3285
sbsS'twist_mux_msgs/JoyPriorityActionGoal'
p3286
g0
(g9
g2
Ntp3287
Rp3288
(dp3289
g13
S'msg'
p3290
sg15
S'twist_mux_msgs/JoyPriorityActionGoal'
p3291
sg17
S'twist_mux_msgs'
p3292
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nJoyPriorityGoal goal\n'
p3293
sg21
S'package_modeler'
p3294
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/msg/JoyPriorityActionGoal.msg'
p3295
sbsS'geometry_msgs/QuaternionStamped'
p3296
g0
(g9
g2
Ntp3297
Rp3298
(dp3299
g13
S'msg'
p3300
sg15
S'geometry_msgs/QuaternionStamped'
p3301
sg17
S'geometry_msgs'
p3302
sg19
S'\n# This represents an orientation with reference coordinate frame and timestamp.\n\nHeader header\nQuaternion quaternion\n'
p3303
sg21
S'package_modeler'
p3304
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/QuaternionStamped.msg'
p3305
sbsS'sensor_msgs/RegionOfInterest'
p3306
g0
(g9
g2
Ntp3307
Rp3308
(dp3309
g13
S'msg'
p3310
sg15
S'sensor_msgs/RegionOfInterest'
p3311
sg17
S'sensor_msgs'
p3312
sg19
S'\n# This message is used to specify a region of interest within an image.\n#\n# When used to specify the ROI setting of the camera when the image was\n# taken, the height and width fields should either match the height and\n# width fields for the associated image; or height = width = 0\n# indicates that the full resolution image was captured.\n\nuint32 x_offset  # Leftmost pixel of the ROI\n                 # (0 if the ROI includes the left edge of the image)\nuint32 y_offset  # Topmost pixel of the ROI\n                 # (0 if the ROI includes the top edge of the image)\nuint32 height    # Height of ROI\nuint32 width     # Width of ROI\n\n# True if a distinct rectified ROI should be calculated from the "raw"\n# ROI in this message. Typically this should be False if the full image\n# is captured (ROI not used), and True if a subwindow is captured (ROI\n# used).\nbool do_rectify\n'
p3313
sg21
S'package_modeler'
p3314
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/RegionOfInterest.msg'
p3315
sbsS'actionlib_tutorials/AveragingActionFeedback'
p3316
g0
(g9
g2
Ntp3317
Rp3318
(dp3319
g13
S'msg'
p3320
sg15
S'actionlib_tutorials/AveragingActionFeedback'
p3321
sg17
S'actionlib_tutorials'
p3322
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nAveragingFeedback feedback\n'
p3323
sg21
S'package_modeler'
p3324
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/msg/AveragingActionFeedback.msg'
p3325
sbsS'sensor_msgs/JointState'
p3326
g0
(g9
g2
Ntp3327
Rp3328
(dp3329
g13
S'msg'
p3330
sg15
S'sensor_msgs/JointState'
p3331
sg17
S'sensor_msgs'
p3332
sg19
S'\n# This is a message that holds data to describe the state of a set of torque controlled joints. \n#\n# The state of each joint (revolute or prismatic) is defined by:\n#  * the position of the joint (rad or m),\n#  * the velocity of the joint (rad/s or m/s) and \n#  * the effort that is applied in the joint (Nm or N).\n#\n# Each joint is uniquely identified by its name\n# The header specifies the time at which the joint states were recorded. All the joint states\n# in one message have to be recorded at the same time.\n#\n# This message consists of a multiple arrays, one for each part of the joint state. \n# The goal is to make each of the fields optional. When e.g. your joints have no\n# effort associated with them, you can leave the effort array empty. \n#\n# All arrays in this message should have the same size, or be empty.\n# This is the only way to uniquely associate the joint name with the correct\n# states.\n\n\nHeader header\n\nstring[] name\nfloat64[] position\nfloat64[] velocity\nfloat64[] effort\n'
p3333
sg21
S'package_modeler'
p3334
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/JointState.msg'
p3335
sbsS'geometry_msgs/PoseWithCovarianceStamped'
p3336
g0
(g9
g2
Ntp3337
Rp3338
(dp3339
g13
S'msg'
p3340
sg15
S'geometry_msgs/PoseWithCovarianceStamped'
p3341
sg17
S'geometry_msgs'
p3342
sg19
S'\n# This expresses an estimated pose with a reference coordinate frame and timestamp\n\nHeader header\nPoseWithCovariance pose\n'
p3343
sg21
S'package_modeler'
p3344
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/PoseWithCovarianceStamped.msg'
p3345
sbsS'std_msgs/Int32'
p3346
g0
(g9
g2
Ntp3347
Rp3348
(dp3349
g13
S'msg'
p3350
sg15
S'std_msgs/Int32'
p3351
sg17
S'std_msgs'
p3352
sg19
S'\nint32 data'
p3353
sg21
S'package_modeler'
p3354
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Int32.msg'
p3355
sbsS'moveit_msgs/RobotTrajectory'
p3356
g0
(g9
g2
Ntp3357
Rp3358
(dp3359
g13
S'msg'
p3360
sg15
S'moveit_msgs/RobotTrajectory'
p3361
sg17
S'moveit_msgs'
p3362
sg19
S'\ntrajectory_msgs/JointTrajectory joint_trajectory\ntrajectory_msgs/MultiDOFJointTrajectory multi_dof_joint_trajectory\n'
p3363
sg21
S'package_modeler'
p3364
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/RobotTrajectory.msg'
p3365
sbsS'moveit_msgs/ExecuteTrajectoryAction'
p3366
g0
(g9
g2
Ntp3367
Rp3368
(dp3369
g13
S'msg'
p3370
sg15
S'moveit_msgs/ExecuteTrajectoryAction'
p3371
sg17
S'moveit_msgs'
p3372
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nExecuteTrajectoryActionGoal action_goal\nExecuteTrajectoryActionResult action_result\nExecuteTrajectoryActionFeedback action_feedback\n'
p3373
sg21
S'package_modeler'
p3374
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/ExecuteTrajectoryAction.msg'
p3375
sbsS'moveit_msgs/ExecuteTrajectoryActionGoal'
p3376
g0
(g9
g2
Ntp3377
Rp3378
(dp3379
g13
S'msg'
p3380
sg15
S'moveit_msgs/ExecuteTrajectoryActionGoal'
p3381
sg17
S'moveit_msgs'
p3382
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nExecuteTrajectoryGoal goal\n'
p3383
sg21
S'package_modeler'
p3384
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/ExecuteTrajectoryActionGoal.msg'
p3385
sbsS'moveit_msgs/PositionConstraint'
p3386
g0
(g9
g2
Ntp3387
Rp3388
(dp3389
g13
S'msg'
p3390
sg15
S'moveit_msgs/PositionConstraint'
p3391
sg17
S'moveit_msgs'
p3392
sg19
S'\n# This message contains the definition of a position constraint.\n\nHeader header\n\n# The robot link this constraint refers to\nstring link_name\n\n# The offset (in the link frame) for the target point on the link we are planning for\ngeometry_msgs/Vector3 target_point_offset\n\n# The volume this constraint refers to \nBoundingVolume constraint_region\n\n# A weighting factor for this constraint (denotes relative importance to other constraints. Closer to zero means less important)\nfloat64 weight\n'
p3393
sg21
S'package_modeler'
p3394
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PositionConstraint.msg'
p3395
sbsS'moveit_msgs/LinkPadding'
p3396
g0
(g9
g2
Ntp3397
Rp3398
(dp3399
g13
S'msg'
p3400
sg15
S'moveit_msgs/LinkPadding'
p3401
sg17
S'moveit_msgs'
p3402
sg19
S'\n#name for the link\nstring link_name\n\n# padding to apply to the link\nfloat64 padding\n'
p3403
sg21
S'package_modeler'
p3404
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/LinkPadding.msg'
p3405
sbsS'octomap_msgs/OctomapWithPose'
p3406
g0
(g9
g2
Ntp3407
Rp3408
(dp3409
g13
S'msg'
p3410
sg15
S'octomap_msgs/OctomapWithPose'
p3411
sg17
S'octomap_msgs'
p3412
sg19
S'\n# A 3D map in binary format, as Octree\nHeader header\n\n# The pose of the octree with respect to the header frame \ngeometry_msgs/Pose origin\n\n# The actual octree msg\noctomap_msgs/Octomap octomap\n'
p3413
sg21
S'package_modeler'
p3414
sg23
I0
sg24
S'/opt/ros/melodic/share/octomap_msgs/msg/OctomapWithPose.msg'
p3415
sbsS'std_msgs/UInt8MultiArray'
p3416
g0
(g9
g2
Ntp3417
Rp3418
(dp3419
g13
S'msg'
p3420
sg15
S'std_msgs/UInt8MultiArray'
p3421
sg17
S'std_msgs'
p3422
sg19
S'\n# Please look at the MultiArrayLayout message definition for\n# documentation on all multiarrays.\n\nMultiArrayLayout  layout        # specification of data layout\nuint8[]           data          # array of data\n\n'
p3423
sg21
S'package_modeler'
p3424
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/UInt8MultiArray.msg'
p3425
sbsS'smach_msgs/SmachContainerStatus'
p3426
g0
(g9
g2
Ntp3427
Rp3428
(dp3429
g13
S'msg'
p3430
sg15
S'smach_msgs/SmachContainerStatus'
p3431
sg17
S'smach_msgs'
p3432
sg19
S"\nHeader header\n\n# The path to this node in the server\nstring path\n\n# The initial state description\n# Effects an arc from the top state to each one\nstring[] initial_states\n\n# The current state description\nstring[] active_states\n\n# A pickled user data structure\n# i.e. the UserData's internal dictionary\nstring local_data\n\n# Debugging info string\nstring info\n"
p3433
sg21
S'package_modeler'
p3434
sg23
I0
sg24
S'/opt/ros/melodic/share/smach_msgs/msg/SmachContainerStatus.msg'
p3435
sbsS'control_msgs/JointTrajectoryControllerState'
p3436
g0
(g9
g2
Ntp3437
Rp3438
(dp3439
g13
S'msg'
p3440
sg15
S'control_msgs/JointTrajectoryControllerState'
p3441
sg17
S'control_msgs'
p3442
sg19
S'\nHeader header\nstring[] joint_names\ntrajectory_msgs/JointTrajectoryPoint desired\ntrajectory_msgs/JointTrajectoryPoint actual\ntrajectory_msgs/JointTrajectoryPoint error  # Redundant, but useful\n'
p3443
sg21
S'package_modeler'
p3444
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/JointTrajectoryControllerState.msg'
p3445
sbsS'turtle_actionlib/ShapeResult'
p3446
g0
(g9
g2
Ntp3447
Rp3448
(dp3449
g13
S'msg'
p3450
sg15
S'turtle_actionlib/ShapeResult'
p3451
sg17
S'turtle_actionlib'
p3452
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n#result definition\nfloat32 interior_angle\nfloat32 apothem\n'
p3453
sg21
S'package_modeler'
p3454
sg23
I0
sg24
S'/opt/ros/melodic/share/turtle_actionlib/msg/ShapeResult.msg'
p3455
sbsS'gazebo_msgs/ModelStates'
p3456
g0
(g9
g2
Ntp3457
Rp3458
(dp3459
g13
S'msg'
p3460
sg15
S'gazebo_msgs/ModelStates'
p3461
sg17
S'gazebo_msgs'
p3462
sg19
S'\n# broadcast all model states in world frame\nstring[] name                 # model names\ngeometry_msgs/Pose[] pose     # desired pose in world frame\ngeometry_msgs/Twist[] twist   # desired twist in world frame\n'
p3463
sg21
S'package_modeler'
p3464
sg23
I0
sg24
S'/opt/ros/melodic/share/gazebo_msgs/msg/ModelStates.msg'
p3465
sbsS'gazebo_msgs/LinkState'
p3466
g0
(g9
g2
Ntp3467
Rp3468
(dp3469
g13
S'msg'
p3470
sg15
S'gazebo_msgs/LinkState'
p3471
sg17
S'gazebo_msgs'
p3472
sg19
S'\n# @todo: FIXME: sets pose and twist of a link.  All children link poses/twists of the URDF tree are not updated accordingly, but should be.\nstring link_name            # link name, link_names are in gazebo scoped name notation, [model_name::body_name]\ngeometry_msgs/Pose pose     # desired pose in reference frame\ngeometry_msgs/Twist twist   # desired twist in reference frame\nstring reference_frame      # set pose/twist relative to the frame of this link/body\n                            # leave empty or "world" or "map" defaults to world-frame\n'
p3473
sg21
S'package_modeler'
p3474
sg23
I0
sg24
S'/opt/ros/melodic/share/gazebo_msgs/msg/LinkState.msg'
p3475
sbsS'std_msgs/Int64MultiArray'
p3476
g0
(g9
g2
Ntp3477
Rp3478
(dp3479
g13
S'msg'
p3480
sg15
S'std_msgs/Int64MultiArray'
p3481
sg17
S'std_msgs'
p3482
sg19
S'\n# Please look at the MultiArrayLayout message definition for\n# documentation on all multiarrays.\n\nMultiArrayLayout  layout        # specification of data layout\nint64[]           data          # array of data\n\n'
p3483
sg21
S'package_modeler'
p3484
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Int64MultiArray.msg'
p3485
sbsS'std_msgs/UInt8'
p3486
g0
(g9
g2
Ntp3487
Rp3488
(dp3489
g13
S'msg'
p3490
sg15
S'std_msgs/UInt8'
p3491
sg17
S'std_msgs'
p3492
sg19
S'\nuint8 data\n'
p3493
sg21
S'package_modeler'
p3494
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/UInt8.msg'
p3495
sbsS'moveit_msgs/PickupAction'
p3496
g0
(g9
g2
Ntp3497
Rp3498
(dp3499
g13
S'msg'
p3500
sg15
S'moveit_msgs/PickupAction'
p3501
sg17
S'moveit_msgs'
p3502
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nPickupActionGoal action_goal\nPickupActionResult action_result\nPickupActionFeedback action_feedback\n'
p3503
sg21
S'package_modeler'
p3504
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PickupAction.msg'
p3505
sbsS'nav_msgs/GetMapResult'
p3506
g0
(g9
g2
Ntp3507
Rp3508
(dp3509
g13
S'msg'
p3510
sg15
S'nav_msgs/GetMapResult'
p3511
sg17
S'nav_msgs'
p3512
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nnav_msgs/OccupancyGrid map\n'
p3513
sg21
S'package_modeler'
p3514
sg23
I0
sg24
S'/opt/ros/melodic/share/nav_msgs/msg/GetMapResult.msg'
p3515
sbsS'moveit_msgs/MoveItErrorCodes'
p3516
g0
(g9
g2
Ntp3517
Rp3518
(dp3519
g13
S'msg'
p3520
sg15
S'moveit_msgs/MoveItErrorCodes'
p3521
sg17
S'moveit_msgs'
p3522
sg19
S'\nint32 val\n\n# overall behavior\nint32 SUCCESS=1\nint32 FAILURE=99999\n\nint32 PLANNING_FAILED=-1\nint32 INVALID_MOTION_PLAN=-2\nint32 MOTION_PLAN_INVALIDATED_BY_ENVIRONMENT_CHANGE=-3\nint32 CONTROL_FAILED=-4\nint32 UNABLE_TO_AQUIRE_SENSOR_DATA=-5\nint32 TIMED_OUT=-6\nint32 PREEMPTED=-7\n\n# planning & kinematics request errors\nint32 START_STATE_IN_COLLISION=-10\nint32 START_STATE_VIOLATES_PATH_CONSTRAINTS=-11\n\nint32 GOAL_IN_COLLISION=-12\nint32 GOAL_VIOLATES_PATH_CONSTRAINTS=-13\nint32 GOAL_CONSTRAINTS_VIOLATED=-14\n\nint32 INVALID_GROUP_NAME=-15\nint32 INVALID_GOAL_CONSTRAINTS=-16\nint32 INVALID_ROBOT_STATE=-17\nint32 INVALID_LINK_NAME=-18\nint32 INVALID_OBJECT_NAME=-19\n\n# system errors\nint32 FRAME_TRANSFORM_FAILURE=-21\nint32 COLLISION_CHECKING_UNAVAILABLE=-22\nint32 ROBOT_STATE_STALE=-23\nint32 SENSOR_INFO_STALE=-24\n\n# kinematics errors\nint32 NO_IK_SOLUTION=-31\n'
p3523
sg21
S'package_modeler'
p3524
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveItErrorCodes.msg'
p3525
sbsS'ar_track_alvar_msgs/AlvarMarkers'
p3526
g0
(g9
g2
Ntp3527
Rp3528
(dp3529
g13
S'msg'
p3530
sg15
S'ar_track_alvar_msgs/AlvarMarkers'
p3531
sg17
S'ar_track_alvar_msgs'
p3532
sg19
S'\nHeader header\nAlvarMarker[] markers\n'
p3533
sg21
S'package_modeler'
p3534
sg23
I0
sg24
S'/opt/ros/melodic/share/ar_track_alvar_msgs/msg/AlvarMarkers.msg'
p3535
sbsS'moveit_msgs/WorkspaceParameters'
p3536
g0
(g9
g2
Ntp3537
Rp3538
(dp3539
g13
S'msg'
p3540
sg15
S'moveit_msgs/WorkspaceParameters'
p3541
sg17
S'moveit_msgs'
p3542
sg19
S'\n# This message contains a set of parameters useful in\n# setting up the volume (a box) in which the robot is allowed to move.\n# This is useful only when planning for mobile parts of \n# the robot as well.\n\n# Define the frame of reference for the box corners\nHeader header\n\n# The minumum corner of the box, with respect to the robot starting pose\ngeometry_msgs/Vector3 min_corner\n\n# The maximum corner of the box, with respect to the robot starting pose\ngeometry_msgs/Vector3 max_corner\n'
p3543
sg21
S'package_modeler'
p3544
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/WorkspaceParameters.msg'
p3545
sbsS'actionlib/TestActionResult'
p3546
g0
(g9
g2
Ntp3547
Rp3548
(dp3549
g13
S'msg'
p3550
sg15
S'actionlib/TestActionResult'
p3551
sg17
S'actionlib'
p3552
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nTestResult result\n'
p3553
sg21
S'package_modeler'
p3554
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TestActionResult.msg'
p3555
sbsS'object_recognition_msgs/ObjectInformation'
p3556
g0
(g9
g2
Ntp3557
Rp3558
(dp3559
g13
S'msg'
p3560
sg15
S'object_recognition_msgs/ObjectInformation'
p3561
sg17
S'object_recognition_msgs'
p3562
sg19
S'\n############################################## VISUALIZATION INFO ######################################################\n################### THIS INFO SHOULD BE OBTAINED INDEPENDENTLY FROM THE CORE, LIKE IN AN RVIZ PLUGIN ###################\n\n# The human readable name of the object\nstring name\n\n# The full mesh of the object: this can be useful for display purposes, augmented reality ... but it can be big\n# Make sure the type is MESH\nshape_msgs/Mesh ground_truth_mesh\n\n# Sometimes, you only have a cloud in the DB\n# Make sure the type is POINTS\nsensor_msgs/PointCloud2 ground_truth_point_cloud\n'
p3563
sg21
S'package_modeler'
p3564
sg23
I0
sg24
S'/opt/ros/melodic/share/object_recognition_msgs/msg/ObjectInformation.msg'
p3565
sbsS'visualization_msgs/InteractiveMarkerUpdate'
p3566
g0
(g9
g2
Ntp3567
Rp3568
(dp3569
g13
S'msg'
p3570
sg15
S'visualization_msgs/InteractiveMarkerUpdate'
p3571
sg17
S'visualization_msgs'
p3572
sg19
S'\n# Identifying string. Must be unique in the topic namespace\n# that this server works on.\nstring server_id\n\n# Sequence number.\n# The client will use this to detect if it has missed an update.\nuint64 seq_num\n\n# Type holds the purpose of this message.  It must be one of UPDATE or KEEP_ALIVE.\n# UPDATE: Incremental update to previous state. \n#         The sequence number must be 1 higher than for\n#         the previous update.\n# KEEP_ALIVE: Indicates the that the server is still living.\n#             The sequence number does not increase.\n#             No payload data should be filled out (markers, poses, or erases).\nuint8 KEEP_ALIVE = 0\nuint8 UPDATE = 1\n\nuint8 type\n\n#Note: No guarantees on the order of processing.\n#      Contents must be kept consistent by sender.\n\n#Markers to be added or updated\nInteractiveMarker[] markers\n\n#Poses of markers that should be moved\nInteractiveMarkerPose[] poses\n\n#Names of markers to be erased\nstring[] erases\n'
p3573
sg21
S'package_modeler'
p3574
sg23
I0
sg24
S'/opt/ros/melodic/share/visualization_msgs/msg/InteractiveMarkerUpdate.msg'
p3575
sbsS'sensor_msgs/LaserScan'
p3576
g0
(g9
g2
Ntp3577
Rp3578
(dp3579
g13
S'msg'
p3580
sg15
S'sensor_msgs/LaserScan'
p3581
sg17
S'sensor_msgs'
p3582
sg19
S'\n# Single scan from a planar laser range-finder\n#\n# If you have another ranging device with different behavior (e.g. a sonar\n# array), please find or create a different message, since applications\n# will make fairly laser-specific assumptions about this data\n\nHeader header            # timestamp in the header is the acquisition time of \n                         # the first ray in the scan.\n                         #\n                         # in frame frame_id, angles are measured around \n                         # the positive Z axis (counterclockwise, if Z is up)\n                         # with zero angle being forward along the x axis\n                         \nfloat32 angle_min        # start angle of the scan [rad]\nfloat32 angle_max        # end angle of the scan [rad]\nfloat32 angle_increment  # angular distance between measurements [rad]\n\nfloat32 time_increment   # time between measurements [seconds] - if your scanner\n                         # is moving, this will be used in interpolating position\n                         # of 3d points\nfloat32 scan_time        # time between scans [seconds]\n\nfloat32 range_min        # minimum range value [m]\nfloat32 range_max        # maximum range value [m]\n\nfloat32[] ranges         # range data [m] (Note: values < range_min or > range_max should be discarded)\nfloat32[] intensities    # intensity data [device-specific units].  If your\n                         # device does not provide intensities, please leave\n                         # the array empty.\n'
p3583
sg21
S'package_modeler'
p3584
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/LaserScan.msg'
p3585
sbsS'moveit_msgs/MoveGroupSequenceResult'
p3586
g0
(g9
g2
Ntp3587
Rp3588
(dp3589
g13
S'msg'
p3590
sg15
S'moveit_msgs/MoveGroupSequenceResult'
p3591
sg17
S'moveit_msgs'
p3592
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n# Response comprising information on all sections of the sequence\nMotionSequenceResponse response\n\n'
p3593
sg21
S'package_modeler'
p3594
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MoveGroupSequenceResult.msg'
p3595
sbsS'actionlib/TestActionFeedback'
p3596
g0
(g9
g2
Ntp3597
Rp3598
(dp3599
g13
S'msg'
p3600
sg15
S'actionlib/TestActionFeedback'
p3601
sg17
S'actionlib'
p3602
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nTestFeedback feedback\n'
p3603
sg21
S'package_modeler'
p3604
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TestActionFeedback.msg'
p3605
sbsS'std_msgs/Float32'
p3606
g0
(g9
g2
Ntp3607
Rp3608
(dp3609
g13
S'msg'
p3610
sg15
S'std_msgs/Float32'
p3611
sg17
S'std_msgs'
p3612
sg19
S'\nfloat32 data'
p3613
sg21
S'package_modeler'
p3614
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Float32.msg'
p3615
sbsS'control_msgs/JointTrajectoryAction'
p3616
g0
(g9
g2
Ntp3617
Rp3618
(dp3619
g13
S'msg'
p3620
sg15
S'control_msgs/JointTrajectoryAction'
p3621
sg17
S'control_msgs'
p3622
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nJointTrajectoryActionGoal action_goal\nJointTrajectoryActionResult action_result\nJointTrajectoryActionFeedback action_feedback\n'
p3623
sg21
S'package_modeler'
p3624
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/JointTrajectoryAction.msg'
p3625
sbsS'actionlib/TwoIntsGoal'
p3626
g0
(g9
g2
Ntp3627
Rp3628
(dp3629
g13
S'msg'
p3630
sg15
S'actionlib/TwoIntsGoal'
p3631
sg17
S'actionlib'
p3632
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\nint64 a\nint64 b\n'
p3633
sg21
S'package_modeler'
p3634
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/msg/TwoIntsGoal.msg'
p3635
sbsS'dynamic_reconfigure/SensorLevels'
p3636
g0
(g9
g2
Ntp3637
Rp3638
(dp3639
g13
S'msg'
p3640
sg15
S'dynamic_reconfigure/SensorLevels'
p3641
sg17
S'dynamic_reconfigure'
p3642
sg19
S'\n# This message is deprecated, please use driver_base/SensorLevels instead.\n\nbyte RECONFIGURE_CLOSE = 3  # Parameters that need a sensor to be stopped completely when changed\nbyte RECONFIGURE_STOP = 1  # Parameters that need a sensor to stop streaming when changed\nbyte RECONFIGURE_RUNNING = 0 # Parameters that can be changed while a sensor is streaming\n'
p3643
sg21
S'package_modeler'
p3644
sg23
I0
sg24
S'/opt/ros/melodic/share/dynamic_reconfigure/msg/SensorLevels.msg'
p3645
sbsS'bond/Constants'
p3646
g0
(g9
g2
Ntp3647
Rp3648
(dp3649
g13
S'msg'
p3650
sg15
S'bond/Constants'
p3651
sg17
S'bond'
p3652
sg19
S'\nfloat32 DEAD_PUBLISH_PERIOD = 0.05\nfloat32 DEFAULT_CONNECT_TIMEOUT = 10.0\nfloat32 DEFAULT_HEARTBEAT_TIMEOUT = 4.0\nfloat32 DEFAULT_DISCONNECT_TIMEOUT = 2.0\nfloat32 DEFAULT_HEARTBEAT_PERIOD = 1.0\n\nstring DISABLE_HEARTBEAT_TIMEOUT_PARAM=/bond_disable_heartbeat_timeout'
p3653
sg21
S'package_modeler'
p3654
sg23
I0
sg24
S'/opt/ros/melodic/share/bond/msg/Constants.msg'
p3655
sbsS'gazebo_msgs/ModelState'
p3656
g0
(g9
g2
Ntp3657
Rp3658
(dp3659
g13
S'msg'
p3660
sg15
S'gazebo_msgs/ModelState'
p3661
sg17
S'gazebo_msgs'
p3662
sg19
S'\n# Set Gazebo Model pose and twist\nstring model_name           # model to set state (pose and twist)\ngeometry_msgs/Pose pose     # desired pose in reference frame\ngeometry_msgs/Twist twist   # desired twist in reference frame\nstring reference_frame      # set pose/twist relative to the frame of this entity (Body/Model)\n                            # leave empty or "world" or "map" defaults to world-frame\n\n'
p3663
sg21
S'package_modeler'
p3664
sg23
I0
sg24
S'/opt/ros/melodic/share/gazebo_msgs/msg/ModelState.msg'
p3665
sbsS'std_msgs/Int16'
p3666
g0
(g9
g2
Ntp3667
Rp3668
(dp3669
g13
S'msg'
p3670
sg15
S'std_msgs/Int16'
p3671
sg17
S'std_msgs'
p3672
sg19
S'\nint16 data\n'
p3673
sg21
S'package_modeler'
p3674
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Int16.msg'
p3675
sbsS'tf2_msgs/LookupTransformActionFeedback'
p3676
g0
(g9
g2
Ntp3677
Rp3678
(dp3679
g13
S'msg'
p3680
sg15
S'tf2_msgs/LookupTransformActionFeedback'
p3681
sg17
S'tf2_msgs'
p3682
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nLookupTransformFeedback feedback\n'
p3683
sg21
S'package_modeler'
p3684
sg23
I0
sg24
S'/opt/ros/melodic/share/tf2_msgs/msg/LookupTransformActionFeedback.msg'
p3685
sbsS'moveit_msgs/MotionPlanDetailedResponse'
p3686
g0
(g9
g2
Ntp3687
Rp3688
(dp3689
g13
S'msg'
p3690
sg15
S'moveit_msgs/MotionPlanDetailedResponse'
p3691
sg17
S'moveit_msgs'
p3692
sg19
S'\n# The representation of a solution to a planning problem, including intermediate data\n\n# The starting state considered for the robot solution path\nRobotState trajectory_start\n\n# The group used for planning (usually the same as in the request)\nstring group_name\n\n# Multiple solution paths are reported, each reflecting intermediate steps in the trajectory processing\n\n# The list of reported trajectories\nRobotTrajectory[] trajectory\n\n# Description of the reported trajectories (name of processing step)\nstring[] description\n\n# The amount of time spent computing a particular step in motion plan computation \nfloat64[] processing_time\n\n# Status at the end of this plan\nMoveItErrorCodes error_code\n'
p3693
sg21
S'package_modeler'
p3694
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MotionPlanDetailedResponse.msg'
p3695
sbsS'gazebo_msgs/ODEPhysics'
p3696
g0
(g9
g2
Ntp3697
Rp3698
(dp3699
g13
S'msg'
p3700
sg15
S'gazebo_msgs/ODEPhysics'
p3701
sg17
S'gazebo_msgs'
p3702
sg19
S'\nbool auto_disable_bodies           # enable auto disabling of bodies, default false\nuint32 sor_pgs_precon_iters        # preconditioning inner iterations when uisng projected Gauss Seidel\nuint32 sor_pgs_iters               # inner iterations when uisng projected Gauss Seidel\nfloat64 sor_pgs_w                  # relaxation parameter when using projected Gauss Seidel, 1 = no relaxation\nfloat64 sor_pgs_rms_error_tol      # rms error tolerance before stopping inner iterations\nfloat64 contact_surface_layer      # contact "dead-band" width\nfloat64 contact_max_correcting_vel # contact maximum correction velocity\nfloat64 cfm                        # global constraint force mixing\nfloat64 erp                        # global error reduction parameter\nuint32 max_contacts                # maximum contact joints between two geoms\n'
p3703
sg21
S'package_modeler'
p3704
sg23
I0
sg24
S'/opt/ros/melodic/share/gazebo_msgs/msg/ODEPhysics.msg'
p3705
sbsS'actionlib_tutorials/FibonacciActionResult'
p3706
g0
(g9
g2
Ntp3707
Rp3708
(dp3709
g13
S'msg'
p3710
sg15
S'actionlib_tutorials/FibonacciActionResult'
p3711
sg17
S'actionlib_tutorials'
p3712
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nFibonacciResult result\n'
p3713
sg21
S'package_modeler'
p3714
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/msg/FibonacciActionResult.msg'
p3715
sbsS'sensor_msgs/Joy'
p3716
g0
(g9
g2
Ntp3717
Rp3718
(dp3719
g13
S'msg'
p3720
sg15
S'sensor_msgs/Joy'
p3721
sg17
S'sensor_msgs'
p3722
sg19
S'\n# Reports the state of a joysticks axes and buttons.\nHeader header           # timestamp in the header is the time the data is received from the joystick\nfloat32[] axes          # the axes measurements from a joystick\nint32[] buttons         # the buttons measurements from a joystick \n'
p3723
sg21
S'package_modeler'
p3724
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/Joy.msg'
p3725
sbsS'geographic_msgs/GeoPose'
p3726
g0
(g9
g2
Ntp3727
Rp3728
(dp3729
g13
S'msg'
p3730
sg15
S'geographic_msgs/GeoPose'
p3731
sg17
S'geographic_msgs'
p3732
sg19
S'\n# Geographic pose, using the WGS 84 reference ellipsoid.\n#\n# Orientation uses the East-North-Up (ENU) frame of reference.\n# (But, what about singularities at the poles?)\n\nGeoPoint position\ngeometry_msgs/Quaternion orientation\n'
p3733
sg21
S'package_modeler'
p3734
sg23
I0
sg24
S'/opt/ros/melodic/share/geographic_msgs/msg/GeoPose.msg'
p3735
sbsS'geographic_msgs/RouteNetwork'
p3736
g0
(g9
g2
Ntp3737
Rp3738
(dp3739
g13
S'msg'
p3740
sg15
S'geographic_msgs/RouteNetwork'
p3741
sg17
S'geographic_msgs'
p3742
sg19
S'\n# Geographic map route network.\n#\n# A directed graph of WayPoint nodes and RouteSegment edges.  This\n# information is extracted from the more-detailed contents of a\n# GeographicMap.  A RouteNetwork contains only the way points and\n# route segments of interest for path planning.\n\nHeader          header\n\nuuid_msgs/UniqueID id    # This route network identifier\nBoundingBox     bounds   # 2D bounding box for network\n\nWayPoint[]      points   # Way points in this network\nRouteSegment[]  segments # Directed edges of this network\n\nKeyValue[]      props    # Network key/value properties\n'
p3743
sg21
S'package_modeler'
p3744
sg23
I0
sg24
S'/opt/ros/melodic/share/geographic_msgs/msg/RouteNetwork.msg'
p3745
sbsS'moveit_msgs/ConstraintEvalResult'
p3746
g0
(g9
g2
Ntp3747
Rp3748
(dp3749
g13
S'msg'
p3750
sg15
S'moveit_msgs/ConstraintEvalResult'
p3751
sg17
S'moveit_msgs'
p3752
sg19
S'\n# This message contains result from constraint evaluation\n# result specifies the result of constraint evaluation \n# (true indicates state satisfies constraint, false indicates state violates constraint)\n# if false, distance specifies a measure of the distance of the state from the constraint\n# if true, distance is set to zero\nbool result\nfloat64 distance\n'
p3753
sg21
S'package_modeler'
p3754
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/ConstraintEvalResult.msg'
p3755
sbsS'shape_msgs/Mesh'
p3756
g0
(g9
g2
Ntp3757
Rp3758
(dp3759
g13
S'msg'
p3760
sg15
S'shape_msgs/Mesh'
p3761
sg17
S'shape_msgs'
p3762
sg19
S'\n# Definition of a mesh\n\n# list of triangles; the index values refer to positions in vertices[]\nMeshTriangle[] triangles\n\n# the actual vertices that make up the mesh\ngeometry_msgs/Point[] vertices\n'
p3763
sg21
S'package_modeler'
p3764
sg23
I0
sg24
S'/opt/ros/melodic/share/shape_msgs/msg/Mesh.msg'
p3765
sbsS'control_msgs/GripperCommandActionGoal'
p3766
g0
(g9
g2
Ntp3767
Rp3768
(dp3769
g13
S'msg'
p3770
sg15
S'control_msgs/GripperCommandActionGoal'
p3771
sg17
S'control_msgs'
p3772
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalID goal_id\nGripperCommandGoal goal\n'
p3773
sg21
S'package_modeler'
p3774
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/GripperCommandActionGoal.msg'
p3775
sbsS'moveit_msgs/MotionSequenceItem'
p3776
g0
(g9
g2
Ntp3777
Rp3778
(dp3779
g13
S'msg'
p3780
sg15
S'moveit_msgs/MotionSequenceItem'
p3781
sg17
S'moveit_msgs'
p3782
sg19
S'\n# The plan request for this item.\n# It is the planning request for this segment of the sequence, as if it were a solitary motion.\nMotionPlanRequest req\n\n# To blend between sequence items, the motion may be smoothed using a circular motion.\n# The blend radius of the circle between this and the next command, where 0 means no blending.\nfloat64 blend_radius\n'
p3783
sg21
S'package_modeler'
p3784
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/MotionSequenceItem.msg'
p3785
sbsS'rosgraph_msgs/Clock'
p3786
g0
(g9
g2
Ntp3787
Rp3788
(dp3789
g13
S'msg'
p3790
sg15
S'rosgraph_msgs/Clock'
p3791
sg17
S'rosgraph_msgs'
p3792
sg19
S'\n# roslib/Clock is used for publishing simulated time in ROS. \n# This message simply communicates the current time.\n# For more information, see http://www.ros.org/wiki/Clock\ntime clock\n'
p3793
sg21
S'package_modeler'
p3794
sg23
I0
sg24
S'/opt/ros/melodic/share/rosgraph_msgs/msg/Clock.msg'
p3795
sbsS'rosserial_msgs/Log'
p3796
g0
(g9
g2
Ntp3797
Rp3798
(dp3799
g13
S'msg'
p3800
sg15
S'rosserial_msgs/Log'
p3801
sg17
S'rosserial_msgs'
p3802
sg19
S'\n\n#ROS Logging Levels\nuint8 ROSDEBUG=0\nuint8 INFO=1\nuint8 WARN=2\nuint8 ERROR=3\nuint8 FATAL=4\n\nuint8 level\nstring msg\n'
p3803
sg21
S'package_modeler'
p3804
sg23
I0
sg24
S'/opt/ros/melodic/share/rosserial_msgs/msg/Log.msg'
p3805
sbsS'twist_mux_msgs/JoyTurboFeedback'
p3806
g0
(g9
g2
Ntp3807
Rp3808
(dp3809
g13
S'msg'
p3810
sg15
S'twist_mux_msgs/JoyTurboFeedback'
p3811
sg17
S'twist_mux_msgs'
p3812
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n'
p3813
sg21
S'package_modeler'
p3814
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/msg/JoyTurboFeedback.msg'
p3815
sbsS'geographic_msgs/WayPoint'
p3816
g0
(g9
g2
Ntp3817
Rp3818
(dp3819
g13
S'msg'
p3820
sg15
S'geographic_msgs/WayPoint'
p3821
sg17
S'geographic_msgs'
p3822
sg19
S'\n# Way-point element for a geographic map.\n\nuuid_msgs/UniqueID id   # Unique way-point identifier\nGeoPoint   position     # Position relative to WGS 84 ellipsoid\nKeyValue[] props        # Key/value properties for this point\n'
p3823
sg21
S'package_modeler'
p3824
sg23
I0
sg24
S'/opt/ros/melodic/share/geographic_msgs/msg/WayPoint.msg'
p3825
sbsS'nav_msgs/Odometry'
p3826
g0
(g9
g2
Ntp3827
Rp3828
(dp3829
g13
S'msg'
p3830
sg15
S'nav_msgs/Odometry'
p3831
sg17
S'nav_msgs'
p3832
sg19
S'\n# This represents an estimate of a position and velocity in free space.  \n# The pose in this message should be specified in the coordinate frame given by header.frame_id.\n# The twist in this message should be specified in the coordinate frame given by the child_frame_id\nHeader header\nstring child_frame_id\ngeometry_msgs/PoseWithCovariance pose\ngeometry_msgs/TwistWithCovariance twist\n'
p3833
sg21
S'package_modeler'
p3834
sg23
I0
sg24
S'/opt/ros/melodic/share/nav_msgs/msg/Odometry.msg'
p3835
sbsS'map_msgs/ProjectedMap'
p3836
g0
(g9
g2
Ntp3837
Rp3838
(dp3839
g13
S'msg'
p3840
sg15
S'map_msgs/ProjectedMap'
p3841
sg17
S'map_msgs'
p3842
sg19
S'\nnav_msgs/OccupancyGrid map\nfloat64 min_z\nfloat64 max_z'
p3843
sg21
S'package_modeler'
p3844
sg23
I0
sg24
S'/opt/ros/melodic/share/map_msgs/msg/ProjectedMap.msg'
p3845
sbsS'std_msgs/MultiArrayLayout'
p3846
g0
(g9
g2
Ntp3847
Rp3848
(dp3849
g13
S'msg'
p3850
sg15
S'std_msgs/MultiArrayLayout'
p3851
sg17
S'std_msgs'
p3852
sg19
S'\n# The multiarray declares a generic multi-dimensional array of a\n# particular data type.  Dimensions are ordered from outer most\n# to inner most.\n\nMultiArrayDimension[] dim # Array of dimension properties\nuint32 data_offset        # padding elements at front of data\n\n# Accessors should ALWAYS be written in terms of dimension stride\n# and specified outer-most dimension first.\n# \n# multiarray(i,j,k) = data[data_offset + dim_stride[1]*i + dim_stride[2]*j + k]\n#\n# A standard, 3-channel 640x480 image with interleaved color channels\n# would be specified as:\n#\n# dim[0].label  = "height"\n# dim[0].size   = 480\n# dim[0].stride = 3*640*480 = 921600  (note dim[0] stride is just size of image)\n# dim[1].label  = "width"\n# dim[1].size   = 640\n# dim[1].stride = 3*640 = 1920\n# dim[2].label  = "channel"\n# dim[2].size   = 3\n# dim[2].stride = 3\n#\n# multiarray(i,j,k) refers to the ith row, jth column, and kth channel.\n'
p3853
sg21
S'package_modeler'
p3854
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/MultiArrayLayout.msg'
p3855
sbsS'tf2_msgs/LookupTransformFeedback'
p3856
g0
(g9
g2
Ntp3857
Rp3858
(dp3859
g13
S'msg'
p3860
sg15
S'tf2_msgs/LookupTransformFeedback'
p3861
sg17
S'tf2_msgs'
p3862
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\n'
p3863
sg21
S'package_modeler'
p3864
sg23
I0
sg24
S'/opt/ros/melodic/share/tf2_msgs/msg/LookupTransformFeedback.msg'
p3865
sbsS'turtle_actionlib/Velocity'
p3866
g0
(g9
g2
Ntp3867
Rp3868
(dp3869
g13
S'msg'
p3870
sg15
S'turtle_actionlib/Velocity'
p3871
sg17
S'turtle_actionlib'
p3872
sg19
S'\n# Copied from turtlesim https://github.com/ros/ros_tutorials/blob/f7da7779e82dcc3977b2c220a843cd86dd269832/turtlesim/msg/Velocity.msg. We had to copy this into this package since it has been replaced with geometry_msgs/Twist there and comforming to Twist requires to change code, which I doubt worth time it takes. So if you think it is, please go ahead make a patch.\n\nfloat32 linear\nfloat32 angular\n'
p3873
sg21
S'package_modeler'
p3874
sg23
I0
sg24
S'/opt/ros/melodic/share/turtle_actionlib/msg/Velocity.msg'
p3875
sbsS'geometry_msgs/Accel'
p3876
g0
(g9
g2
Ntp3877
Rp3878
(dp3879
g13
S'msg'
p3880
sg15
S'geometry_msgs/Accel'
p3881
sg17
S'geometry_msgs'
p3882
sg19
S'\n# This expresses acceleration in free space broken into its linear and angular parts.\nVector3  linear\nVector3  angular\n'
p3883
sg21
S'package_modeler'
p3884
sg23
I0
sg24
S'/opt/ros/melodic/share/geometry_msgs/msg/Accel.msg'
p3885
sbsS'control_msgs/PointHeadActionResult'
p3886
g0
(g9
g2
Ntp3887
Rp3888
(dp3889
g13
S'msg'
p3890
sg15
S'control_msgs/PointHeadActionResult'
p3891
sg17
S'control_msgs'
p3892
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nPointHeadResult result\n'
p3893
sg21
S'package_modeler'
p3894
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/msg/PointHeadActionResult.msg'
p3895
sbsS'nav_msgs/GetMapActionFeedback'
p3896
g0
(g9
g2
Ntp3897
Rp3898
(dp3899
g13
S'msg'
p3900
sg15
S'nav_msgs/GetMapActionFeedback'
p3901
sg17
S'nav_msgs'
p3902
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nGetMapFeedback feedback\n'
p3903
sg21
S'package_modeler'
p3904
sg23
I0
sg24
S'/opt/ros/melodic/share/nav_msgs/msg/GetMapActionFeedback.msg'
p3905
sbsS'pcl_msgs/Vertices'
p3906
g0
(g9
g2
Ntp3907
Rp3908
(dp3909
g13
S'msg'
p3910
sg15
S'pcl_msgs/Vertices'
p3911
sg17
S'pcl_msgs'
p3912
sg19
S'\n# List of point indices\nuint32[] vertices\n'
p3913
sg21
S'package_modeler'
p3914
sg23
I0
sg24
S'/opt/ros/melodic/share/pcl_msgs/msg/Vertices.msg'
p3915
sbsS'moveit_msgs/PlanningScene'
p3916
g0
(g9
g2
Ntp3917
Rp3918
(dp3919
g13
S'msg'
p3920
sg15
S'moveit_msgs/PlanningScene'
p3921
sg17
S'moveit_msgs'
p3922
sg19
S'\n# name of planning scene\nstring name\n\n# full robot state\nRobotState robot_state\n\n# The name of the robot model this scene is for\nstring robot_model_name\n\n#additional frames for duplicating tf (with respect to the planning frame)\ngeometry_msgs/TransformStamped[] fixed_frame_transforms\n\n#full allowed collision matrix\nAllowedCollisionMatrix allowed_collision_matrix\n\n# all link paddings\nLinkPadding[] link_padding\n\n# all link scales\nLinkScale[] link_scale\n\n# Attached objects, collision objects, even the octomap or collision map can have \n# colors associated to them. This array specifies them.\nObjectColor[] object_colors\n\n# the collision map\nPlanningSceneWorld world\n\n# Flag indicating whether this scene is to be interpreted as a diff with respect to some other scene\nbool is_diff\n'
p3923
sg21
S'package_modeler'
p3924
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PlanningScene.msg'
p3925
sbsS'object_recognition_msgs/ObjectRecognitionActionResult'
p3926
g0
(g9
g2
Ntp3927
Rp3928
(dp3929
g13
S'msg'
p3930
sg15
S'object_recognition_msgs/ObjectRecognitionActionResult'
p3931
sg17
S'object_recognition_msgs'
p3932
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nObjectRecognitionResult result\n'
p3933
sg21
S'package_modeler'
p3934
sg23
I0
sg24
S'/opt/ros/melodic/share/object_recognition_msgs/msg/ObjectRecognitionActionResult.msg'
p3935
sbsS'trajectory_msgs/MultiDOFJointTrajectoryPoint'
p3936
g0
(g9
g2
Ntp3937
Rp3938
(dp3939
g13
S'msg'
p3940
sg15
S'trajectory_msgs/MultiDOFJointTrajectoryPoint'
p3941
sg17
S'trajectory_msgs'
p3942
sg19
S'\n# Each multi-dof joint can specify a transform (up to 6 DOF)\ngeometry_msgs/Transform[] transforms\n\n# There can be a velocity specified for the origin of the joint \ngeometry_msgs/Twist[] velocities\n\n# There can be an acceleration specified for the origin of the joint \ngeometry_msgs/Twist[] accelerations\n\nduration time_from_start\n'
p3943
sg21
S'package_modeler'
p3944
sg23
I0
sg24
S'/opt/ros/melodic/share/trajectory_msgs/msg/MultiDOFJointTrajectoryPoint.msg'
p3945
sbsS'move_base_msgs/MoveBaseActionResult'
p3946
g0
(g9
g2
Ntp3947
Rp3948
(dp3949
g13
S'msg'
p3950
sg15
S'move_base_msgs/MoveBaseActionResult'
p3951
sg17
S'move_base_msgs'
p3952
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nMoveBaseResult result\n'
p3953
sg21
S'package_modeler'
p3954
sg23
I0
sg24
S'/opt/ros/melodic/share/move_base_msgs/msg/MoveBaseActionResult.msg'
p3955
sbsS'dynamic_reconfigure/ConfigDescription'
p3956
g0
(g9
g2
Ntp3957
Rp3958
(dp3959
g13
S'msg'
p3960
sg15
S'dynamic_reconfigure/ConfigDescription'
p3961
sg17
S'dynamic_reconfigure'
p3962
sg19
S'\nGroup[] groups\nConfig max\nConfig min\nConfig dflt\n'
p3963
sg21
S'package_modeler'
p3964
sg23
I0
sg24
S'/opt/ros/melodic/share/dynamic_reconfigure/msg/ConfigDescription.msg'
p3965
sbsS'sensor_msgs/Range'
p3966
g0
(g9
g2
Ntp3967
Rp3968
(dp3969
g13
S'msg'
p3970
sg15
S'sensor_msgs/Range'
p3971
sg17
S'sensor_msgs'
p3972
sg19
S'\n# Single range reading from an active ranger that emits energy and reports\n# one range reading that is valid along an arc at the distance measured. \n# This message is  not appropriate for laser scanners. See the LaserScan\n# message if you are working with a laser scanner.\n\n# This message also can represent a fixed-distance (binary) ranger.  This\n# sensor will have min_range===max_range===distance of detection.\n# These sensors follow REP 117 and will output -Inf if the object is detected\n# and +Inf if the object is outside of the detection range.\n\nHeader header           # timestamp in the header is the time the ranger\n                        # returned the distance reading\n\n# Radiation type enums\n# If you want a value added to this list, send an email to the ros-users list\nuint8 ULTRASOUND=0\nuint8 INFRARED=1\n\nuint8 radiation_type    # the type of radiation used by the sensor\n                        # (sound, IR, etc) [enum]\n\nfloat32 field_of_view   # the size of the arc that the distance reading is\n                        # valid for [rad]\n                        # the object causing the range reading may have\n                        # been anywhere within -field_of_view/2 and\n                        # field_of_view/2 at the measured range. \n                        # 0 angle corresponds to the x-axis of the sensor.\n\nfloat32 min_range       # minimum range value [m]\nfloat32 max_range       # maximum range value [m]\n                        # Fixed distance rangers require min_range==max_range\n\nfloat32 range           # range data [m]\n                        # (Note: values < range_min or > range_max\n                        # should be discarded)\n                        # Fixed distance rangers only output -Inf or +Inf.\n                        # -Inf represents a detection within fixed distance.\n                        # (Detection too close to the sensor to quantify)\n                        # +Inf represents no detection within the fixed distance.\n                        # (Object out of range)'
p3973
sg21
S'package_modeler'
p3974
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/Range.msg'
p3975
sbsS'std_msgs/Header'
p3976
g0
(g9
g2
Ntp3977
Rp3978
(dp3979
g13
S'msg'
p3980
sg15
S'std_msgs/Header'
p3981
sg17
S'std_msgs'
p3982
sg19
S"\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\nstring frame_id\n"
p3983
sg21
S'package_modeler'
p3984
sg23
I0
sg24
S'/opt/ros/melodic/share/std_msgs/msg/Header.msg'
p3985
sbsS'moveit_msgs/KinematicSolverInfo'
p3986
g0
(g9
g2
Ntp3987
Rp3988
(dp3989
g13
S'msg'
p3990
sg15
S'moveit_msgs/KinematicSolverInfo'
p3991
sg17
S'moveit_msgs'
p3992
sg19
S'\n# A list of joints in the kinematic tree\nstring[] joint_names\n# A list of joint limits corresponding to the joint names\nmoveit_msgs/JointLimits[] limits\n# A list of links that the kinematics node provides solutions for\nstring[] link_names\n'
p3993
sg21
S'package_modeler'
p3994
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/KinematicSolverInfo.msg'
p3995
sbsS'move_base_msgs/MoveBaseGoal'
p3996
g0
(g9
g2
Ntp3997
Rp3998
(dp3999
g13
S'msg'
p4000
sg15
S'move_base_msgs/MoveBaseGoal'
p4001
sg17
S'move_base_msgs'
p4002
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\ngeometry_msgs/PoseStamped target_pose\n'
p4003
sg21
S'package_modeler'
p4004
sg23
I0
sg24
S'/opt/ros/melodic/share/move_base_msgs/msg/MoveBaseGoal.msg'
p4005
sbsS'controller_manager_msgs/ControllerState'
p4006
g0
(g9
g2
Ntp4007
Rp4008
(dp4009
g13
S'msg'
p4010
sg15
S'controller_manager_msgs/ControllerState'
p4011
sg17
S'controller_manager_msgs'
p4012
sg19
S'\nstring name\nstring state\nstring type\ncontroller_manager_msgs/HardwareInterfaceResources[] claimed_resources\n'
p4013
sg21
S'package_modeler'
p4014
sg23
I0
sg24
S'/opt/ros/melodic/share/controller_manager_msgs/msg/ControllerState.msg'
p4015
sbsS'turtle_actionlib/ShapeActionResult'
p4016
g0
(g9
g2
Ntp4017
Rp4018
(dp4019
g13
S'msg'
p4020
sg15
S'turtle_actionlib/ShapeActionResult'
p4021
sg17
S'turtle_actionlib'
p4022
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nShapeResult result\n'
p4023
sg21
S'package_modeler'
p4024
sg23
I0
sg24
S'/opt/ros/melodic/share/turtle_actionlib/msg/ShapeActionResult.msg'
p4025
sbsS'smach_msgs/SmachContainerStructure'
p4026
g0
(g9
g2
Ntp4027
Rp4028
(dp4029
g13
S'msg'
p4030
sg15
S'smach_msgs/SmachContainerStructure'
p4031
sg17
S'smach_msgs'
p4032
sg19
S'\nHeader header\n\n# The path to this node in the server\nstring path\n\n# The children of this node\nstring[] children\n\n# The outcome edges\n# Each index across these arrays denote one edge\nstring[] internal_outcomes\nstring[] outcomes_from\nstring[] outcomes_to\n\n# The potential outcomes from this container\nstring[] container_outcomes\n'
p4033
sg21
S'package_modeler'
p4034
sg23
I0
sg24
S'/opt/ros/melodic/share/smach_msgs/msg/SmachContainerStructure.msg'
p4035
sbsS'actionlib_tutorials/AveragingActionResult'
p4036
g0
(g9
g2
Ntp4037
Rp4038
(dp4039
g13
S'msg'
p4040
sg15
S'actionlib_tutorials/AveragingActionResult'
p4041
sg17
S'actionlib_tutorials'
p4042
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nAveragingResult result\n'
p4043
sg21
S'package_modeler'
p4044
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/msg/AveragingActionResult.msg'
p4045
sbsS'visualization_msgs/MarkerArray'
p4046
g0
(g9
g2
Ntp4047
Rp4048
(dp4049
g13
S'msg'
p4050
sg15
S'visualization_msgs/MarkerArray'
p4051
sg17
S'visualization_msgs'
p4052
sg19
S'\nMarker[] markers\n'
p4053
sg21
S'package_modeler'
p4054
sg23
I0
sg24
S'/opt/ros/melodic/share/visualization_msgs/msg/MarkerArray.msg'
p4055
sbsS'sensor_msgs/PointCloud2'
p4056
g0
(g9
g2
Ntp4057
Rp4058
(dp4059
g13
S'msg'
p4060
sg15
S'sensor_msgs/PointCloud2'
p4061
sg17
S'sensor_msgs'
p4062
sg19
S'\n# This message holds a collection of N-dimensional points, which may\n# contain additional information such as normals, intensity, etc. The\n# point data is stored as a binary blob, its layout described by the\n# contents of the "fields" array.\n\n# The point cloud data may be organized 2d (image-like) or 1d\n# (unordered). Point clouds organized as 2d images may be produced by\n# camera depth sensors such as stereo or time-of-flight.\n\n# Time of sensor data acquisition, and the coordinate frame ID (for 3d\n# points).\nHeader header\n\n# 2D structure of the point cloud. If the cloud is unordered, height is\n# 1 and width is the length of the point cloud.\nuint32 height\nuint32 width\n\n# Describes the channels and their layout in the binary data blob.\nPointField[] fields\n\nbool    is_bigendian # Is this data bigendian?\nuint32  point_step   # Length of a point in bytes\nuint32  row_step     # Length of a row in bytes\nuint8[] data         # Actual point data, size is (row_step*height)\n\nbool is_dense        # True if there are no invalid points\n'
p4063
sg21
S'package_modeler'
p4064
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/PointCloud2.msg'
p4065
sbsS'sensor_msgs/Illuminance'
p4066
g0
(g9
g2
Ntp4067
Rp4068
(dp4069
g13
S'msg'
p4070
sg15
S'sensor_msgs/Illuminance'
p4071
sg17
S'sensor_msgs'
p4072
sg19
S"\n # Single photometric illuminance measurement.  Light should be assumed to be\n # measured along the sensor's x-axis (the area of detection is the y-z plane).\n # The illuminance should have a 0 or positive value and be received with\n # the sensor's +X axis pointing toward the light source.\n\n # Photometric illuminance is the measure of the human eye's sensitivity of the\n # intensity of light encountering or passing through a surface.\n\n # All other Photometric and Radiometric measurements should\n # not use this message.\n # This message cannot represent:\n # Luminous intensity (candela/light source output)\n # Luminance (nits/light output per area)\n # Irradiance (watt/area), etc.\n\n Header header           # timestamp is the time the illuminance was measured\n                         # frame_id is the location and direction of the reading\n\n float64 illuminance     # Measurement of the Photometric Illuminance in Lux.\n\n float64 variance        # 0 is interpreted as variance unknown"
p4073
sg21
S'package_modeler'
p4074
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/Illuminance.msg'
p4075
sbsS'dynamic_reconfigure/IntParameter'
p4076
g0
(g9
g2
Ntp4077
Rp4078
(dp4079
g13
S'msg'
p4080
sg15
S'dynamic_reconfigure/IntParameter'
p4081
sg17
S'dynamic_reconfigure'
p4082
sg19
S'\nstring name\nint32 value\n'
p4083
sg21
S'package_modeler'
p4084
sg23
I0
sg24
S'/opt/ros/melodic/share/dynamic_reconfigure/msg/IntParameter.msg'
p4085
sbsS'rospy_tutorials/Floats'
p4086
g0
(g9
g2
Ntp4087
Rp4088
(dp4089
g13
S'msg'
p4090
sg15
S'rospy_tutorials/Floats'
p4091
sg17
S'rospy_tutorials'
p4092
sg19
S'\nfloat32[] data\n'
p4093
sg21
S'package_modeler'
p4094
sg23
I0
sg24
S'/opt/ros/melodic/share/rospy_tutorials/msg/Floats.msg'
p4095
sbsS'geographic_msgs/GeographicMapChanges'
p4096
g0
(g9
g2
Ntp4097
Rp4098
(dp4099
g13
S'msg'
p4100
sg15
S'geographic_msgs/GeographicMapChanges'
p4101
sg17
S'geographic_msgs'
p4102
sg19
S'\n# A list of geographic map changes.\n\nHeader header                   # stamp specifies time of change\n                                # frame_id (normally /map)\n\nGeographicMap diffs             # new and changed points and features\nuuid_msgs/UniqueID[] deletes    # deleted map components\n'
p4103
sg21
S'package_modeler'
p4104
sg23
I0
sg24
S'/opt/ros/melodic/share/geographic_msgs/msg/GeographicMapChanges.msg'
p4105
sbsS'visualization_msgs/ImageMarker'
p4106
g0
(g9
g2
Ntp4107
Rp4108
(dp4109
g13
S'msg'
p4110
sg15
S'visualization_msgs/ImageMarker'
p4111
sg17
S'visualization_msgs'
p4112
sg19
S'\nuint8 CIRCLE=0\nuint8 LINE_STRIP=1\nuint8 LINE_LIST=2\nuint8 POLYGON=3\nuint8 POINTS=4\n\nuint8 ADD=0\nuint8 REMOVE=1\n\nHeader header\nstring ns\t\t# namespace, used with id to form a unique id\nint32 id          \t# unique id within the namespace\nint32 type        \t# CIRCLE/LINE_STRIP/etc.\nint32 action      \t# ADD/REMOVE\ngeometry_msgs/Point position # 2D, in pixel-coords\nfloat32 scale\t \t# the diameter for a circle, etc.\nstd_msgs/ColorRGBA outline_color\nuint8 filled\t\t# whether to fill in the shape with color\nstd_msgs/ColorRGBA fill_color # color [0.0-1.0]\nduration lifetime       # How long the object should last before being automatically deleted.  0 means forever\n\n\ngeometry_msgs/Point[] points # used for LINE_STRIP/LINE_LIST/POINTS/etc., 2D in pixel coords\nstd_msgs/ColorRGBA[] outline_colors # a color for each line, point, etc.'
p4113
sg21
S'package_modeler'
p4114
sg23
I0
sg24
S'/opt/ros/melodic/share/visualization_msgs/msg/ImageMarker.msg'
p4115
sbsS'moveit_msgs/TrajectoryConstraints'
p4116
g0
(g9
g2
Ntp4117
Rp4118
(dp4119
g13
S'msg'
p4120
sg15
S'moveit_msgs/TrajectoryConstraints'
p4121
sg17
S'moveit_msgs'
p4122
sg19
S'\n# The array of constraints to consider along the trajectory\nConstraints[] constraints\n'
p4123
sg21
S'package_modeler'
p4124
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/TrajectoryConstraints.msg'
p4125
sbsS'moveit_msgs/PlaceActionResult'
p4126
g0
(g9
g2
Ntp4127
Rp4128
(dp4129
g13
S'msg'
p4130
sg15
S'moveit_msgs/PlaceActionResult'
p4131
sg17
S'moveit_msgs'
p4132
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nHeader header\nactionlib_msgs/GoalStatus status\nPlaceResult result\n'
p4133
sg21
S'package_modeler'
p4134
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/msg/PlaceActionResult.msg'
p4135
sbsS'sensor_msgs/PointField'
p4136
g0
(g9
g2
Ntp4137
Rp4138
(dp4139
g13
S'msg'
p4140
sg15
S'sensor_msgs/PointField'
p4141
sg17
S'sensor_msgs'
p4142
sg19
S'\n# This message holds the description of one point entry in the\n# PointCloud2 message format.\nuint8 INT8    = 1\nuint8 UINT8   = 2\nuint8 INT16   = 3\nuint8 UINT16  = 4\nuint8 INT32   = 5\nuint8 UINT32  = 6\nuint8 FLOAT32 = 7\nuint8 FLOAT64 = 8\n\nstring name      # Name of field\nuint32 offset    # Offset from start of point struct\nuint8  datatype  # Datatype enumeration, see above\nuint32 count     # How many elements in the field\n'
p4143
sg21
S'package_modeler'
p4144
sg23
I0
sg24
S'/opt/ros/melodic/share/sensor_msgs/msg/PointField.msg'
p4145
sbsS'cartographer_ros_msgs/SubmapList'
p4146
g0
(g9
g2
Ntp4147
Rp4148
(dp4149
g13
S'msg'
p4150
sg15
S'cartographer_ros_msgs/SubmapList'
p4151
sg17
S'cartographer_ros_msgs'
p4152
sg19
S'\n# Copyright 2016 The Cartographer Authors\n#\n# Licensed under the Apache License, Version 2.0 (the "License");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstd_msgs/Header header\ncartographer_ros_msgs/SubmapEntry[] submap\n'
p4153
sg21
S'package_modeler'
p4154
sg23
I0
sg24
S'/opt/ros/melodic/share/cartographer_ros_msgs/msg/SubmapList.msg'
p4155
sbsS'nmea_msgs/Gprmc'
p4156
g0
(g9
g2
Ntp4157
Rp4158
(dp4159
g13
S'msg'
p4160
sg15
S'nmea_msgs/Gprmc'
p4161
sg17
S'nmea_msgs'
p4162
sg19
S'\n# Message from GPRMC NMEA String\nHeader header\n\nstring message_id\n\nfloat64 utc_seconds\nstring position_status\n\nfloat64 lat\nfloat64 lon\n\nstring lat_dir\nstring lon_dir\n\nfloat32 speed\nfloat32 track\nstring date\nfloat32 mag_var\nstring mag_var_direction\nstring mode_indicator\n'
p4163
sg21
S'package_modeler'
p4164
sg23
I0
sg24
S'/opt/ros/melodic/share/nmea_msgs/msg/Gprmc.msg'
p4165
sbsS'nav_msgs/MapMetaData'
p4166
g0
(g9
g2
Ntp4167
Rp4168
(dp4169
g13
S'msg'
p4170
sg15
S'nav_msgs/MapMetaData'
p4171
sg17
S'nav_msgs'
p4172
sg19
S'\n# This hold basic information about the characterists of the OccupancyGrid\n\n# The time at which the map was loaded\ntime map_load_time\n# The map resolution [m/cell]\nfloat32 resolution\n# Map width [cells]\nuint32 width\n# Map height [cells]\nuint32 height\n# The origin of the map [m, m, rad].  This is the real-world pose of the\n# cell (0,0) in the map.\ngeometry_msgs/Pose origin'
p4173
sg21
S'package_modeler'
p4174
sg23
I0
sg24
S'/opt/ros/melodic/share/nav_msgs/msg/MapMetaData.msg'
p4175
sbsS'twist_mux_msgs/JoyTurboAction'
p4176
g0
(g9
g2
Ntp4177
Rp4178
(dp4179
g13
S'msg'
p4180
sg15
S'twist_mux_msgs/JoyTurboAction'
p4181
sg17
S'twist_mux_msgs'
p4182
sg19
S'\n# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\nJoyTurboActionGoal action_goal\nJoyTurboActionResult action_result\nJoyTurboActionFeedback action_feedback\n'
p4183
sg21
S'package_modeler'
p4184
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/msg/JoyTurboAction.msg'
p4185
sbsS'dynamic_reconfigure/GroupState'
p4186
g0
(g9
g2
Ntp4187
Rp4188
(dp4189
g13
S'msg'
p4190
sg15
S'dynamic_reconfigure/GroupState'
p4191
sg17
S'dynamic_reconfigure'
p4192
sg19
S'\nstring name\nbool state\nint32 id\nint32 parent\n'
p4193
sg21
S'package_modeler'
p4194
sg23
I0
sg24
S'/opt/ros/melodic/share/dynamic_reconfigure/msg/GroupState.msg'
p4195
sbsS'dynamic_reconfigure/Group'
p4196
g0
(g9
g2
Ntp4197
Rp4198
(dp4199
g13
S'msg'
p4200
sg15
S'dynamic_reconfigure/Group'
p4201
sg17
S'dynamic_reconfigure'
p4202
sg19
S'\nstring name\nstring type\nParamDescription[] parameters\nint32 parent \nint32 id\n'
p4203
sg21
S'package_modeler'
p4204
sg23
I0
sg24
S'/opt/ros/melodic/share/dynamic_reconfigure/msg/Group.msg'
p4205
sbssb.