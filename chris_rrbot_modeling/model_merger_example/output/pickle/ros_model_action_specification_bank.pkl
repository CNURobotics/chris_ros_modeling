ccopy_reg
_reconstructor
p0
(cchris_ros_modeling.specifications.type_specification
TypeSpecificationBank
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'names_to_metamodels'
p6
(dp7
S'moveit_msgs/Place'
p8
g0
(cchris_ros_modeling.specifications.type_specification
TypeSpecification
p9
g2
Ntp10
Rp11
(dp12
S'construct_type'
p13
S'action'
p14
sS'name'
p15
S'moveit_msgs/Place'
p16
sS'package'
p17
S'moveit_msgs'
p18
sS'spec'
p19
S"\n# An action for placing an object\n\n# which group to be used to plan for grasping\nstring group_name\n\n# the name of the attached object to place\nstring attached_object_name\n\n# a list of possible transformations for placing the object\nPlaceLocation[] place_locations\n\n# if the user prefers setting the eef pose (same as in pick) rather than \n# the location of the object, this flag should be set to true\nbool place_eef\n\n# the name that the support surface (e.g. table) has in the collision world\n# can be left empty if no name is available\nstring support_surface_name\n\n# whether collisions between the gripper and the support surface should be acceptable\n# during move from pre-place to place and during retreat. Collisions when moving to the\n# pre-place location are still not allowed even if this is set to true.\nbool allow_gripper_support_collision\n\n# Optional constraints to be imposed on every point in the motion plan\nConstraints path_constraints\n\n# The name of the motion planner to use. If no name is specified,\n# a default motion planner will be used\nstring planner_id\n\n# an optional list of obstacles that we have semantic information about\n# and that can be touched/pushed/moved in the course of placing;\n# CAREFUL: If the object name 'all' is used, collisions with all objects are disabled during the approach & retreat.\nstring[] allowed_touch_objects\n\n# The maximum amount of time the motion planner is allowed to plan for\nfloat64 allowed_planning_time\n\n# Planning options\nPlanningOptions planning_options\n\n---\n\n# The result of the place attempt\nMoveItErrorCodes error_code\n\n# The full starting state of the robot at the start of the trajectory\nRobotState trajectory_start\n\n# The trajectory that moved group produced for execution\nRobotTrajectory[] trajectory_stages\n\nstring[] trajectory_descriptions\n\n# The successful place location, if any\nPlaceLocation place_location\n\n# The amount of time in seconds it took to complete the plan\nfloat64 planning_time\n---\n\n# The internal state that the place action currently is in\nstring state\n"
p20
sS'source'
p21
S'package_modeler'
p22
sS'version'
p23
I0
sS'file_path'
p24
S'/opt/ros/melodic/share/moveit_msgs/action/Place.action'
p25
sbsS'twist_mux_msgs/JoyPriority'
p26
g0
(g9
g2
Ntp27
Rp28
(dp29
g13
S'action'
p30
sg15
S'twist_mux_msgs/JoyPriority'
p31
sg17
S'twist_mux_msgs'
p32
sg19
S'\n---\n---\n'
p33
sg21
S'package_modeler'
p34
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/action/JoyPriority.action'
p35
sbsS'control_msgs/GripperCommand'
p36
g0
(g9
g2
Ntp37
Rp38
(dp39
g13
S'action'
p40
sg15
S'control_msgs/GripperCommand'
p41
sg17
S'control_msgs'
p42
sg19
S'\nGripperCommand command\n---\nfloat64 position  # The current gripper gap size (in meters)\nfloat64 effort    # The current effort exerted (in Newtons)\nbool stalled      # True iff the gripper is exerting max effort and not moving\nbool reached_goal # True iff the gripper position has reached the commanded setpoint\n---\nfloat64 position  # The current gripper gap size (in meters)\nfloat64 effort    # The current effort exerted (in Newtons)\nbool stalled      # True iff the gripper is exerting max effort and not moving\nbool reached_goal # True iff the gripper position has reached the commanded setpoint\n'
p43
sg21
S'package_modeler'
p44
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/action/GripperCommand.action'
p45
sbsS'twist_mux_msgs/JoyTurbo'
p46
g0
(g9
g2
Ntp47
Rp48
(dp49
g13
S'action'
p50
sg15
S'twist_mux_msgs/JoyTurbo'
p51
sg17
S'twist_mux_msgs'
p52
sg19
S'\n---\n---\n'
p53
sg21
S'package_modeler'
p54
sg23
I0
sg24
S'/opt/ros/melodic/share/twist_mux_msgs/action/JoyTurbo.action'
p55
sbsS'turtle_actionlib/Shape'
p56
g0
(g9
g2
Ntp57
Rp58
(dp59
g13
S'action'
p60
sg15
S'turtle_actionlib/Shape'
p61
sg17
S'turtle_actionlib'
p62
sg19
S'\n#goal definition\nint32 edges\nfloat32 radius\n---\n#result definition\nfloat32 interior_angle\nfloat32 apothem\n---\n#feedback\n\n'
p63
sg21
S'package_modeler'
p64
sg23
I0
sg24
S'/opt/ros/melodic/share/turtle_actionlib/action/Shape.action'
p65
sbsS'control_msgs/SingleJointPosition'
p66
g0
(g9
g2
Ntp67
Rp68
(dp69
g13
S'action'
p70
sg15
S'control_msgs/SingleJointPosition'
p71
sg17
S'control_msgs'
p72
sg19
S'\nfloat64 position\nduration min_duration\nfloat64 max_velocity\n---\n---\nHeader header\nfloat64 position\nfloat64 velocity\nfloat64 error\n'
p73
sg21
S'package_modeler'
p74
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/action/SingleJointPosition.action'
p75
sbsS'control_msgs/PointHead'
p76
g0
(g9
g2
Ntp77
Rp78
(dp79
g13
S'action'
p80
sg15
S'control_msgs/PointHead'
p81
sg17
S'control_msgs'
p82
sg19
S'\ngeometry_msgs/PointStamped target\ngeometry_msgs/Vector3 pointing_axis\nstring pointing_frame\nduration min_duration\nfloat64 max_velocity\n---\n---\nfloat64 pointing_angle_error\n'
p83
sg21
S'package_modeler'
p84
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/action/PointHead.action'
p85
sbsS'moveit_msgs/Pickup'
p86
g0
(g9
g2
Ntp87
Rp88
(dp89
g13
S'action'
p90
sg15
S'moveit_msgs/Pickup'
p91
sg17
S'moveit_msgs'
p92
sg19
S"\n# An action for picking up an object\n\n# The name of the object to pick up (as known in the planning scene)\nstring target_name\n\n# which group should be used to plan for pickup\nstring group_name\n\n# which end-effector to be used for pickup (ideally descending from the group above)\nstring end_effector\n\n# a list of possible grasps to be used. At least one grasp must be filled in\nGrasp[] possible_grasps\n\n# the name that the support surface (e.g. table) has in the collision map\n# can be left empty if no name is available\nstring support_surface_name\n\n# whether collisions between the gripper and the support surface should be acceptable\n# during move from pre-grasp to grasp and during lift. Collisions when moving to the\n# pre-grasp location are still not allowed even if this is set to true.\nbool allow_gripper_support_collision\n\n# The names of the links the object to be attached is allowed to touch;\n# If this is left empty, it defaults to the links in the used end-effector\nstring[] attached_object_touch_links\n\n# Optionally notify the pick action that it should approach the object further,\n# as much as possible (this minimizing the distance to the object before the grasp)\n# along the approach direction; Note: this option changes the grasping poses\n# supplied in possible_grasps[] such that they are closer to the object when possible.\nbool minimize_object_distance\n\n# Optional constraints to be imposed on every point in the motion plan\nConstraints path_constraints\n\n# The name of the motion planner to use. If no name is specified,\n# a default motion planner will be used\nstring planner_id\n\n# an optional list of obstacles that we have semantic information about\n# and that can be touched/pushed/moved in the course of grasping;\n# CAREFUL: If the object name 'all' is used, collisions with all objects are disabled during the approach & lift.\nstring[] allowed_touch_objects\n\n# The maximum amount of time the motion planner is allowed to plan for\nfloat64 allowed_planning_time\n\n# Planning options\nPlanningOptions planning_options\n\n---\n\n# The overall result of the pickup attempt\nMoveItErrorCodes error_code\n\n# The full starting state of the robot at the start of the trajectory\nRobotState trajectory_start\n\n# The trajectory that moved group produced for execution\nRobotTrajectory[] trajectory_stages\n\nstring[] trajectory_descriptions\n\n# The performed grasp, if attempt was successful\nGrasp grasp\n\n# The amount of time in seconds it took to complete the plan\nfloat64 planning_time\n---\n\n# The internal state that the pickup action currently is in\nstring state\n"
p93
sg21
S'package_modeler'
p94
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/action/Pickup.action'
p95
sbsS'actionlib/TestRequest'
p96
g0
(g9
g2
Ntp97
Rp98
(dp99
g13
S'action'
p100
sg15
S'actionlib/TestRequest'
p101
sg17
S'actionlib'
p102
sg19
S'\nint32 TERMINATE_SUCCESS = 0\nint32 TERMINATE_ABORTED = 1\nint32 TERMINATE_REJECTED = 2\nint32 TERMINATE_LOSE = 3\nint32 TERMINATE_DROP = 4\nint32 TERMINATE_EXCEPTION = 5\nint32 terminate_status\nbool ignore_cancel  # If true, ignores requests to cancel\nstring result_text\nint32 the_result    # Desired value for the_result in the Result\nbool is_simple_client\nduration delay_accept  # Delays accepting the goal by this amount of time\nduration delay_terminate  # Delays terminating for this amount of time\nduration pause_status  # Pauses the status messages for this amount of time\n---\nint32 the_result\nbool is_simple_server\n---\n'
p103
sg21
S'package_modeler'
p104
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/action/TestRequest.action'
p105
sbsS'actionlib/TwoInts'
p106
g0
(g9
g2
Ntp107
Rp108
(dp109
g13
S'action'
p110
sg15
S'actionlib/TwoInts'
p111
sg17
S'actionlib'
p112
sg19
S'\nint64 a\nint64 b\n---\nint64 sum\n---\n'
p113
sg21
S'package_modeler'
p114
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/action/TwoInts.action'
p115
sbsS'actionlib_tutorials/Averaging'
p116
g0
(g9
g2
Ntp117
Rp118
(dp119
g13
S'action'
p120
sg15
S'actionlib_tutorials/Averaging'
p121
sg17
S'actionlib_tutorials'
p122
sg19
S'\n#goal definition\nint32 samples\n---\n#result definition\nfloat32 mean\nfloat32 std_dev\n---\n#feedback\nint32 sample\nfloat32 data\nfloat32 mean\nfloat32 std_dev\n'
p123
sg21
S'package_modeler'
p124
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/action/Averaging.action'
p125
sbsS'moveit_msgs/ExecuteTrajectory'
p126
g0
(g9
g2
Ntp127
Rp128
(dp129
g13
S'action'
p130
sg15
S'moveit_msgs/ExecuteTrajectory'
p131
sg17
S'moveit_msgs'
p132
sg19
S'\n# The trajectory to execute\nRobotTrajectory trajectory\n\n---\n\n# Error code - encodes the overall reason for failure\nMoveItErrorCodes error_code\n\n---\n\n# The internal state that the move group action currently is in\nstring state\n'
p133
sg21
S'package_modeler'
p134
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/action/ExecuteTrajectory.action'
p135
sbsS'tf2_msgs/LookupTransform'
p136
g0
(g9
g2
Ntp137
Rp138
(dp139
g13
S'action'
p140
sg15
S'tf2_msgs/LookupTransform'
p141
sg17
S'tf2_msgs'
p142
sg19
S'\n#Simple API\nstring target_frame\nstring source_frame\ntime source_time\nduration timeout\n\n#Advanced API\ntime target_time\nstring fixed_frame\n\n#Whether or not to use the advanced API\nbool advanced\n\n---\ngeometry_msgs/TransformStamped transform\ntf2_msgs/TF2Error error\n---\n'
p143
sg21
S'package_modeler'
p144
sg23
I0
sg24
S'/opt/ros/melodic/share/tf2_msgs/action/LookupTransform.action'
p145
sbsS'actionlib_tutorials/Fibonacci'
p146
g0
(g9
g2
Ntp147
Rp148
(dp149
g13
S'action'
p150
sg15
S'actionlib_tutorials/Fibonacci'
p151
sg17
S'actionlib_tutorials'
p152
sg19
S'\n#goal definition\nint32 order\n---\n#result definition\nint32[] sequence\n---\n#feedback\nint32[] sequence\n'
p153
sg21
S'package_modeler'
p154
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib_tutorials/action/Fibonacci.action'
p155
sbsS'nav_msgs/GetMap'
p156
g0
(g9
g2
Ntp157
Rp158
(dp159
g13
S'action'
p160
sg15
S'nav_msgs/GetMap'
p161
sg17
S'nav_msgs'
p162
sg19
S'\n# Get the map as a nav_msgs/OccupancyGrid\n---\nnav_msgs/OccupancyGrid map\n---\n# no feedback'
p163
sg21
S'package_modeler'
p164
sg23
I0
sg24
S'/opt/ros/melodic/share/nav_msgs/action/GetMap.action'
p165
sbsS'object_recognition_msgs/ObjectRecognition'
p166
g0
(g9
g2
Ntp167
Rp168
(dp169
g13
S'action'
p170
sg15
S'object_recognition_msgs/ObjectRecognition'
p171
sg17
S'object_recognition_msgs'
p172
sg19
S'\n# Optional ROI to use for the object detection\nbool use_roi\nfloat32[] filter_limits\n---\n# Send the found objects, see the msg files for docs\nobject_recognition_msgs/RecognizedObjectArray recognized_objects\n---\n#no feedback\n'
p173
sg21
S'package_modeler'
p174
sg23
I0
sg24
S'/opt/ros/melodic/share/object_recognition_msgs/action/ObjectRecognition.action'
p175
sbsS'control_msgs/FollowJointTrajectory'
p176
g0
(g9
g2
Ntp177
Rp178
(dp179
g13
S'action'
p180
sg15
S'control_msgs/FollowJointTrajectory'
p181
sg17
S'control_msgs'
p182
sg19
S'\n# The joint trajectory to follow\ntrajectory_msgs/JointTrajectory trajectory\n\n# Tolerances for the trajectory.  If the measured joint values fall\n# outside the tolerances the trajectory goal is aborted.  Any\n# tolerances that are not specified (by being omitted or set to 0) are\n# set to the defaults for the action server (often taken from the\n# parameter server).\n\n# Tolerances applied to the joints as the trajectory is executed.  If\n# violated, the goal aborts with error_code set to\n# PATH_TOLERANCE_VIOLATED.\nJointTolerance[] path_tolerance\n\n# To report success, the joints must be within goal_tolerance of the\n# final trajectory value.  The goal must be achieved by time the\n# trajectory ends plus goal_time_tolerance.  (goal_time_tolerance\n# allows some leeway in time, so that the trajectory goal can still\n# succeed even if the joints reach the goal some time after the\n# precise end time of the trajectory).\n#\n# If the joints are not within goal_tolerance after "trajectory finish\n# time" + goal_time_tolerance, the goal aborts with error_code set to\n# GOAL_TOLERANCE_VIOLATED\nJointTolerance[] goal_tolerance\nduration goal_time_tolerance\n\n---\nint32 error_code\nint32 SUCCESSFUL = 0\nint32 INVALID_GOAL = -1\nint32 INVALID_JOINTS = -2\nint32 OLD_HEADER_TIMESTAMP = -3\nint32 PATH_TOLERANCE_VIOLATED = -4\nint32 GOAL_TOLERANCE_VIOLATED = -5\n\n# Human readable description of the error code. Contains complementary\n# information that is especially useful when execution fails, for instance:\n# - INVALID_GOAL: The reason for the invalid goal (e.g., the requested\n#   trajectory is in the past).\n# - INVALID_JOINTS: The mismatch between the expected controller joints\n#   and those provided in the goal.\n# - PATH_TOLERANCE_VIOLATED and GOAL_TOLERANCE_VIOLATED: Which joint\n#   violated which tolerance, and by how much.\nstring error_string\n\n---\nHeader header\nstring[] joint_names\ntrajectory_msgs/JointTrajectoryPoint desired\ntrajectory_msgs/JointTrajectoryPoint actual\ntrajectory_msgs/JointTrajectoryPoint error\n'
p183
sg21
S'package_modeler'
p184
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/action/FollowJointTrajectory.action'
p185
sbsS'move_base_msgs/MoveBase'
p186
g0
(g9
g2
Ntp187
Rp188
(dp189
g13
S'action'
p190
sg15
S'move_base_msgs/MoveBase'
p191
sg17
S'move_base_msgs'
p192
sg19
S'\ngeometry_msgs/PoseStamped target_pose\n---\n---\ngeometry_msgs/PoseStamped base_position\n'
p193
sg21
S'package_modeler'
p194
sg23
I0
sg24
S'/opt/ros/melodic/share/move_base_msgs/action/MoveBase.action'
p195
sbsS'actionlib/Test'
p196
g0
(g9
g2
Ntp197
Rp198
(dp199
g13
S'action'
p200
sg15
S'actionlib/Test'
p201
sg17
S'actionlib'
p202
sg19
S'\nint32 goal\n---\nint32 result\n---\nint32 feedback\n'
p203
sg21
S'package_modeler'
p204
sg23
I0
sg24
S'/opt/ros/melodic/share/actionlib/action/Test.action'
p205
sbsS'moveit_msgs/MoveGroupSequence'
p206
g0
(g9
g2
Ntp207
Rp208
(dp209
g13
S'action'
p210
sg15
S'moveit_msgs/MoveGroupSequence'
p211
sg17
S'moveit_msgs'
p212
sg19
S'\n# A list of motion commands - one for each section of the sequence\nMotionSequenceRequest request\n\n# Planning options\nPlanningOptions planning_options\n---\n\n# Response comprising information on all sections of the sequence\nMotionSequenceResponse response\n\n---\n\n# The internal state that the move group action currently is in\nstring state\n'
p213
sg21
S'package_modeler'
p214
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/action/MoveGroupSequence.action'
p215
sbsS'moveit_msgs/MoveGroup'
p216
g0
(g9
g2
Ntp217
Rp218
(dp219
g13
S'action'
p220
sg15
S'moveit_msgs/MoveGroup'
p221
sg17
S'moveit_msgs'
p222
sg19
S'\n# Motion planning request to pass to planner\nMotionPlanRequest request\n\n# Planning options\nPlanningOptions planning_options\n\n---\n\n# An error code reflecting what went wrong\nMoveItErrorCodes error_code\n\n# The full starting state of the robot at the start of the trajectory\nmoveit_msgs/RobotState trajectory_start\n\n# The trajectory that moved group produced for execution\nmoveit_msgs/RobotTrajectory planned_trajectory\n\n# The trace of the trajectory recorded during execution\nmoveit_msgs/RobotTrajectory executed_trajectory\n\n# The amount of time it took to complete the motion plan\nfloat64 planning_time\n\n---\n\n# The internal state that the move group action currently is in\nstring state\n'
p223
sg21
S'package_modeler'
p224
sg23
I0
sg24
S'/opt/ros/melodic/share/moveit_msgs/action/MoveGroup.action'
p225
sbsS'control_msgs/JointTrajectory'
p226
g0
(g9
g2
Ntp227
Rp228
(dp229
g13
S'action'
p230
sg15
S'control_msgs/JointTrajectory'
p231
sg17
S'control_msgs'
p232
sg19
S'\ntrajectory_msgs/JointTrajectory trajectory\n---\n---\n'
p233
sg21
S'package_modeler'
p234
sg23
I0
sg24
S'/opt/ros/melodic/share/control_msgs/action/JointTrajectory.action'
p235
sbssb.